name: Check openDAQ version
on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [master, release/**]
    paths-ignore:
      - '*.md'
      - 'media/**'
      - '.github/**'
      - 'docs/**'
      - 'examples/**'
      - 'app/**'

  workflow_dispatch:

jobs:
  check_version:
    runs-on: ubuntu-22.04
    name: Check SDK Version
    timeout-minutes: 2
    steps:
      - name: Checkout head branch
        uses: actions/checkout@v4

      - name: Read head openDAQ version
        id: head_daq_version
        working-directory: .
        run: |
            DAQ_VER=$(cat opendaq_version)
            echo Head openDAQ version: $DAQ_VER
            echo "HEAD_DAQ_VERSION=$DAQ_VER" >> "$GITHUB_OUTPUT"

      - name: Read head documentation version
        id: head_doc_version
        working-directory: ./docs/Antora
        run: |
            DOC_VER=$(grep -Po '\d.\d?(.\d?(.\d))' antora.yml)
            echo Head documentation version: $DOC_VER
            echo "HEAD_DOC_VERSION=$DOC_VER" >> "$GITHUB_OUTPUT"

      - name: Checkout head branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.sha }}

      - name: Read base openDAQ version
        id: base_daq_version
        working-directory: .
        run: |
            DAQ_VER=$(cat opendaq_version)
            echo Base openDAQ version: $DAQ_VER
            echo "BASE_DAQ_VERSION=$DAQ_VER" >> "$GITHUB_OUTPUT"

      - name: Read base documentation version
        id: base_doc_version
        working-directory: ./docs/Antora
        run: |
            DOC_VER=$(grep -Po '\d.\d?(.\d?(.\d))' antora.yml)
            echo Base documentation version: $DOC_VER
            echo "BASE_DOC_VERSION=$DOC_VER" >> "$GITHUB_OUTPUT"

      - name: Compare openDAQ versions
        run:  |
            HEAD_DAQ_VER=${{ steps.head_daq_version.outputs.HEAD_DAQ_VERSION }}
            BASE_DAQ_VER=${{ steps.base_daq_version.outputs.BASE_DAQ_VERSION }}
            HEAD_DOC_VER=${{ steps.head_doc_version.outputs.HEAD_DOC_VERSION }}
            BASE_DOC_VER=${{ steps.base_doc_version.outputs.BASE_DOC_VERSION }}
            echo Head openDAQ version: $HEAD_DAQ_VER
            echo Base openDAQ version: $BASE_DAQ_VER            
            echo Head documentation version: $HEAD_DOC_VER
            echo Base documentation version: $BASE_DOC_VER
            if [ "$HEAD_DAQ_VER" != "$HEAD_DOC_VER" ];
            then
              echo openDAQ and documentation versions must match!
              exit 1
            fi
            if [ "$HEAD_DAQ_VER" = "$BASE_DAQ_VER" ];
            then
              echo Head openDAQ version must not be equal to base!
              exit 1
            fi
            if [ "$HEAD_DAQ_VER" = "`echo -e "$HEAD_DAQ_VER\n$BASE_DAQ_VER" | sort -V | head -n1`" ];
            then
              echo Head openDAQ version must not be lower than base!
              exit 1
            fi