name: openDAQ regression tests

on:
  workflow_dispatch:
  
  push:
    branches: [regression-tests]
  
env:
  cmake_preset: regression_tests
  test_path: ${{ github.workspace }}/junit_reports/
  build_path: ${{ github.workspace }}/build
  package_path: ${{ github.workspace }}/build/_packages/

jobs:
  build_linux:
    runs-on: ubuntu-latest
    name: ${{ matrix.name }}
    # ${{ }} expression syntax because of leading '!'
    if: ${{ ! github.event.pull_request.draft }}

    concurrency:
      group: ${{ github.workflow }}-${{ github.head_ref }}-${{ matrix.name }}
      cancel-in-progress: true
    timeout-minutes: 180
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Ubuntu 22.04 gcc-12 Release
            image: ubuntu:22.04
            cmake_generator: Ninja
            cmake_build_type: Release
            apt_packages: g++-12
            cc: gcc-12
            cxx: g++-12
            cpack: DEB

    container:
      image: ${{ matrix.image }}
      env:
        TZ: Europe/Berlin
        DEBIAN_FRONTEND: noninteractive
        CC: ${{ matrix.cc }}
        CXX: ${{ matrix.cxx }}

    steps:
      - name: Install basic dependencies
        run: |
          apt-get update
          apt-get install -y git openssh-client
          
      - name: Disable git safe directory checks
        run : git config --global --add safe.directory '*'
        
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install build dependencies
        run: |
          apt-get install -y --no-install-recommends ${{ matrix.apt_packages }} \
            lld ninja-build curl \
            python3-dev python3-numpy python3-distutils python3-pip \
            mono-runtime libmono-system-json-microsoft4.0-cil libmono-system-data4.0-cil \
            libx11-dev libxcursor-dev libxrandr-dev libgl-dev libudev-dev libfreetype6-dev

      - name: Install latest CMake
        run: pip install cmake

      - name: Configure
        run: |
          mkdir build
          cd build
          cmake -G ${{ matrix.cmake_generator }} --preset ${{ env.cmake_preset }} ${{ matrix.cmake_defines }} -DCI_GIT_BRANCH=${{ github.head_ref }} -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }} ..

      - name: Build
        working-directory: build
        run: cmake --build .

      - name: Test
        working-directory: build
        env:
          GTEST_OUTPUT: "xml:${{ env.test_path }}"
        run: ctest --output-on-failure -C ${{ matrix.cmake_build_type }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Unit Test Results (${{ matrix.name }})
          path: ${{ env.test_path }}

      - name: Package
        if: matrix.cpack != ''
        working-directory: build
        run: cpack -C ${{ matrix.cmake_build_type }} -G ${{ matrix.cpack }}

      - name: Upload package
        if: matrix.cpack != ''
        uses: actions/upload-artifact@v3
        with:
          name: Packages (${{ matrix.name }})
          path: ${{ env.package_path }}
          retention-days: 7
