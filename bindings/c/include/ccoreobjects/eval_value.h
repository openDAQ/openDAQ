//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.5.0) on 01.04.2025 17:02:05.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include "ccommon.h"

    typedef struct EvalValue EvalValue;
    typedef struct String String;
    typedef struct PropertyObject PropertyObject;
    typedef struct List List;
    typedef struct Function Function;

    EXPORTED extern const IntfID EVAL_VALUE_INTF_ID;

    ErrCode EXPORTED EvalValue_getEval(EvalValue* self, String** eval);
    ErrCode EXPORTED EvalValue_getResult(EvalValue* self, BaseObject** obj);
    ErrCode EXPORTED EvalValue_cloneWithOwner(EvalValue* self, PropertyObject* owner, EvalValue** clonedValue);
    ErrCode EXPORTED EvalValue_getParseErrorCode(EvalValue* self);
    ErrCode EXPORTED EvalValue_getPropertyReferences(EvalValue* self, List** propertyReferences);
    ErrCode EXPORTED EvalValue_getResultNoLock(EvalValue* self, BaseObject** obj);
    ErrCode EXPORTED EvalValue_createEvalValue(EvalValue** obj, String* eval);
    ErrCode EXPORTED EvalValue_createEvalValueArgs(EvalValue** obj, String* eval, List* args);
    ErrCode EXPORTED EvalValue_createEvalValueFunc(EvalValue** obj, String* eval, Function* func);

#ifdef __cplusplus
}
#endif
