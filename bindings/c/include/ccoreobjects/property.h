//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.5.0) on 01.04.2025 17:02:09.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include "ccommon.h"

    typedef struct Property Property;
    typedef struct String String;
    typedef struct Unit Unit;
    typedef struct Number Number;
    typedef struct List List;
    typedef struct Validator Validator;
    typedef struct Coercer Coercer;
    typedef struct CallableInfo CallableInfo;
    typedef struct StructType StructType;
    typedef struct Event Event;
    typedef struct Boolean Boolean;
    typedef struct Integer Integer;
    typedef struct FloatObject FloatObject;
    typedef struct Dict Dict;
    typedef struct Ratio Ratio;
    typedef struct PropertyObject PropertyObject;
    typedef struct EvalValue EvalValue;
    typedef struct Struct Struct;
    typedef struct Enumeration Enumeration;

    EXPORTED extern const IntfID PROPERTY_INTF_ID;

    ErrCode EXPORTED Property_getValueType(Property* self, CoreType* type);
    ErrCode EXPORTED Property_getKeyType(Property* self, CoreType* type);
    ErrCode EXPORTED Property_getItemType(Property* self, CoreType* type);
    ErrCode EXPORTED Property_getName(Property* self, String** name);
    ErrCode EXPORTED Property_getDescription(Property* self, String** description);
    ErrCode EXPORTED Property_getUnit(Property* self, Unit** unit);
    ErrCode EXPORTED Property_getMinValue(Property* self, Number** min);
    ErrCode EXPORTED Property_getMaxValue(Property* self, Number** max);
    ErrCode EXPORTED Property_getDefaultValue(Property* self, BaseObject** value);
    ErrCode EXPORTED Property_getSuggestedValues(Property* self, List** values);
    ErrCode EXPORTED Property_getVisible(Property* self, Bool* visible);
    ErrCode EXPORTED Property_getReadOnly(Property* self, Bool* readOnly);
    ErrCode EXPORTED Property_getSelectionValues(Property* self, BaseObject** values);
    ErrCode EXPORTED Property_getReferencedProperty(Property* self, Property** property);
    ErrCode EXPORTED Property_getIsReferenced(Property* self, Bool* isReferenced);
    ErrCode EXPORTED Property_getValidator(Property* self, Validator** validator);
    ErrCode EXPORTED Property_getCoercer(Property* self, Coercer** coercer);
    ErrCode EXPORTED Property_getCallableInfo(Property* self, CallableInfo** callable);
    ErrCode EXPORTED Property_getStructType(Property* self, StructType** structType);
    ErrCode EXPORTED Property_getOnPropertyValueWrite(Property* self, Event** event);
    ErrCode EXPORTED Property_getOnPropertyValueRead(Property* self, Event** event);
    ErrCode EXPORTED Property_getValue(Property* self, BaseObject** value);
    ErrCode EXPORTED Property_setValue(Property* self, BaseObject* value);
    ErrCode EXPORTED Property_createBoolProperty(Property** obj, String* name, Boolean* defaultValue, Boolean* visible);
    ErrCode EXPORTED Property_createIntProperty(Property** obj, String* name, Integer* defaultValue, Boolean* visible);
    ErrCode EXPORTED Property_createFloatProperty(Property** obj, String* name, FloatObject* defaultValue, Boolean* visible);
    ErrCode EXPORTED Property_createStringProperty(Property** obj, String* name, String* defaultValue, Boolean* visible);
    ErrCode EXPORTED Property_createListProperty(Property** obj, String* name, List* defaultValue, Boolean* visible);
    ErrCode EXPORTED Property_createDictProperty(Property** obj, String* name, Dict* defaultValue, Boolean* visible);
    ErrCode EXPORTED Property_createRatioProperty(Property** obj, String* name, Ratio* defaultValue, Boolean* visible);
    ErrCode EXPORTED Property_createObjectProperty(Property** obj, String* name, PropertyObject* defaultValue);
    ErrCode EXPORTED Property_createReferenceProperty(Property** obj, String* name, EvalValue* referencedPropertyEval);
    ErrCode EXPORTED Property_createFunctionProperty(Property** obj, String* name, CallableInfo* callableInfo, Boolean* visible);
    ErrCode EXPORTED Property_createSelectionProperty(Property** obj, String* name, List* selectionValues, Integer* defaultValue, Boolean* visible);
    ErrCode EXPORTED Property_createSparseSelectionProperty(Property** obj, String* name, Dict* selectionValues, Integer* defaultValue, Boolean* visible);
    ErrCode EXPORTED Property_createStructProperty(Property** obj, String* name, Struct* defaultValue, Boolean* visible);
    ErrCode EXPORTED Property_createEnumerationProperty(Property** obj, String* name, Enumeration* defaultValue, Boolean* visible);

#ifdef __cplusplus
}
#endif
