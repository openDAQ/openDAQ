//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.6.0) on 27.04.2025 18:33:04.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include <ccommon.h>

    typedef struct PropertyBuilder PropertyBuilder;
    typedef struct Property Property;
    typedef struct String String;
    typedef struct Unit Unit;
    typedef struct Number Number;
    typedef struct List List;
    typedef struct Boolean Boolean;
    typedef struct EvalValue EvalValue;
    typedef struct Validator Validator;
    typedef struct Coercer Coercer;
    typedef struct CallableInfo CallableInfo;
    typedef struct Event Event;
    typedef struct Integer Integer;
    typedef struct FloatObject FloatObject;
    typedef struct Dict Dict;
    typedef struct Ratio Ratio;
    typedef struct PropertyObject PropertyObject;
    typedef struct Struct Struct;
    typedef struct Enumeration Enumeration;

    EXPORTED extern const IntfID PROPERTY_BUILDER_INTF_ID;

    ErrCode EXPORTED PropertyBuilder_build(PropertyBuilder* self, Property** property);
    ErrCode EXPORTED PropertyBuilder_setValueType(PropertyBuilder* self, CoreType type);
    ErrCode EXPORTED PropertyBuilder_getValueType(PropertyBuilder* self, CoreType* type);
    ErrCode EXPORTED PropertyBuilder_setName(PropertyBuilder* self, String* name);
    ErrCode EXPORTED PropertyBuilder_getName(PropertyBuilder* self, String** name);
    ErrCode EXPORTED PropertyBuilder_setDescription(PropertyBuilder* self, String* description);
    ErrCode EXPORTED PropertyBuilder_getDescription(PropertyBuilder* self, String** description);
    ErrCode EXPORTED PropertyBuilder_setUnit(PropertyBuilder* self, Unit* unit);
    ErrCode EXPORTED PropertyBuilder_getUnit(PropertyBuilder* self, Unit** unit);
    ErrCode EXPORTED PropertyBuilder_setMinValue(PropertyBuilder* self, Number* min);
    ErrCode EXPORTED PropertyBuilder_getMinValue(PropertyBuilder* self, Number** min);
    ErrCode EXPORTED PropertyBuilder_setMaxValue(PropertyBuilder* self, Number* max);
    ErrCode EXPORTED PropertyBuilder_getMaxValue(PropertyBuilder* self, Number** max);
    ErrCode EXPORTED PropertyBuilder_setDefaultValue(PropertyBuilder* self, BaseObject* value);
    ErrCode EXPORTED PropertyBuilder_getDefaultValue(PropertyBuilder* self, BaseObject** value);
    ErrCode EXPORTED PropertyBuilder_setSuggestedValues(PropertyBuilder* self, List* values);
    ErrCode EXPORTED PropertyBuilder_getSuggestedValues(PropertyBuilder* self, List** values);
    ErrCode EXPORTED PropertyBuilder_setVisible(PropertyBuilder* self, Boolean* visible);
    ErrCode EXPORTED PropertyBuilder_getVisible(PropertyBuilder* self, Boolean** visible);
    ErrCode EXPORTED PropertyBuilder_setReadOnly(PropertyBuilder* self, Boolean* readOnly);
    ErrCode EXPORTED PropertyBuilder_getReadOnly(PropertyBuilder* self, Boolean** readOnly);
    ErrCode EXPORTED PropertyBuilder_setSelectionValues(PropertyBuilder* self, BaseObject* values);
    ErrCode EXPORTED PropertyBuilder_getSelectionValues(PropertyBuilder* self, BaseObject** values);
    ErrCode EXPORTED PropertyBuilder_setReferencedProperty(PropertyBuilder* self, EvalValue* propertyEval);
    ErrCode EXPORTED PropertyBuilder_getReferencedProperty(PropertyBuilder* self, EvalValue** propertyEval);
    ErrCode EXPORTED PropertyBuilder_setValidator(PropertyBuilder* self, Validator* validator);
    ErrCode EXPORTED PropertyBuilder_getValidator(PropertyBuilder* self, Validator** validator);
    ErrCode EXPORTED PropertyBuilder_setCoercer(PropertyBuilder* self, Coercer* coercer);
    ErrCode EXPORTED PropertyBuilder_getCoercer(PropertyBuilder* self, Coercer** coercer);
    ErrCode EXPORTED PropertyBuilder_setCallableInfo(PropertyBuilder* self, CallableInfo* callable);
    ErrCode EXPORTED PropertyBuilder_getCallableInfo(PropertyBuilder* self, CallableInfo** callable);
    ErrCode EXPORTED PropertyBuilder_setOnPropertyValueWrite(PropertyBuilder* self, Event* event);
    ErrCode EXPORTED PropertyBuilder_getOnPropertyValueWrite(PropertyBuilder* self, Event** event);
    ErrCode EXPORTED PropertyBuilder_setOnPropertyValueRead(PropertyBuilder* self, Event* event);
    ErrCode EXPORTED PropertyBuilder_getOnPropertyValueRead(PropertyBuilder* self, Event** event);
    ErrCode EXPORTED PropertyBuilder_createPropertyBuilder(PropertyBuilder** obj, String* name);
    ErrCode EXPORTED PropertyBuilder_createBoolPropertyBuilder(PropertyBuilder** obj, String* name, Boolean* defaultValue);
    ErrCode EXPORTED PropertyBuilder_createIntPropertyBuilder(PropertyBuilder** obj, String* name, Integer* defaultValue);
    ErrCode EXPORTED PropertyBuilder_createFloatPropertyBuilder(PropertyBuilder** obj, String* name, FloatObject* defaultValue);
    ErrCode EXPORTED PropertyBuilder_createStringPropertyBuilder(PropertyBuilder** obj, String* name, String* defaultValue);
    ErrCode EXPORTED PropertyBuilder_createListPropertyBuilder(PropertyBuilder** obj, String* name, List* defaultValue);
    ErrCode EXPORTED PropertyBuilder_createDictPropertyBuilder(PropertyBuilder** obj, String* name, Dict* defaultValue);
    ErrCode EXPORTED PropertyBuilder_createRatioPropertyBuilder(PropertyBuilder** obj, String* name, Ratio* defaultValue);
    ErrCode EXPORTED PropertyBuilder_createObjectPropertyBuilder(PropertyBuilder** obj, String* name, PropertyObject* defaultValue);
    ErrCode EXPORTED PropertyBuilder_createReferencePropertyBuilder(PropertyBuilder** obj, String* name, EvalValue* referencedPropertyEval);
    ErrCode EXPORTED PropertyBuilder_createFunctionPropertyBuilder(PropertyBuilder** obj, String* name, CallableInfo* callableInfo);
    ErrCode EXPORTED PropertyBuilder_createSelectionPropertyBuilder(PropertyBuilder** obj, String* name, List* selectionValues, Integer* defaultValue);
    ErrCode EXPORTED PropertyBuilder_createSparseSelectionPropertyBuilder(PropertyBuilder** obj, String* name, Dict* selectionValues, Integer* defaultValue);
    ErrCode EXPORTED PropertyBuilder_createStructPropertyBuilder(PropertyBuilder** obj, String* name, Struct* defaultValue);
    ErrCode EXPORTED PropertyBuilder_createEnumerationPropertyBuilder(PropertyBuilder** obj, String* name, Enumeration* defaultValue);

#ifdef __cplusplus
}
#endif
