//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.7.0) on 06.06.2025 19:05:54.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include <ccommon.h>

    typedef struct daqPropertyInternal daqPropertyInternal;
    typedef struct daqProperty daqProperty;
    typedef struct daqPropertyObject daqPropertyObject;
    typedef struct daqString daqString;
    typedef struct daqNumber daqNumber;
    typedef struct daqList daqList;
    typedef struct daqBoolean daqBoolean;
    typedef struct daqEvalValue daqEvalValue;
    typedef struct daqEvent daqEvent;
    typedef struct daqUnit daqUnit;
    typedef struct daqValidator daqValidator;
    typedef struct daqCoercer daqCoercer;
    typedef struct daqCallableInfo daqCallableInfo;
    typedef struct daqStructType daqStructType;

    EXPORTED extern const daqIntfID DAQ_PROPERTY_INTERNAL_INTF_ID;

    daqErrCode EXPORTED daqPropertyInternal_clone(daqPropertyInternal* self, daqProperty** clonedProperty);
    daqErrCode EXPORTED daqPropertyInternal_cloneWithOwner(daqPropertyInternal* self, daqPropertyObject* owner, daqProperty** clonedProperty);
    daqErrCode EXPORTED daqPropertyInternal_getDescriptionUnresolved(daqPropertyInternal* self, daqString** description);
    daqErrCode EXPORTED daqPropertyInternal_getUnitUnresolved(daqPropertyInternal* self, daqBaseObject** unit);
    daqErrCode EXPORTED daqPropertyInternal_getMinValueUnresolved(daqPropertyInternal* self, daqNumber** min);
    daqErrCode EXPORTED daqPropertyInternal_getMaxValueUnresolved(daqPropertyInternal* self, daqNumber** max);
    daqErrCode EXPORTED daqPropertyInternal_getDefaultValueUnresolved(daqPropertyInternal* self, daqBaseObject** value);
    daqErrCode EXPORTED daqPropertyInternal_getSuggestedValuesUnresolved(daqPropertyInternal* self, daqList** values);
    daqErrCode EXPORTED daqPropertyInternal_getVisibleUnresolved(daqPropertyInternal* self, daqBoolean** visible);
    daqErrCode EXPORTED daqPropertyInternal_getReadOnlyUnresolved(daqPropertyInternal* self, daqBoolean** readOnly);
    daqErrCode EXPORTED daqPropertyInternal_getSelectionValuesUnresolved(daqPropertyInternal* self, daqBaseObject** values);
    daqErrCode EXPORTED daqPropertyInternal_getReferencedPropertyUnresolved(daqPropertyInternal* self, daqEvalValue** propertyEval);
    daqErrCode EXPORTED daqPropertyInternal_getValueTypeUnresolved(daqPropertyInternal* self, daqCoreType* coreType);
    daqErrCode EXPORTED daqPropertyInternal_getClassOnPropertyValueRead(daqPropertyInternal* self, daqEvent** event);
    daqErrCode EXPORTED daqPropertyInternal_getClassOnPropertyValueWrite(daqPropertyInternal* self, daqEvent** event);
    daqErrCode EXPORTED daqPropertyInternal_getValueTypeNoLock(daqPropertyInternal* self, daqCoreType* type);
    daqErrCode EXPORTED daqPropertyInternal_getKeyTypeNoLock(daqPropertyInternal* self, daqCoreType* type);
    daqErrCode EXPORTED daqPropertyInternal_getItemTypeNoLock(daqPropertyInternal* self, daqCoreType* type);
    daqErrCode EXPORTED daqPropertyInternal_getDescriptionNoLock(daqPropertyInternal* self, daqString** description);
    daqErrCode EXPORTED daqPropertyInternal_getUnitNoLock(daqPropertyInternal* self, daqUnit** unit);
    daqErrCode EXPORTED daqPropertyInternal_getMinValueNoLock(daqPropertyInternal* self, daqNumber** min);
    daqErrCode EXPORTED daqPropertyInternal_getMaxValueNoLock(daqPropertyInternal* self, daqNumber** max);
    daqErrCode EXPORTED daqPropertyInternal_getDefaultValueNoLock(daqPropertyInternal* self, daqBaseObject** value);
    daqErrCode EXPORTED daqPropertyInternal_getSuggestedValuesNoLock(daqPropertyInternal* self, daqList** values);
    daqErrCode EXPORTED daqPropertyInternal_getVisibleNoLock(daqPropertyInternal* self, daqBool* visible);
    daqErrCode EXPORTED daqPropertyInternal_getReadOnlyNoLock(daqPropertyInternal* self, daqBool* readOnly);
    daqErrCode EXPORTED daqPropertyInternal_getSelectionValuesNoLock(daqPropertyInternal* self, daqBaseObject** values);
    daqErrCode EXPORTED daqPropertyInternal_getReferencedPropertyNoLock(daqPropertyInternal* self, daqProperty** propertyEval);
    daqErrCode EXPORTED daqPropertyInternal_getIsReferencedNoLock(daqPropertyInternal* self, daqBool* isReferenced);
    daqErrCode EXPORTED daqPropertyInternal_getValidatorNoLock(daqPropertyInternal* self, daqValidator** validator);
    daqErrCode EXPORTED daqPropertyInternal_getCoercerNoLock(daqPropertyInternal* self, daqCoercer** coercer);
    daqErrCode EXPORTED daqPropertyInternal_getCallableInfoNoLock(daqPropertyInternal* self, daqCallableInfo** callable);
    daqErrCode EXPORTED daqPropertyInternal_getStructTypeNoLock(daqPropertyInternal* self, daqStructType** structType);
    daqErrCode EXPORTED daqPropertyInternal_overrideDefaultValue(daqPropertyInternal* self, daqBaseObject* newDefaultValue);
    daqErrCode EXPORTED daqPropertyInternal_setValueProtected(daqPropertyInternal* self, daqBaseObject* newValue);

#ifdef __cplusplus
}
#endif
