//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.7.0) on 06.06.2025 19:05:55.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include <ccommon.h>

    typedef struct daqPropertyObjectInternal daqPropertyObjectInternal;
    typedef struct daqProperty daqProperty;
    typedef struct daqProcedure daqProcedure;
    typedef struct daqPropertyObject daqPropertyObject;
    typedef struct daqString daqString;
    typedef struct daqLockGuard daqLockGuard;

    EXPORTED extern const daqIntfID DAQ_PROPERTY_OBJECT_INTERNAL_INTF_ID;

    daqErrCode EXPORTED daqPropertyObjectInternal_checkForReferences(daqPropertyObjectInternal* self, daqProperty* property, daqBool* isReferenced);
    daqErrCode EXPORTED daqPropertyObjectInternal_checkForReferencesNoLock(daqPropertyObjectInternal* self, daqProperty* property, daqBool* isReferenced);
    daqErrCode EXPORTED daqPropertyObjectInternal_enableCoreEventTrigger(daqPropertyObjectInternal* self);
    daqErrCode EXPORTED daqPropertyObjectInternal_disableCoreEventTrigger(daqPropertyObjectInternal* self);
    daqErrCode EXPORTED daqPropertyObjectInternal_getCoreEventTrigger(daqPropertyObjectInternal* self, daqProcedure** trigger);
    daqErrCode EXPORTED daqPropertyObjectInternal_setCoreEventTrigger(daqPropertyObjectInternal* self, daqProcedure* trigger);
    daqErrCode EXPORTED daqPropertyObjectInternal_clone(daqPropertyObjectInternal* self, daqPropertyObject** cloned);
    daqErrCode EXPORTED daqPropertyObjectInternal_setPath(daqPropertyObjectInternal* self, daqString* path);
    daqErrCode EXPORTED daqPropertyObjectInternal_isUpdating(daqPropertyObjectInternal* self, daqBool* updating);
    daqErrCode EXPORTED daqPropertyObjectInternal_hasUserReadAccess(daqPropertyObjectInternal* self, daqBaseObject* userContext, daqBool* hasAccessOut);
    daqErrCode EXPORTED daqPropertyObjectInternal_getPropertyValueNoLock(daqPropertyObjectInternal* self, daqString* name, daqBaseObject** value);
    daqErrCode EXPORTED daqPropertyObjectInternal_getPropertySelectionValueNoLock(daqPropertyObjectInternal* self, daqString* name, daqBaseObject** value);
    daqErrCode EXPORTED daqPropertyObjectInternal_setPropertyValueNoLock(daqPropertyObjectInternal* self, daqString* name, daqBaseObject* value);
    daqErrCode EXPORTED daqPropertyObjectInternal_clearPropertyValueNoLock(daqPropertyObjectInternal* self, daqString* name);
    daqErrCode EXPORTED daqPropertyObjectInternal_getLockGuard(daqPropertyObjectInternal* self, daqLockGuard** lockGuard);
    daqErrCode EXPORTED daqPropertyObjectInternal_getRecursiveLockGuard(daqPropertyObjectInternal* self, daqLockGuard** lockGuard);

#ifdef __cplusplus
}
#endif
