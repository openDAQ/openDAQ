//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.7.0) on 03.06.2025 17:17:49.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include <ccommon.h>

    typedef struct daqEvent daqEvent;
    typedef struct daqEventHandler daqEventHandler;
    typedef struct daqEventArgs daqEventArgs;
    typedef struct daqList daqList;

    EXPORTED extern const daqIntfID DAQ_EVENT_INTF_ID;

    daqErrCode EXPORTED daqEvent_addHandler(daqEvent* self, daqEventHandler* eventHandler);
    daqErrCode EXPORTED daqEvent_removeHandler(daqEvent* self, daqEventHandler* eventHandler);
    daqErrCode EXPORTED daqEvent_trigger(daqEvent* self, daqBaseObject* sender, daqEventArgs* args);
    daqErrCode EXPORTED daqEvent_clear(daqEvent* self);
    daqErrCode EXPORTED daqEvent_getSubscriberCount(daqEvent* self, daqSizeT* count);
    daqErrCode EXPORTED daqEvent_getSubscribers(daqEvent* self, daqList** subscribers);
    daqErrCode EXPORTED daqEvent_mute(daqEvent* self);
    daqErrCode EXPORTED daqEvent_unmute(daqEvent* self);
    daqErrCode EXPORTED daqEvent_muteListener(daqEvent* self, daqEventHandler* eventHandler);
    daqErrCode EXPORTED daqEvent_unmuteListener(daqEvent* self, daqEventHandler* eventHandler);
    daqErrCode EXPORTED daqEvent_createEvent(daqEvent** obj);

#ifdef __cplusplus
}
#endif
