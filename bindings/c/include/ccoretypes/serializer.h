//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.7.0) on 03.06.2025 17:17:59.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include <ccommon.h>

    typedef struct daqSerializer daqSerializer;
    typedef struct daqSerializable daqSerializable;
    typedef struct daqString daqString;

    EXPORTED extern const daqIntfID DAQ_SERIALIZER_INTF_ID;

    daqErrCode EXPORTED daqSerializer_startTaggedObject(daqSerializer* self, daqSerializable* obj);
    daqErrCode EXPORTED daqSerializer_startObject(daqSerializer* self);
    daqErrCode EXPORTED daqSerializer_endObject(daqSerializer* self);
    daqErrCode EXPORTED daqSerializer_startList(daqSerializer* self);
    daqErrCode EXPORTED daqSerializer_endList(daqSerializer* self);
    daqErrCode EXPORTED daqSerializer_getOutput(daqSerializer* self, daqString** serialized);
    daqErrCode EXPORTED daqSerializer_key(daqSerializer* self, daqConstCharPtr string);
    daqErrCode EXPORTED daqSerializer_keyStr(daqSerializer* self, daqString* name);
    daqErrCode EXPORTED daqSerializer_keyRaw(daqSerializer* self, daqConstCharPtr string, daqSizeT length);
    daqErrCode EXPORTED daqSerializer_writeInt(daqSerializer* self, daqInt integer);
    daqErrCode EXPORTED daqSerializer_writeBool(daqSerializer* self, daqBool boolean);
    daqErrCode EXPORTED daqSerializer_writeFloat(daqSerializer* self, daqFloat real);
    daqErrCode EXPORTED daqSerializer_writeString(daqSerializer* self, daqConstCharPtr string, daqSizeT length);
    daqErrCode EXPORTED daqSerializer_writeNull(daqSerializer* self);
    daqErrCode EXPORTED daqSerializer_reset(daqSerializer* self);
    daqErrCode EXPORTED daqSerializer_isComplete(daqSerializer* self, daqBool* complete);
    daqErrCode EXPORTED daqSerializer_getUser(daqSerializer* self, daqBaseObject** user);
    daqErrCode EXPORTED daqSerializer_setUser(daqSerializer* self, daqBaseObject* user);
    daqErrCode EXPORTED daqSerializer_getVersion(daqSerializer* self, daqInt* version);

#ifdef __cplusplus
}
#endif
