//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.6.0) on 27.04.2025 18:33:24.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include <ccommon.h>

    typedef struct Device Device;
    typedef struct DeviceInfo DeviceInfo;
    typedef struct DeviceDomain DeviceDomain;
    typedef struct Folder Folder;
    typedef struct List List;
    typedef struct SearchFilter SearchFilter;
    typedef struct Dict Dict;
    typedef struct String String;
    typedef struct PropertyObject PropertyObject;
    typedef struct FunctionBlock FunctionBlock;
    typedef struct UpdateParameters UpdateParameters;
    typedef struct Streaming Streaming;
    typedef struct SyncComponent SyncComponent;
    typedef struct Server Server;
    typedef struct ComponentStatusContainer ComponentStatusContainer;

    EXPORTED extern const IntfID DEVICE_INTF_ID;

    ErrCode EXPORTED Device_getInfo(Device* self, DeviceInfo** info);
    ErrCode EXPORTED Device_getDomain(Device* self, DeviceDomain** domain);
    ErrCode EXPORTED Device_getInputsOutputsFolder(Device* self, Folder** inputsOutputsFolder);
    ErrCode EXPORTED Device_getCustomComponents(Device* self, List** customComponents);
    ErrCode EXPORTED Device_getSignals(Device* self, List** signals, SearchFilter* searchFilter);
    ErrCode EXPORTED Device_getSignalsRecursive(Device* self, List** signals, SearchFilter* searchFilter);
    ErrCode EXPORTED Device_getChannels(Device* self, List** channels, SearchFilter* searchFilter);
    ErrCode EXPORTED Device_getChannelsRecursive(Device* self, List** channels, SearchFilter* searchFilter);
    ErrCode EXPORTED Device_getDevices(Device* self, List** devices, SearchFilter* searchFilter);
    ErrCode EXPORTED Device_getAvailableDevices(Device* self, List** availableDevices);
    ErrCode EXPORTED Device_getAvailableDeviceTypes(Device* self, Dict** deviceTypes);
    ErrCode EXPORTED Device_addDevice(Device* self, Device** device, String* connectionString, PropertyObject* config);
    ErrCode EXPORTED Device_removeDevice(Device* self, Device* device);
    ErrCode EXPORTED Device_getFunctionBlocks(Device* self, List** functionBlocks, SearchFilter* searchFilter);
    ErrCode EXPORTED Device_getAvailableFunctionBlockTypes(Device* self, Dict** functionBlockTypes);
    ErrCode EXPORTED Device_addFunctionBlock(Device* self, FunctionBlock** functionBlock, String* typeId, PropertyObject* config);
    ErrCode EXPORTED Device_removeFunctionBlock(Device* self, FunctionBlock* functionBlock);
    ErrCode EXPORTED Device_saveConfiguration(Device* self, String** configuration);
    ErrCode EXPORTED Device_loadConfiguration(Device* self, String* configuration, UpdateParameters* config);
    ErrCode EXPORTED Device_getTicksSinceOrigin(Device* self, UInt* ticks);
    ErrCode EXPORTED Device_addStreaming(Device* self, Streaming** streaming, String* connectionString, PropertyObject* config);
    ErrCode EXPORTED Device_createDefaultAddDeviceConfig(Device* self, PropertyObject** defaultConfig);
    ErrCode EXPORTED Device_getSyncComponent(Device* self, SyncComponent** sync);
    ErrCode EXPORTED Device_addServer(Device* self, String* typeId, PropertyObject* config, Server** server);
    ErrCode EXPORTED Device_removeServer(Device* self, Server* server);
    ErrCode EXPORTED Device_getServers(Device* self, List** servers);
    ErrCode EXPORTED Device_lock(Device* self);
    ErrCode EXPORTED Device_unlock(Device* self);
    ErrCode EXPORTED Device_isLocked(Device* self, Bool* locked);
    ErrCode EXPORTED Device_getLogFileInfos(Device* self, List** logFileInfos);
    ErrCode EXPORTED Device_getLog(Device* self, String** log, String* id, Int size, Int offset);
    ErrCode EXPORTED Device_getConnectionStatusContainer(Device* self, ComponentStatusContainer** statusContainer);
    ErrCode EXPORTED Device_getAvailableOperationModes(Device* self, List** availableOpModes);
    ErrCode EXPORTED Device_setOperationMode(Device* self, OperationModeType modeType);
    ErrCode EXPORTED Device_setOperationModeRecursive(Device* self, OperationModeType modeType);
    ErrCode EXPORTED Device_getOperationMode(Device* self, OperationModeType* modeType);

#ifdef __cplusplus
}
#endif
