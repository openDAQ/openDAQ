//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.7.0) on 19.06.2025 16:41:51.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include <ccommon.h>

    typedef struct daqDevice daqDevice;
    typedef struct daqDeviceInfo daqDeviceInfo;
    typedef struct daqDeviceDomain daqDeviceDomain;
    typedef struct daqFolder daqFolder;
    typedef struct daqList daqList;
    typedef struct daqSearchFilter daqSearchFilter;
    typedef struct daqDict daqDict;
    typedef struct daqString daqString;
    typedef struct daqPropertyObject daqPropertyObject;
    typedef struct daqFunctionBlock daqFunctionBlock;
    typedef struct daqUpdateParameters daqUpdateParameters;
    typedef struct daqStreaming daqStreaming;
    typedef struct daqSyncComponent daqSyncComponent;
    typedef struct daqServer daqServer;
    typedef struct daqComponentStatusContainer daqComponentStatusContainer;

    EXPORTED extern const daqIntfID DAQ_DEVICE_INTF_ID;

    daqErrCode EXPORTED daqDevice_getInfo(daqDevice* self, daqDeviceInfo** info);
    daqErrCode EXPORTED daqDevice_getDomain(daqDevice* self, daqDeviceDomain** domain);
    daqErrCode EXPORTED daqDevice_getInputsOutputsFolder(daqDevice* self, daqFolder** inputsOutputsFolder);
    daqErrCode EXPORTED daqDevice_getCustomComponents(daqDevice* self, daqList** customComponents);
    daqErrCode EXPORTED daqDevice_getSignals(daqDevice* self, daqList** signals, daqSearchFilter* searchFilter);
    daqErrCode EXPORTED daqDevice_getSignalsRecursive(daqDevice* self, daqList** signals, daqSearchFilter* searchFilter);
    daqErrCode EXPORTED daqDevice_getChannels(daqDevice* self, daqList** channels, daqSearchFilter* searchFilter);
    daqErrCode EXPORTED daqDevice_getChannelsRecursive(daqDevice* self, daqList** channels, daqSearchFilter* searchFilter);
    daqErrCode EXPORTED daqDevice_getDevices(daqDevice* self, daqList** devices, daqSearchFilter* searchFilter);
    daqErrCode EXPORTED daqDevice_getAvailableDevices(daqDevice* self, daqList** availableDevices);
    daqErrCode EXPORTED daqDevice_getAvailableDeviceTypes(daqDevice* self, daqDict** deviceTypes);
    daqErrCode EXPORTED daqDevice_addDevice(daqDevice* self, daqDevice** device, daqString* connectionString, daqPropertyObject* config);
    daqErrCode EXPORTED daqDevice_removeDevice(daqDevice* self, daqDevice* device);
    daqErrCode EXPORTED daqDevice_getFunctionBlocks(daqDevice* self, daqList** functionBlocks, daqSearchFilter* searchFilter);
    daqErrCode EXPORTED daqDevice_getAvailableFunctionBlockTypes(daqDevice* self, daqDict** functionBlockTypes);
    daqErrCode EXPORTED daqDevice_addFunctionBlock(daqDevice* self, daqFunctionBlock** functionBlock, daqString* typeId, daqPropertyObject* config);
    daqErrCode EXPORTED daqDevice_removeFunctionBlock(daqDevice* self, daqFunctionBlock* functionBlock);
    daqErrCode EXPORTED daqDevice_saveConfiguration(daqDevice* self, daqString** configuration);
    daqErrCode EXPORTED daqDevice_loadConfiguration(daqDevice* self, daqString* configuration, daqUpdateParameters* config);
    daqErrCode EXPORTED daqDevice_getTicksSinceOrigin(daqDevice* self, daqUInt* ticks);
    daqErrCode EXPORTED daqDevice_addStreaming(daqDevice* self, daqStreaming** streaming, daqString* connectionString, daqPropertyObject* config);
    daqErrCode EXPORTED daqDevice_createDefaultAddDeviceConfig(daqDevice* self, daqPropertyObject** defaultConfig);
    daqErrCode EXPORTED daqDevice_getSyncComponent(daqDevice* self, daqSyncComponent** sync);
    daqErrCode EXPORTED daqDevice_addServer(daqDevice* self, daqString* typeId, daqPropertyObject* config, daqServer** server);
    daqErrCode EXPORTED daqDevice_removeServer(daqDevice* self, daqServer* server);
    daqErrCode EXPORTED daqDevice_getServers(daqDevice* self, daqList** servers);
    daqErrCode EXPORTED daqDevice_lock(daqDevice* self);
    daqErrCode EXPORTED daqDevice_unlock(daqDevice* self);
    daqErrCode EXPORTED daqDevice_isLocked(daqDevice* self, daqBool* locked);
    daqErrCode EXPORTED daqDevice_getLogFileInfos(daqDevice* self, daqList** logFileInfos);
    daqErrCode EXPORTED daqDevice_getLog(daqDevice* self, daqString** log, daqString* id, daqInt size, daqInt offset);
    daqErrCode EXPORTED daqDevice_getConnectionStatusContainer(daqDevice* self, daqComponentStatusContainer** statusContainer);
    daqErrCode EXPORTED daqDevice_getAvailableOperationModes(daqDevice* self, daqList** availableOpModes);
    daqErrCode EXPORTED daqDevice_setOperationMode(daqDevice* self, daqOperationModeType modeType);
    daqErrCode EXPORTED daqDevice_setOperationModeRecursive(daqDevice* self, daqOperationModeType modeType);
    daqErrCode EXPORTED daqDevice_addDevices(daqDevice* self, daqDict** devices, daqDict* connectionArgs, daqDict* errCodes, daqDict* errorInfos);

#ifdef __cplusplus
}
#endif
