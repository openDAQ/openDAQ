//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.5.0) on 14.04.2025 21:37:15.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include "ccommon.h"

    typedef struct DeviceDomain DeviceDomain;
    typedef struct Ratio Ratio;
    typedef struct String String;
    typedef struct Unit Unit;
    typedef struct ReferenceDomainInfo ReferenceDomainInfo;

    EXPORTED extern const IntfID DEVICE_DOMAIN_INTF_ID;

    ErrCode EXPORTED DeviceDomain_getTickResolution(DeviceDomain* self, Ratio** tickResolution);
    ErrCode EXPORTED DeviceDomain_getOrigin(DeviceDomain* self, String** origin);
    ErrCode EXPORTED DeviceDomain_getUnit(DeviceDomain* self, Unit** unit);
    ErrCode EXPORTED DeviceDomain_getReferenceDomainInfo(DeviceDomain* self, ReferenceDomainInfo** referenceDomainInfo);
    ErrCode EXPORTED DeviceDomain_createDeviceDomain(DeviceDomain** obj, Ratio* tickResolution, String* origin, Unit* unit);
    ErrCode EXPORTED DeviceDomain_createDeviceDomainWithReferenceDomainInfo(DeviceDomain** obj, Ratio* tickResolution, String* origin, Unit* unit, ReferenceDomainInfo* referenceDomainInfo);

#ifdef __cplusplus
}
#endif
