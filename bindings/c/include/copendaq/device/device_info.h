//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.7.0) on 03.06.2025 22:07:04.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include <ccommon.h>

    typedef struct daqDeviceInfo daqDeviceInfo;
    typedef struct daqString daqString;
    typedef struct daqDeviceType daqDeviceType;
    typedef struct daqList daqList;
    typedef struct daqServerCapability daqServerCapability;
    typedef struct daqDict daqDict;
    typedef struct daqNetworkInterface daqNetworkInterface;

    EXPORTED extern const daqIntfID DAQ_DEVICE_INFO_INTF_ID;

    daqErrCode EXPORTED daqDeviceInfo_getName(daqDeviceInfo* self, daqString** name);
    daqErrCode EXPORTED daqDeviceInfo_getConnectionString(daqDeviceInfo* self, daqString** connectionString);
    daqErrCode EXPORTED daqDeviceInfo_getDeviceType(daqDeviceInfo* self, daqDeviceType** deviceType);
    daqErrCode EXPORTED daqDeviceInfo_getManufacturer(daqDeviceInfo* self, daqString** manufacturer);
    daqErrCode EXPORTED daqDeviceInfo_getManufacturerUri(daqDeviceInfo* self, daqString** manufacturerUri);
    daqErrCode EXPORTED daqDeviceInfo_getModel(daqDeviceInfo* self, daqString** model);
    daqErrCode EXPORTED daqDeviceInfo_getProductCode(daqDeviceInfo* self, daqString** productCode);
    daqErrCode EXPORTED daqDeviceInfo_getDeviceRevision(daqDeviceInfo* self, daqString** deviceRevision);
    daqErrCode EXPORTED daqDeviceInfo_getHardwareRevision(daqDeviceInfo* self, daqString** hardwareRevision);
    daqErrCode EXPORTED daqDeviceInfo_getSoftwareRevision(daqDeviceInfo* self, daqString** softwareRevision);
    daqErrCode EXPORTED daqDeviceInfo_getDeviceManual(daqDeviceInfo* self, daqString** deviceManual);
    daqErrCode EXPORTED daqDeviceInfo_getDeviceClass(daqDeviceInfo* self, daqString** deviceClass);
    daqErrCode EXPORTED daqDeviceInfo_getSerialNumber(daqDeviceInfo* self, daqString** serialNumber);
    daqErrCode EXPORTED daqDeviceInfo_getProductInstanceUri(daqDeviceInfo* self, daqString** productInstanceUri);
    daqErrCode EXPORTED daqDeviceInfo_getRevisionCounter(daqDeviceInfo* self, daqInt* revisionCounter);
    daqErrCode EXPORTED daqDeviceInfo_getAssetId(daqDeviceInfo* self, daqString** id);
    daqErrCode EXPORTED daqDeviceInfo_getMacAddress(daqDeviceInfo* self, daqString** macAddress);
    daqErrCode EXPORTED daqDeviceInfo_getParentMacAddress(daqDeviceInfo* self, daqString** macAddress);
    daqErrCode EXPORTED daqDeviceInfo_getPlatform(daqDeviceInfo* self, daqString** platform);
    daqErrCode EXPORTED daqDeviceInfo_getPosition(daqDeviceInfo* self, daqInt* position);
    daqErrCode EXPORTED daqDeviceInfo_getSystemType(daqDeviceInfo* self, daqString** type);
    daqErrCode EXPORTED daqDeviceInfo_getSystemUuid(daqDeviceInfo* self, daqString** uuid);
    daqErrCode EXPORTED daqDeviceInfo_getCustomInfoPropertyNames(daqDeviceInfo* self, daqList** customInfoNames);
    daqErrCode EXPORTED daqDeviceInfo_getSdkVersion(daqDeviceInfo* self, daqString** version);
    daqErrCode EXPORTED daqDeviceInfo_getServerCapabilities(daqDeviceInfo* self, daqList** serverCapabilities);
    daqErrCode EXPORTED daqDeviceInfo_getLocation(daqDeviceInfo* self, daqString** location);
    daqErrCode EXPORTED daqDeviceInfo_getConfigurationConnectionInfo(daqDeviceInfo* self, daqServerCapability** connectionInfo);
    daqErrCode EXPORTED daqDeviceInfo_hasServerCapability(daqDeviceInfo* self, daqString* protocolId, daqBool* hasCapability);
    daqErrCode EXPORTED daqDeviceInfo_getServerCapability(daqDeviceInfo* self, daqString* protocolId, daqServerCapability** serverCapability);
    daqErrCode EXPORTED daqDeviceInfo_getNetworkInterfaces(daqDeviceInfo* self, daqDict** interfaces);
    daqErrCode EXPORTED daqDeviceInfo_getNetworkInterface(daqDeviceInfo* self, daqString* interfaceName, daqNetworkInterface** intf);
    daqErrCode EXPORTED daqDeviceInfo_getUserName(daqDeviceInfo* self, daqString** userName);
    daqErrCode EXPORTED daqDeviceInfo_getConnectedClientsInfo(daqDeviceInfo* self, daqList** connectedClientsInfo);

#ifdef __cplusplus
}
#endif
