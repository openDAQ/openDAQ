//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.5.0) on 14.04.2025 21:37:16.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include "ccommon.h"

    typedef struct DeviceInfo DeviceInfo;
    typedef struct String String;
    typedef struct DeviceType DeviceType;
    typedef struct List List;
    typedef struct ServerCapability ServerCapability;
    typedef struct Dict Dict;
    typedef struct NetworkInterface NetworkInterface;

    EXPORTED extern const IntfID DEVICE_INFO_INTF_ID;

    ErrCode EXPORTED DeviceInfo_getName(DeviceInfo* self, String** name);
    ErrCode EXPORTED DeviceInfo_getConnectionString(DeviceInfo* self, String** connectionString);
    ErrCode EXPORTED DeviceInfo_getDeviceType(DeviceInfo* self, DeviceType** deviceType);
    ErrCode EXPORTED DeviceInfo_getManufacturer(DeviceInfo* self, String** manufacturer);
    ErrCode EXPORTED DeviceInfo_getManufacturerUri(DeviceInfo* self, String** manufacturerUri);
    ErrCode EXPORTED DeviceInfo_getModel(DeviceInfo* self, String** model);
    ErrCode EXPORTED DeviceInfo_getProductCode(DeviceInfo* self, String** productCode);
    ErrCode EXPORTED DeviceInfo_getDeviceRevision(DeviceInfo* self, String** deviceRevision);
    ErrCode EXPORTED DeviceInfo_getHardwareRevision(DeviceInfo* self, String** hardwareRevision);
    ErrCode EXPORTED DeviceInfo_getSoftwareRevision(DeviceInfo* self, String** softwareRevision);
    ErrCode EXPORTED DeviceInfo_getDeviceManual(DeviceInfo* self, String** deviceManual);
    ErrCode EXPORTED DeviceInfo_getDeviceClass(DeviceInfo* self, String** deviceClass);
    ErrCode EXPORTED DeviceInfo_getSerialNumber(DeviceInfo* self, String** serialNumber);
    ErrCode EXPORTED DeviceInfo_getProductInstanceUri(DeviceInfo* self, String** productInstanceUri);
    ErrCode EXPORTED DeviceInfo_getRevisionCounter(DeviceInfo* self, Int* revisionCounter);
    ErrCode EXPORTED DeviceInfo_getAssetId(DeviceInfo* self, String** id);
    ErrCode EXPORTED DeviceInfo_getMacAddress(DeviceInfo* self, String** macAddress);
    ErrCode EXPORTED DeviceInfo_getParentMacAddress(DeviceInfo* self, String** macAddress);
    ErrCode EXPORTED DeviceInfo_getPlatform(DeviceInfo* self, String** platform);
    ErrCode EXPORTED DeviceInfo_getPosition(DeviceInfo* self, Int* position);
    ErrCode EXPORTED DeviceInfo_getSystemType(DeviceInfo* self, String** type);
    ErrCode EXPORTED DeviceInfo_getSystemUuid(DeviceInfo* self, String** uuid);
    ErrCode EXPORTED DeviceInfo_getCustomInfoPropertyNames(DeviceInfo* self, List** customInfoNames);
    ErrCode EXPORTED DeviceInfo_getSdkVersion(DeviceInfo* self, String** version);
    ErrCode EXPORTED DeviceInfo_getServerCapabilities(DeviceInfo* self, List** serverCapabilities);
    ErrCode EXPORTED DeviceInfo_getLocation(DeviceInfo* self, String** location);
    ErrCode EXPORTED DeviceInfo_getConfigurationConnectionInfo(DeviceInfo* self, ServerCapability** connectionInfo);
    ErrCode EXPORTED DeviceInfo_hasServerCapability(DeviceInfo* self, String* protocolId, Bool* hasCapability);
    ErrCode EXPORTED DeviceInfo_getServerCapability(DeviceInfo* self, String* protocolId, ServerCapability** serverCapability);
    ErrCode EXPORTED DeviceInfo_getNetworkInterfaces(DeviceInfo* self, Dict** interfaces);
    ErrCode EXPORTED DeviceInfo_getNetworkInterface(DeviceInfo* self, String* interfaceName, NetworkInterface** interface);
    ErrCode EXPORTED DeviceInfo_getUserName(DeviceInfo* self, String** userName);

#ifdef __cplusplus
}
#endif
