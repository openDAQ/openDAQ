//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.5.0) on 14.04.2025 21:37:16.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include "ccommon.h"

    typedef struct DeviceInfoConfig DeviceInfoConfig;
    typedef struct String String;
    typedef struct DeviceType DeviceType;

    EXPORTED extern const IntfID DEVICE_INFO_CONFIG_INTF_ID;

    ErrCode EXPORTED DeviceInfoConfig_setName(DeviceInfoConfig* self, String* name);
    ErrCode EXPORTED DeviceInfoConfig_setConnectionString(DeviceInfoConfig* self, String* connectionString);
    ErrCode EXPORTED DeviceInfoConfig_setDeviceType(DeviceInfoConfig* self, DeviceType* deviceType);
    ErrCode EXPORTED DeviceInfoConfig_setManufacturer(DeviceInfoConfig* self, String* manufacturer);
    ErrCode EXPORTED DeviceInfoConfig_setManufacturerUri(DeviceInfoConfig* self, String* manufacturerUri);
    ErrCode EXPORTED DeviceInfoConfig_setModel(DeviceInfoConfig* self, String* model);
    ErrCode EXPORTED DeviceInfoConfig_setProductCode(DeviceInfoConfig* self, String* productCode);
    ErrCode EXPORTED DeviceInfoConfig_setDeviceRevision(DeviceInfoConfig* self, String* deviceRevision);
    ErrCode EXPORTED DeviceInfoConfig_setHardwareRevision(DeviceInfoConfig* self, String* hardwareRevision);
    ErrCode EXPORTED DeviceInfoConfig_setSoftwareRevision(DeviceInfoConfig* self, String* softwareRevision);
    ErrCode EXPORTED DeviceInfoConfig_setDeviceManual(DeviceInfoConfig* self, String* deviceManual);
    ErrCode EXPORTED DeviceInfoConfig_setDeviceClass(DeviceInfoConfig* self, String* deviceClass);
    ErrCode EXPORTED DeviceInfoConfig_setSerialNumber(DeviceInfoConfig* self, String* serialNumber);
    ErrCode EXPORTED DeviceInfoConfig_setProductInstanceUri(DeviceInfoConfig* self, String* productInstanceUri);
    ErrCode EXPORTED DeviceInfoConfig_setRevisionCounter(DeviceInfoConfig* self, Int revisionCounter);
    ErrCode EXPORTED DeviceInfoConfig_setAssetId(DeviceInfoConfig* self, String* id);
    ErrCode EXPORTED DeviceInfoConfig_setMacAddress(DeviceInfoConfig* self, String* macAddress);
    ErrCode EXPORTED DeviceInfoConfig_setParentMacAddress(DeviceInfoConfig* self, String* macAddress);
    ErrCode EXPORTED DeviceInfoConfig_setPlatform(DeviceInfoConfig* self, String* platform);
    ErrCode EXPORTED DeviceInfoConfig_setPosition(DeviceInfoConfig* self, Int position);
    ErrCode EXPORTED DeviceInfoConfig_setSystemType(DeviceInfoConfig* self, String* type);
    ErrCode EXPORTED DeviceInfoConfig_setSystemUuid(DeviceInfoConfig* self, String* uuid);
    ErrCode EXPORTED DeviceInfoConfig_setLocation(DeviceInfoConfig* self, String* location);
    ErrCode EXPORTED DeviceInfoConfig_setUserName(DeviceInfoConfig* self, String* userName);
    ErrCode EXPORTED DeviceInfoConfig_createDeviceInfoConfig(DeviceInfoConfig** obj, String* name, String* connectionString);
    ErrCode EXPORTED DeviceInfoConfig_createDeviceInfoConfigWithCustomSdkVersion(DeviceInfoConfig** obj, String* name, String* connectionString, String* sdkVersion);

#ifdef __cplusplus
}
#endif
