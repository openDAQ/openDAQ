//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.6.0) on 27.04.2025 18:33:27.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include <ccommon.h>

    typedef struct DevicePrivate DevicePrivate;
    typedef struct PropertyObject PropertyObject;
    typedef struct User User;

    EXPORTED extern const IntfID DEVICE_PRIVATE_INTF_ID;

    ErrCode EXPORTED DevicePrivate_setAsRoot(DevicePrivate* self);
    ErrCode EXPORTED DevicePrivate_setDeviceConfig(DevicePrivate* self, PropertyObject* config);
    ErrCode EXPORTED DevicePrivate_getDeviceConfig(DevicePrivate* self, PropertyObject** config);
    ErrCode EXPORTED DevicePrivate_lock(DevicePrivate* self, User* user);
    ErrCode EXPORTED DevicePrivate_unlock(DevicePrivate* self, User* user);
    ErrCode EXPORTED DevicePrivate_isLockedInternal(DevicePrivate* self, Bool* locked);
    ErrCode EXPORTED DevicePrivate_forceUnlock(DevicePrivate* self);

#ifdef __cplusplus
}
#endif
