//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.6.0) on 27.04.2025 18:33:34.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include <ccommon.h>

    typedef struct FunctionBlockWrapper FunctionBlockWrapper;
    typedef struct String String;
    typedef struct Coercer Coercer;
    typedef struct Validator Validator;
    typedef struct List List;
    typedef struct FunctionBlock FunctionBlock;

    EXPORTED extern const IntfID FUNCTION_BLOCK_WRAPPER_INTF_ID;

    ErrCode EXPORTED FunctionBlockWrapper_includeInputPort(FunctionBlockWrapper* self, String* inputPortName);
    ErrCode EXPORTED FunctionBlockWrapper_excludeInputPort(FunctionBlockWrapper* self, String* inputPortName);
    ErrCode EXPORTED FunctionBlockWrapper_includeSignal(FunctionBlockWrapper* self, String* signalLocalId);
    ErrCode EXPORTED FunctionBlockWrapper_excludeSignal(FunctionBlockWrapper* self, String* signalLocalId);
    ErrCode EXPORTED FunctionBlockWrapper_includeProperty(FunctionBlockWrapper* self, String* propertyName);
    ErrCode EXPORTED FunctionBlockWrapper_excludeProperty(FunctionBlockWrapper* self, String* propertyName);
    ErrCode EXPORTED FunctionBlockWrapper_includeFunctionBlock(FunctionBlockWrapper* self, String* functionBlockLocalId);
    ErrCode EXPORTED FunctionBlockWrapper_excludeFunctionBlock(FunctionBlockWrapper* self, String* functionBlockLocalId);
    ErrCode EXPORTED FunctionBlockWrapper_setPropertyCoercer(FunctionBlockWrapper* self, String* propertyName, Coercer* coercer);
    ErrCode EXPORTED FunctionBlockWrapper_setPropertyValidator(FunctionBlockWrapper* self, String* propertyName, Validator* validator);
    ErrCode EXPORTED FunctionBlockWrapper_setPropertySelectionValues(FunctionBlockWrapper* self, String* propertyName, List* enumValues);
    ErrCode EXPORTED FunctionBlockWrapper_getWrappedFunctionBlock(FunctionBlockWrapper* self, FunctionBlock** functionBlock);
    ErrCode EXPORTED FunctionBlock_createFunctionBlockWrapper(FunctionBlock** obj, FunctionBlock* functionBlock, Bool includeInputPortsByDefault, Bool includeSignalsByDefault, Bool includePropertiesByDefault, Bool includeFunctionBlocksByDefault);

#ifdef __cplusplus
}
#endif
