//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.7.0) on 03.06.2025 22:07:15.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include <ccommon.h>

    typedef struct daqLoggerComponent daqLoggerComponent;
    typedef struct daqString daqString;
    typedef struct daqList daqList;
    typedef struct daqLoggerThreadPool daqLoggerThreadPool;

    EXPORTED extern const daqIntfID DAQ_LOGGER_COMPONENT_INTF_ID;

    daqErrCode EXPORTED daqLoggerComponent_getName(daqLoggerComponent* self, daqString** name);
    daqErrCode EXPORTED daqLoggerComponent_setLevel(daqLoggerComponent* self, daqLogLevel level);
    daqErrCode EXPORTED daqLoggerComponent_getLevel(daqLoggerComponent* self, daqLogLevel* level);
    // daqErrCode EXPORTED daqLoggerComponent_logMessage(daqLoggerComponent* self, daqSourceLocation location, daqConstCharPtr msg, daqLogLevel level);
    daqErrCode EXPORTED daqLoggerComponent_setPattern(daqLoggerComponent* self, daqString* pattern);
    daqErrCode EXPORTED daqLoggerComponent_shouldLog(daqLoggerComponent* self, daqLogLevel level, daqBool* willLog);
    daqErrCode EXPORTED daqLoggerComponent_flush(daqLoggerComponent* self);
    daqErrCode EXPORTED daqLoggerComponent_flushOnLevel(daqLoggerComponent* self, daqLogLevel level);
    daqErrCode EXPORTED daqLoggerComponent_createLoggerComponent(daqLoggerComponent** obj, daqString* name, daqList* sinks, daqLoggerThreadPool* threadPool, daqLogLevel level);

#ifdef __cplusplus
}
#endif
