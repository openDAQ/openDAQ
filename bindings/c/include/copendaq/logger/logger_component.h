//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.5.0) on 14.04.2025 21:37:26.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include "ccommon.h"

    typedef struct LoggerComponent LoggerComponent;
    typedef struct String String;
    typedef struct List List;
    typedef struct LoggerThreadPool LoggerThreadPool;

    EXPORTED extern const IntfID LOGGER_COMPONENT_INTF_ID;

    ErrCode EXPORTED LoggerComponent_getName(LoggerComponent* self, String** name);
    ErrCode EXPORTED LoggerComponent_setLevel(LoggerComponent* self, LogLevel level);
    ErrCode EXPORTED LoggerComponent_getLevel(LoggerComponent* self, LogLevel* level);
    // ErrCode EXPORTED LoggerComponent_logMessage(LoggerComponent* self, SourceLocation location, ConstCharPtr msg, LogLevel level);
    ErrCode EXPORTED LoggerComponent_setPattern(LoggerComponent* self, String* pattern);
    ErrCode EXPORTED LoggerComponent_shouldLog(LoggerComponent* self, LogLevel level, Bool* willLog);
    ErrCode EXPORTED LoggerComponent_flush(LoggerComponent* self);
    ErrCode EXPORTED LoggerComponent_flushOnLevel(LoggerComponent* self, LogLevel level);
    ErrCode EXPORTED LoggerComponent_createLoggerComponent(LoggerComponent** obj, String* name, List* sinks, LoggerThreadPool* threadPool, LogLevel level);

#ifdef __cplusplus
}
#endif
