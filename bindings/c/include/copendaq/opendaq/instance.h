//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.7.0) on 03.06.2025 22:07:20.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include <ccommon.h>

    typedef struct daqInstance daqInstance;
    typedef struct daqModuleManager daqModuleManager;
    typedef struct daqDevice daqDevice;
    typedef struct daqString daqString;
    typedef struct daqPropertyObject daqPropertyObject;
    typedef struct daqDict daqDict;
    typedef struct daqList daqList;
    typedef struct daqContext daqContext;
    typedef struct daqInstanceBuilder daqInstanceBuilder;
    typedef struct daqDeviceInfo daqDeviceInfo;
    typedef struct daqComponent daqComponent;

    EXPORTED extern const daqIntfID DAQ_INSTANCE_INTF_ID;

    daqErrCode EXPORTED daqInstance_getModuleManager(daqInstance* self, daqModuleManager** manager);
    daqErrCode EXPORTED daqInstance_getRootDevice(daqInstance* self, daqDevice** rootDevice);
    daqErrCode EXPORTED daqInstance_setRootDevice(daqInstance* self, daqString* connectionString, daqPropertyObject* config);
    daqErrCode EXPORTED daqInstance_getAvailableServerTypes(daqInstance* self, daqDict** serverTypes);
    daqErrCode EXPORTED daqInstance_addStandardServers(daqInstance* self, daqList** servers);
    daqErrCode EXPORTED daqInstance_createInstance(daqInstance** obj, daqContext* context, daqString* localId);
    daqErrCode EXPORTED daqInstance_createInstanceFromBuilder(daqInstance** obj, daqInstanceBuilder* builder);
    daqErrCode EXPORTED daqDevice_createClient(daqDevice** obj, daqContext* ctx, daqString* localId, daqDeviceInfo* defaultDeviceInfo, daqComponent* parent);

#ifdef __cplusplus
}
#endif
