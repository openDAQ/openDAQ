//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.5.0) on 14.04.2025 21:37:33.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include "ccommon.h"

    typedef struct Instance Instance;
    typedef struct ModuleManager ModuleManager;
    typedef struct Device Device;
    typedef struct String String;
    typedef struct PropertyObject PropertyObject;
    typedef struct Dict Dict;
    typedef struct List List;
    typedef struct Context Context;
    typedef struct InstanceBuilder InstanceBuilder;
    typedef struct DeviceInfo DeviceInfo;
    typedef struct Component Component;

    EXPORTED extern const IntfID INSTANCE_INTF_ID;

    ErrCode EXPORTED Instance_getModuleManager(Instance* self, ModuleManager** manager);
    ErrCode EXPORTED Instance_getRootDevice(Instance* self, Device** rootDevice);
    ErrCode EXPORTED Instance_setRootDevice(Instance* self, String* connectionString, PropertyObject* config);
    ErrCode EXPORTED Instance_getAvailableServerTypes(Instance* self, Dict** serverTypes);
    ErrCode EXPORTED Instance_addStandardServers(Instance* self, List** servers);
    ErrCode EXPORTED Instance_createInstance(Instance** obj, Context* context, String* localId);
    ErrCode EXPORTED Instance_createInstanceFromBuilder(Instance** obj, InstanceBuilder* builder);
    ErrCode EXPORTED Device_createClient(Device** obj, Context* ctx, String* localId, DeviceInfo* defaultDeviceInfo, Component* parent);

#ifdef __cplusplus
}
#endif
