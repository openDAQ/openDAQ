//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.7.0) on 03.06.2025 22:07:21.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include <ccommon.h>

    typedef struct daqInstanceBuilder daqInstanceBuilder;
    typedef struct daqInstance daqInstance;
    typedef struct daqConfigProvider daqConfigProvider;
    typedef struct daqContext daqContext;
    typedef struct daqLogger daqLogger;
    typedef struct daqString daqString;
    typedef struct daqDict daqDict;
    typedef struct daqLoggerSink daqLoggerSink;
    typedef struct daqList daqList;
    typedef struct daqModuleManager daqModuleManager;
    typedef struct daqAuthenticationProvider daqAuthenticationProvider;
    typedef struct daqScheduler daqScheduler;
    typedef struct daqPropertyObject daqPropertyObject;
    typedef struct daqDeviceInfo daqDeviceInfo;

    EXPORTED extern const daqIntfID DAQ_INSTANCE_BUILDER_INTF_ID;

    daqErrCode EXPORTED daqInstanceBuilder_build(daqInstanceBuilder* self, daqInstance** instance);
    daqErrCode EXPORTED daqInstanceBuilder_addConfigProvider(daqInstanceBuilder* self, daqConfigProvider* configProvider);
    daqErrCode EXPORTED daqInstanceBuilder_setContext(daqInstanceBuilder* self, daqContext* context);
    daqErrCode EXPORTED daqInstanceBuilder_getContext(daqInstanceBuilder* self, daqContext** context);
    daqErrCode EXPORTED daqInstanceBuilder_setLogger(daqInstanceBuilder* self, daqLogger* logger);
    daqErrCode EXPORTED daqInstanceBuilder_getLogger(daqInstanceBuilder* self, daqLogger** logger);
    daqErrCode EXPORTED daqInstanceBuilder_setGlobalLogLevel(daqInstanceBuilder* self, daqLogLevel logLevel);
    daqErrCode EXPORTED daqInstanceBuilder_getGlobalLogLevel(daqInstanceBuilder* self, daqLogLevel* logLevel);
    daqErrCode EXPORTED daqInstanceBuilder_setComponentLogLevel(daqInstanceBuilder* self, daqString* component, daqLogLevel logLevel);
    daqErrCode EXPORTED daqInstanceBuilder_getComponentsLogLevel(daqInstanceBuilder* self, daqDict** components);
    daqErrCode EXPORTED daqInstanceBuilder_addLoggerSink(daqInstanceBuilder* self, daqLoggerSink* sink);
    daqErrCode EXPORTED daqInstanceBuilder_setSinkLogLevel(daqInstanceBuilder* self, daqLoggerSink* sink, daqLogLevel logLevel);
    daqErrCode EXPORTED daqInstanceBuilder_getLoggerSinks(daqInstanceBuilder* self, daqList** sinks);
    daqErrCode EXPORTED daqInstanceBuilder_setModulePath(daqInstanceBuilder* self, daqString* path);
    daqErrCode EXPORTED daqInstanceBuilder_getModulePath(daqInstanceBuilder* self, daqString** path);
    daqErrCode EXPORTED daqInstanceBuilder_addModulePath(daqInstanceBuilder* self, daqString* path);
    daqErrCode EXPORTED daqInstanceBuilder_getModulePathsList(daqInstanceBuilder* self, daqList** paths);
    daqErrCode EXPORTED daqInstanceBuilder_setModuleManager(daqInstanceBuilder* self, daqModuleManager* moduleManager);
    daqErrCode EXPORTED daqInstanceBuilder_getModuleManager(daqInstanceBuilder* self, daqModuleManager** moduleManager);
    daqErrCode EXPORTED daqInstanceBuilder_setAuthenticationProvider(daqInstanceBuilder* self, daqAuthenticationProvider* authenticationProvider);
    daqErrCode EXPORTED daqInstanceBuilder_getAuthenticationProvider(daqInstanceBuilder* self, daqAuthenticationProvider** authenticationProvider);
    daqErrCode EXPORTED daqInstanceBuilder_setSchedulerWorkerNum(daqInstanceBuilder* self, daqSizeT numWorkers);
    daqErrCode EXPORTED daqInstanceBuilder_getSchedulerWorkerNum(daqInstanceBuilder* self, daqSizeT* numWorkers);
    daqErrCode EXPORTED daqInstanceBuilder_setScheduler(daqInstanceBuilder* self, daqScheduler* scheduler);
    daqErrCode EXPORTED daqInstanceBuilder_getScheduler(daqInstanceBuilder* self, daqScheduler** scheduler);
    daqErrCode EXPORTED daqInstanceBuilder_setDefaultRootDeviceLocalId(daqInstanceBuilder* self, daqString* localId);
    daqErrCode EXPORTED daqInstanceBuilder_getDefaultRootDeviceLocalId(daqInstanceBuilder* self, daqString** localId);
    daqErrCode EXPORTED daqInstanceBuilder_setRootDevice(daqInstanceBuilder* self, daqString* connectionString, daqPropertyObject* config);
    daqErrCode EXPORTED daqInstanceBuilder_getRootDevice(daqInstanceBuilder* self, daqString** connectionString);
    daqErrCode EXPORTED daqInstanceBuilder_getRootDeviceConfig(daqInstanceBuilder* self, daqPropertyObject** config);
    daqErrCode EXPORTED daqInstanceBuilder_setDefaultRootDeviceInfo(daqInstanceBuilder* self, daqDeviceInfo* deviceInfo);
    daqErrCode EXPORTED daqInstanceBuilder_getDefaultRootDeviceInfo(daqInstanceBuilder* self, daqDeviceInfo** deviceInfo);
    daqErrCode EXPORTED daqInstanceBuilder_getOptions(daqInstanceBuilder* self, daqDict** options);
    daqErrCode EXPORTED daqInstanceBuilder_enableStandardProviders(daqInstanceBuilder* self, daqBool flag);
    daqErrCode EXPORTED daqInstanceBuilder_getDiscoveryServers(daqInstanceBuilder* self, daqList** serverNames);
    daqErrCode EXPORTED daqInstanceBuilder_addDiscoveryServer(daqInstanceBuilder* self, daqString* serverName);
    daqErrCode EXPORTED daqInstanceBuilder_createInstanceBuilder(daqInstanceBuilder** obj);

#ifdef __cplusplus
}
#endif
