//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.5.0) on 14.04.2025 21:37:34.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include "ccommon.h"

    typedef struct BlockReader BlockReader;
    typedef struct BlockReaderStatus BlockReaderStatus;
    typedef struct Signal Signal;
    typedef struct InputPortConfig InputPortConfig;

    EXPORTED extern const IntfID BLOCK_READER_INTF_ID;

    ErrCode EXPORTED BlockReader_read(BlockReader* self, void* blocks, SizeT* count, SizeT timeoutMs, BlockReaderStatus** status);
    ErrCode EXPORTED BlockReader_readWithDomain(BlockReader* self, void* dataBlocks, void* domainBlocks, SizeT* count, SizeT timeoutMs, BlockReaderStatus** status);
    ErrCode EXPORTED BlockReader_getBlockSize(BlockReader* self, SizeT* size);
    ErrCode EXPORTED BlockReader_getOverlap(BlockReader* self, SizeT* overlap);
    ErrCode EXPORTED BlockReader_createBlockReader(BlockReader** obj, Signal* signal, SizeT blockSize, SampleType valueReadType, SampleType domainReadType, ReadMode mode);
    ErrCode EXPORTED BlockReader_createBlockReaderFromExisting(BlockReader** obj, BlockReader* invalidatedReader, SampleType valueReadType, SampleType domainReadType, SizeT blockSize);
    ErrCode EXPORTED BlockReader_createBlockReaderFromPort(BlockReader** obj, InputPortConfig* port, SizeT blockSize, SampleType valueReadType, SampleType domainReadType, ReadMode mode);

#ifdef __cplusplus
}
#endif
