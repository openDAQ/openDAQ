//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.6.0) on 27.04.2025 18:33:49.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include <ccommon.h>

    typedef struct StreamReader StreamReader;
    typedef struct ReaderStatus ReaderStatus;
    typedef struct Signal Signal;
    typedef struct InputPortConfig InputPortConfig;

    EXPORTED extern const IntfID STREAM_READER_INTF_ID;

    ErrCode EXPORTED StreamReader_read(StreamReader* self, void* samples, SizeT* count, SizeT timeoutMs, ReaderStatus** status);
    ErrCode EXPORTED StreamReader_readWithDomain(StreamReader* self, void* samples, void* domain, SizeT* count, SizeT timeoutMs, ReaderStatus** status);
    ErrCode EXPORTED StreamReader_skipSamples(StreamReader* self, SizeT* count, ReaderStatus** status);
    ErrCode EXPORTED StreamReader_createStreamReader(StreamReader** obj, Signal* signal, SampleType valueReadType, SampleType domainReadType, ReadMode mode, ReadTimeoutType timeoutType);
    ErrCode EXPORTED StreamReader_createStreamReaderFromPort(StreamReader** obj, InputPortConfig* port, SampleType valueReadType, SampleType domainReadType, ReadMode readMode, ReadTimeoutType timeoutType);
    ErrCode EXPORTED StreamReader_createStreamReaderFromExisting(StreamReader** obj, StreamReader* invalidatedReader, SampleType valueReadType, SampleType domainReadType);

#ifdef __cplusplus
}
#endif
