//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.5.0) on 14.04.2025 21:37:42.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include "ccommon.h"

    typedef struct TailReader TailReader;
    typedef struct TailReaderStatus TailReaderStatus;
    typedef struct Signal Signal;
    typedef struct InputPortConfig InputPortConfig;

    EXPORTED extern const IntfID TAIL_READER_INTF_ID;

    ErrCode EXPORTED TailReader_read(TailReader* self, void* values, SizeT* count, TailReaderStatus** status);
    ErrCode EXPORTED TailReader_readWithDomain(TailReader* self, void* values, void* domain, SizeT* count, TailReaderStatus** status);
    ErrCode EXPORTED TailReader_getHistorySize(TailReader* self, SizeT* size);
    ErrCode EXPORTED TailReader_createTailReader(TailReader** obj, Signal* signal, SizeT historySize, SampleType valueReadType, SampleType domainReadType, ReadMode mode);
    ErrCode EXPORTED TailReader_createTailReaderFromPort(TailReader** obj, InputPortConfig* port, SizeT historySize, SampleType valueReadType, SampleType domainReadType, ReadMode mode);
    ErrCode EXPORTED TailReader_createTailReaderFromExisting(TailReader** obj, TailReader* invalidatedReader, SizeT historySize, SampleType valueReadType, SampleType domainReadType);

#ifdef __cplusplus
}
#endif
