//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.6.0) on 27.04.2025 18:33:58.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include <ccommon.h>

    typedef struct Connection Connection;
    typedef struct Packet Packet;
    typedef struct Signal Signal;
    typedef struct InputPort InputPort;
    typedef struct List List;
    typedef struct Context Context;

    EXPORTED extern const IntfID CONNECTION_INTF_ID;

    ErrCode EXPORTED Connection_enqueue(Connection* self, Packet* packet);
    ErrCode EXPORTED Connection_enqueueOnThisThread(Connection* self, Packet* packet);
    ErrCode EXPORTED Connection_dequeue(Connection* self, Packet** packet);
    ErrCode EXPORTED Connection_peek(Connection* self, Packet** packet);
    ErrCode EXPORTED Connection_getPacketCount(Connection* self, SizeT* packetCount);
    ErrCode EXPORTED Connection_getSignal(Connection* self, Signal** signal);
    ErrCode EXPORTED Connection_getInputPort(Connection* self, InputPort** inputPort);
    ErrCode EXPORTED Connection_getAvailableSamples(Connection* self, SizeT* samples);
    ErrCode EXPORTED Connection_getSamplesUntilNextDescriptor(Connection* self, SizeT* samples);
    ErrCode EXPORTED Connection_isRemote(Connection* self, Bool* remote);
    ErrCode EXPORTED Connection_enqueueAndStealRef(Connection* self, Packet* packet);
    ErrCode EXPORTED Connection_enqueueMultiple(Connection* self, List* packets);
    ErrCode EXPORTED Connection_enqueueMultipleAndStealRef(Connection* self, List* packets);
    ErrCode EXPORTED Connection_dequeueAll(Connection* self, List** packets);
    ErrCode EXPORTED Connection_getSamplesUntilNextEventPacket(Connection* self, SizeT* samples);
    ErrCode EXPORTED Connection_getSamplesUntilNextGapPacket(Connection* self, SizeT* samples);
    ErrCode EXPORTED Connection_hasEventPacket(Connection* self, Bool* hasEventPacket);
    ErrCode EXPORTED Connection_hasGapPacket(Connection* self, Bool* hasGapPacket);
    ErrCode EXPORTED Connection_createConnection(Connection** obj, InputPort* inputPort, Signal* signal, Context* context);

#ifdef __cplusplus
}
#endif
