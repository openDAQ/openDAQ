//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.7.0) on 03.06.2025 22:07:37.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include <ccommon.h>

    typedef struct daqConnection daqConnection;
    typedef struct daqPacket daqPacket;
    typedef struct daqSignal daqSignal;
    typedef struct daqInputPort daqInputPort;
    typedef struct daqList daqList;
    typedef struct daqContext daqContext;

    EXPORTED extern const daqIntfID DAQ_CONNECTION_INTF_ID;

    daqErrCode EXPORTED daqConnection_enqueue(daqConnection* self, daqPacket* packet);
    daqErrCode EXPORTED daqConnection_enqueueOnThisThread(daqConnection* self, daqPacket* packet);
    daqErrCode EXPORTED daqConnection_dequeue(daqConnection* self, daqPacket** packet);
    daqErrCode EXPORTED daqConnection_peek(daqConnection* self, daqPacket** packet);
    daqErrCode EXPORTED daqConnection_getPacketCount(daqConnection* self, daqSizeT* packetCount);
    daqErrCode EXPORTED daqConnection_getSignal(daqConnection* self, daqSignal** signal);
    daqErrCode EXPORTED daqConnection_getInputPort(daqConnection* self, daqInputPort** inputPort);
    daqErrCode EXPORTED daqConnection_getAvailableSamples(daqConnection* self, daqSizeT* samples);
    daqErrCode EXPORTED daqConnection_getSamplesUntilNextDescriptor(daqConnection* self, daqSizeT* samples);
    daqErrCode EXPORTED daqConnection_isRemote(daqConnection* self, daqBool* remote);
    daqErrCode EXPORTED daqConnection_enqueueAndStealRef(daqConnection* self, daqPacket* packet);
    daqErrCode EXPORTED daqConnection_enqueueMultiple(daqConnection* self, daqList* packets);
    daqErrCode EXPORTED daqConnection_enqueueMultipleAndStealRef(daqConnection* self, daqList* packets);
    daqErrCode EXPORTED daqConnection_dequeueAll(daqConnection* self, daqList** packets);
    daqErrCode EXPORTED daqConnection_getSamplesUntilNextEventPacket(daqConnection* self, daqSizeT* samples);
    daqErrCode EXPORTED daqConnection_getSamplesUntilNextGapPacket(daqConnection* self, daqSizeT* samples);
    daqErrCode EXPORTED daqConnection_hasEventPacket(daqConnection* self, daqBool* hasEventPacket);
    daqErrCode EXPORTED daqConnection_hasGapPacket(daqConnection* self, daqBool* hasGapPacket);
    daqErrCode EXPORTED daqConnection_createConnection(daqConnection** obj, daqInputPort* inputPort, daqSignal* signal, daqContext* context);

#ifdef __cplusplus
}
#endif
