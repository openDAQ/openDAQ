//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.5.0) on 14.04.2025 21:37:51.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include "ccommon.h"

    typedef struct DataDescriptor DataDescriptor;
    typedef struct String String;
    typedef struct List List;
    typedef struct Unit Unit;
    typedef struct Range Range;
    typedef struct DataRule DataRule;
    typedef struct Ratio Ratio;
    typedef struct Scaling Scaling;
    typedef struct Dict Dict;
    typedef struct ReferenceDomainInfo ReferenceDomainInfo;
    typedef struct DataDescriptorBuilder DataDescriptorBuilder;

    EXPORTED extern const IntfID DATA_DESCRIPTOR_INTF_ID;

    ErrCode EXPORTED DataDescriptor_getName(DataDescriptor* self, String** name);
    ErrCode EXPORTED DataDescriptor_getDimensions(DataDescriptor* self, List** dimensions);
    ErrCode EXPORTED DataDescriptor_getSampleType(DataDescriptor* self, SampleType* sampleType);
    ErrCode EXPORTED DataDescriptor_getUnit(DataDescriptor* self, Unit** unit);
    ErrCode EXPORTED DataDescriptor_getValueRange(DataDescriptor* self, Range** range);
    ErrCode EXPORTED DataDescriptor_getRule(DataDescriptor* self, DataRule** rule);
    ErrCode EXPORTED DataDescriptor_getOrigin(DataDescriptor* self, String** origin);
    ErrCode EXPORTED DataDescriptor_getTickResolution(DataDescriptor* self, Ratio** tickResolution);
    ErrCode EXPORTED DataDescriptor_getPostScaling(DataDescriptor* self, Scaling** scaling);
    ErrCode EXPORTED DataDescriptor_getStructFields(DataDescriptor* self, List** structFields);
    ErrCode EXPORTED DataDescriptor_getMetadata(DataDescriptor* self, Dict** metadata);
    ErrCode EXPORTED DataDescriptor_getSampleSize(DataDescriptor* self, SizeT* sampleSize);
    ErrCode EXPORTED DataDescriptor_getRawSampleSize(DataDescriptor* self, SizeT* rawSampleSize);
    ErrCode EXPORTED DataDescriptor_getReferenceDomainInfo(DataDescriptor* self, ReferenceDomainInfo** referenceDomainInfo);
    ErrCode EXPORTED DataDescriptor_createDataDescriptorFromBuilder(DataDescriptor** obj, DataDescriptorBuilder* builder);

#ifdef __cplusplus
}
#endif
