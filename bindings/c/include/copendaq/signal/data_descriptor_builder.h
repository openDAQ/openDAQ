//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.7.0) on 03.06.2025 22:07:39.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include <ccommon.h>

    typedef struct daqDataDescriptorBuilder daqDataDescriptorBuilder;
    typedef struct daqDataDescriptor daqDataDescriptor;
    typedef struct daqString daqString;
    typedef struct daqList daqList;
    typedef struct daqUnit daqUnit;
    typedef struct daqRange daqRange;
    typedef struct daqDataRule daqDataRule;
    typedef struct daqRatio daqRatio;
    typedef struct daqScaling daqScaling;
    typedef struct daqDict daqDict;
    typedef struct daqReferenceDomainInfo daqReferenceDomainInfo;

    EXPORTED extern const daqIntfID DAQ_DATA_DESCRIPTOR_BUILDER_INTF_ID;

    daqErrCode EXPORTED daqDataDescriptorBuilder_build(daqDataDescriptorBuilder* self, daqDataDescriptor** dataDescriptor);
    daqErrCode EXPORTED daqDataDescriptorBuilder_setName(daqDataDescriptorBuilder* self, daqString* name);
    daqErrCode EXPORTED daqDataDescriptorBuilder_getName(daqDataDescriptorBuilder* self, daqString** name);
    daqErrCode EXPORTED daqDataDescriptorBuilder_setDimensions(daqDataDescriptorBuilder* self, daqList* dimensions);
    daqErrCode EXPORTED daqDataDescriptorBuilder_getDimensions(daqDataDescriptorBuilder* self, daqList** dimensions);
    daqErrCode EXPORTED daqDataDescriptorBuilder_setSampleType(daqDataDescriptorBuilder* self, daqSampleType sampleType);
    daqErrCode EXPORTED daqDataDescriptorBuilder_getSampleType(daqDataDescriptorBuilder* self, daqSampleType* sampleType);
    daqErrCode EXPORTED daqDataDescriptorBuilder_setUnit(daqDataDescriptorBuilder* self, daqUnit* unit);
    daqErrCode EXPORTED daqDataDescriptorBuilder_getUnit(daqDataDescriptorBuilder* self, daqUnit** unit);
    daqErrCode EXPORTED daqDataDescriptorBuilder_setValueRange(daqDataDescriptorBuilder* self, daqRange* range);
    daqErrCode EXPORTED daqDataDescriptorBuilder_getValueRange(daqDataDescriptorBuilder* self, daqRange** range);
    daqErrCode EXPORTED daqDataDescriptorBuilder_setRule(daqDataDescriptorBuilder* self, daqDataRule* rule);
    daqErrCode EXPORTED daqDataDescriptorBuilder_getRule(daqDataDescriptorBuilder* self, daqDataRule** rule);
    daqErrCode EXPORTED daqDataDescriptorBuilder_setOrigin(daqDataDescriptorBuilder* self, daqString* origin);
    daqErrCode EXPORTED daqDataDescriptorBuilder_getOrigin(daqDataDescriptorBuilder* self, daqString** origin);
    daqErrCode EXPORTED daqDataDescriptorBuilder_setTickResolution(daqDataDescriptorBuilder* self, daqRatio* tickResolution);
    daqErrCode EXPORTED daqDataDescriptorBuilder_getTickResolution(daqDataDescriptorBuilder* self, daqRatio** tickResolution);
    daqErrCode EXPORTED daqDataDescriptorBuilder_setPostScaling(daqDataDescriptorBuilder* self, daqScaling* scaling);
    daqErrCode EXPORTED daqDataDescriptorBuilder_getPostScaling(daqDataDescriptorBuilder* self, daqScaling** scaling);
    daqErrCode EXPORTED daqDataDescriptorBuilder_setStructFields(daqDataDescriptorBuilder* self, daqList* structFields);
    daqErrCode EXPORTED daqDataDescriptorBuilder_getStructFields(daqDataDescriptorBuilder* self, daqList** structFields);
    daqErrCode EXPORTED daqDataDescriptorBuilder_setMetadata(daqDataDescriptorBuilder* self, daqDict* metadata);
    daqErrCode EXPORTED daqDataDescriptorBuilder_getMetadata(daqDataDescriptorBuilder* self, daqDict** metadata);
    daqErrCode EXPORTED daqDataDescriptorBuilder_setReferenceDomainInfo(daqDataDescriptorBuilder* self, daqReferenceDomainInfo* referenceDomainInfo);
    daqErrCode EXPORTED daqDataDescriptorBuilder_getReferenceDomainInfo(daqDataDescriptorBuilder* self, daqReferenceDomainInfo** referenceDomainInfo);
    daqErrCode EXPORTED daqDataDescriptorBuilder_createDataDescriptorBuilder(daqDataDescriptorBuilder** obj);
    daqErrCode EXPORTED daqDataDescriptorBuilder_createDataDescriptorBuilderFromExisting(daqDataDescriptorBuilder** obj, daqDataDescriptor* descriptorToCopy);

#ifdef __cplusplus
}
#endif
