//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.6.0) on 27.04.2025 18:34:00.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include <ccommon.h>

    typedef struct DataDescriptorBuilder DataDescriptorBuilder;
    typedef struct DataDescriptor DataDescriptor;
    typedef struct String String;
    typedef struct List List;
    typedef struct Unit Unit;
    typedef struct Range Range;
    typedef struct DataRule DataRule;
    typedef struct Ratio Ratio;
    typedef struct Scaling Scaling;
    typedef struct Dict Dict;
    typedef struct ReferenceDomainInfo ReferenceDomainInfo;

    EXPORTED extern const IntfID DATA_DESCRIPTOR_BUILDER_INTF_ID;

    ErrCode EXPORTED DataDescriptorBuilder_build(DataDescriptorBuilder* self, DataDescriptor** dataDescriptor);
    ErrCode EXPORTED DataDescriptorBuilder_setName(DataDescriptorBuilder* self, String* name);
    ErrCode EXPORTED DataDescriptorBuilder_getName(DataDescriptorBuilder* self, String** name);
    ErrCode EXPORTED DataDescriptorBuilder_setDimensions(DataDescriptorBuilder* self, List* dimensions);
    ErrCode EXPORTED DataDescriptorBuilder_getDimensions(DataDescriptorBuilder* self, List** dimensions);
    ErrCode EXPORTED DataDescriptorBuilder_setSampleType(DataDescriptorBuilder* self, SampleType sampleType);
    ErrCode EXPORTED DataDescriptorBuilder_getSampleType(DataDescriptorBuilder* self, SampleType* sampleType);
    ErrCode EXPORTED DataDescriptorBuilder_setUnit(DataDescriptorBuilder* self, Unit* unit);
    ErrCode EXPORTED DataDescriptorBuilder_getUnit(DataDescriptorBuilder* self, Unit** unit);
    ErrCode EXPORTED DataDescriptorBuilder_setValueRange(DataDescriptorBuilder* self, Range* range);
    ErrCode EXPORTED DataDescriptorBuilder_getValueRange(DataDescriptorBuilder* self, Range** range);
    ErrCode EXPORTED DataDescriptorBuilder_setRule(DataDescriptorBuilder* self, DataRule* rule);
    ErrCode EXPORTED DataDescriptorBuilder_getRule(DataDescriptorBuilder* self, DataRule** rule);
    ErrCode EXPORTED DataDescriptorBuilder_setOrigin(DataDescriptorBuilder* self, String* origin);
    ErrCode EXPORTED DataDescriptorBuilder_getOrigin(DataDescriptorBuilder* self, String** origin);
    ErrCode EXPORTED DataDescriptorBuilder_setTickResolution(DataDescriptorBuilder* self, Ratio* tickResolution);
    ErrCode EXPORTED DataDescriptorBuilder_getTickResolution(DataDescriptorBuilder* self, Ratio** tickResolution);
    ErrCode EXPORTED DataDescriptorBuilder_setPostScaling(DataDescriptorBuilder* self, Scaling* scaling);
    ErrCode EXPORTED DataDescriptorBuilder_getPostScaling(DataDescriptorBuilder* self, Scaling** scaling);
    ErrCode EXPORTED DataDescriptorBuilder_setStructFields(DataDescriptorBuilder* self, List* structFields);
    ErrCode EXPORTED DataDescriptorBuilder_getStructFields(DataDescriptorBuilder* self, List** structFields);
    ErrCode EXPORTED DataDescriptorBuilder_setMetadata(DataDescriptorBuilder* self, Dict* metadata);
    ErrCode EXPORTED DataDescriptorBuilder_getMetadata(DataDescriptorBuilder* self, Dict** metadata);
    ErrCode EXPORTED DataDescriptorBuilder_setReferenceDomainInfo(DataDescriptorBuilder* self, ReferenceDomainInfo* referenceDomainInfo);
    ErrCode EXPORTED DataDescriptorBuilder_getReferenceDomainInfo(DataDescriptorBuilder* self, ReferenceDomainInfo** referenceDomainInfo);
    ErrCode EXPORTED DataDescriptorBuilder_createDataDescriptorBuilder(DataDescriptorBuilder** obj);
    ErrCode EXPORTED DataDescriptorBuilder_createDataDescriptorBuilderFromExisting(DataDescriptorBuilder** obj, DataDescriptor* descriptorToCopy);

#ifdef __cplusplus
}
#endif
