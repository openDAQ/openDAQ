//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.7.0) on 03.06.2025 22:07:40.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include <ccommon.h>

    typedef struct daqDataPacket daqDataPacket;
    typedef struct daqDataDescriptor daqDataDescriptor;
    typedef struct daqNumber daqNumber;
    typedef struct daqTypeManager daqTypeManager;
    typedef struct daqDeleter daqDeleter;

    EXPORTED extern const daqIntfID DAQ_DATA_PACKET_INTF_ID;

    daqErrCode EXPORTED daqDataPacket_getDataDescriptor(daqDataPacket* self, daqDataDescriptor** descriptor);
    daqErrCode EXPORTED daqDataPacket_getSampleCount(daqDataPacket* self, daqSizeT* sampleCount);
    daqErrCode EXPORTED daqDataPacket_getOffset(daqDataPacket* self, daqNumber** offset);
    daqErrCode EXPORTED daqDataPacket_getData(daqDataPacket* self, void** address);
    daqErrCode EXPORTED daqDataPacket_getRawData(daqDataPacket* self, void** address);
    daqErrCode EXPORTED daqDataPacket_getDataSize(daqDataPacket* self, daqSizeT* dataSize);
    daqErrCode EXPORTED daqDataPacket_getRawDataSize(daqDataPacket* self, daqSizeT* rawDataSize);
    daqErrCode EXPORTED daqDataPacket_getDomainPacket(daqDataPacket* self, daqDataPacket** packet);
    daqErrCode EXPORTED daqDataPacket_getPacketId(daqDataPacket* self, daqInt* packetId);
    daqErrCode EXPORTED daqDataPacket_getLastValue(daqDataPacket* self, daqBaseObject** value, daqTypeManager* typeManager);
    daqErrCode EXPORTED daqDataPacket_getValueByIndex(daqDataPacket* self, daqBaseObject** value, daqSizeT index, daqTypeManager* typeManager);
    daqErrCode EXPORTED daqDataPacket_getRawLastValue(daqDataPacket* self, void** value);
    daqErrCode EXPORTED daqDataPacket_getRawValueByIndex(daqDataPacket* self, void** value, daqSizeT index);
    daqErrCode EXPORTED daqDataPacket_createDataPacket(daqDataPacket** obj, daqDataDescriptor* descriptor, daqSizeT sampleCount, daqNumber* offset);
    daqErrCode EXPORTED daqDataPacket_createDataPacketWithExternalMemory(daqDataPacket** obj, daqDataPacket* domainPacket, daqDataDescriptor* descriptor, daqSizeT sampleCount, daqNumber* offset, void* externalMemory, daqDeleter* deleter, daqSizeT bufferSize);
    daqErrCode EXPORTED daqDataPacket_createDataPacketWithDomain(daqDataPacket** obj, daqDataPacket* domainPacket, daqDataDescriptor* descriptor, daqSizeT sampleCount, daqNumber* offset);
    daqErrCode EXPORTED daqDataPacket_createConstantDataPacketWithDomain(daqDataPacket** obj, daqDataPacket* domainPacket, daqDataDescriptor* descriptor, daqSizeT sampleCount, void* initialValue, void* otherValues, daqSizeT otherValueCount);

#ifdef __cplusplus
}
#endif
