//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.5.0) on 14.04.2025 21:38:11.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2025 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include "ccommon.h"

    typedef struct MirroredSignalConfig MirroredSignalConfig;
    typedef struct String String;
    typedef struct List List;
    typedef struct Event Event;

    EXPORTED extern const IntfID MIRRORED_SIGNAL_CONFIG_INTF_ID;

    ErrCode EXPORTED MirroredSignalConfig_getRemoteId(MirroredSignalConfig* self, String** id);
    ErrCode EXPORTED MirroredSignalConfig_getStreamingSources(MirroredSignalConfig* self, List** streamingConnectionStrings);
    ErrCode EXPORTED MirroredSignalConfig_setActiveStreamingSource(MirroredSignalConfig* self, String* streamingConnectionString);
    ErrCode EXPORTED MirroredSignalConfig_getActiveStreamingSource(MirroredSignalConfig* self, String** streamingConnectionString);
    ErrCode EXPORTED MirroredSignalConfig_deactivateStreaming(MirroredSignalConfig* self);
    ErrCode EXPORTED MirroredSignalConfig_getOnSubscribeComplete(MirroredSignalConfig* self, Event** event);
    ErrCode EXPORTED MirroredSignalConfig_getOnUnsubscribeComplete(MirroredSignalConfig* self, Event** event);

#ifdef __cplusplus
}
#endif
