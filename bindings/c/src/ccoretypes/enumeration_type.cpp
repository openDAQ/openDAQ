//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.7.0) on 03.06.2025 17:17:48.
// </auto-generated>
//------------------------------------------------------------------------------

#include <ccoretypes/enumeration_type.h>

#include <opendaq/opendaq.h>

#include <copendaq_private.h>

const daqIntfID DAQ_ENUMERATION_TYPE_INTF_ID = { daq::IEnumerationType::Id.Data1, daq::IEnumerationType::Id.Data2, daq::IEnumerationType::Id.Data3, daq::IEnumerationType::Id.Data4_UInt64 };

daqErrCode daqEnumerationType_getEnumeratorNames(daqEnumerationType* self, daqList** names)
{
    return reinterpret_cast<daq::IEnumerationType*>(self)->getEnumeratorNames(reinterpret_cast<daq::IList**>(names));
}

daqErrCode daqEnumerationType_getAsDictionary(daqEnumerationType* self, daqDict** dictionary)
{
    return reinterpret_cast<daq::IEnumerationType*>(self)->getAsDictionary(reinterpret_cast<daq::IDict**>(dictionary));
}

daqErrCode daqEnumerationType_getEnumeratorIntValue(daqEnumerationType* self, daqString* name, daqInt* value)
{
    return reinterpret_cast<daq::IEnumerationType*>(self)->getEnumeratorIntValue(reinterpret_cast<daq::IString*>(name), value);
}

daqErrCode daqEnumerationType_getCount(daqEnumerationType* self, daqSizeT* count)
{
    return reinterpret_cast<daq::IEnumerationType*>(self)->getCount(count);
}

daqErrCode daqEnumerationType_createEnumerationType(daqEnumerationType** obj, daqString* typeName, daqList* enumeratorNames, daqInt firstEnumeratorIntValue)
{
    daq::IEnumerationType* ptr = nullptr;
    daqErrCode err = daq::createEnumerationType(&ptr, reinterpret_cast<daq::IString*>(typeName), reinterpret_cast<daq::IList*>(enumeratorNames), firstEnumeratorIntValue);
    *obj = reinterpret_cast<daqEnumerationType*>(ptr);
    return err;
}

daqErrCode daqEnumerationType_createEnumerationTypeWithValues(daqEnumerationType** obj, daqString* typeName, daqDict* enumerators)
{
    daq::IEnumerationType* ptr = nullptr;
    daqErrCode err = daq::createEnumerationTypeWithValues(&ptr, reinterpret_cast<daq::IString*>(typeName), reinterpret_cast<daq::IDict*>(enumerators));
    *obj = reinterpret_cast<daqEnumerationType*>(ptr);
    return err;
}
