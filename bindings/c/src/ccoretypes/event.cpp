//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.7.0) on 03.06.2025 17:17:50.
// </auto-generated>
//------------------------------------------------------------------------------

#include <ccoretypes/event.h>

#include <opendaq/opendaq.h>

#include <copendaq_private.h>

const daqIntfID DAQ_EVENT_INTF_ID = { daq::IEvent::Id.Data1, daq::IEvent::Id.Data2, daq::IEvent::Id.Data3, daq::IEvent::Id.Data4_UInt64 };

daqErrCode daqEvent_addHandler(daqEvent* self, daqEventHandler* eventHandler)
{
    return reinterpret_cast<daq::IEvent*>(self)->addHandler(reinterpret_cast<daq::IEventHandler*>(eventHandler));
}

daqErrCode daqEvent_removeHandler(daqEvent* self, daqEventHandler* eventHandler)
{
    return reinterpret_cast<daq::IEvent*>(self)->removeHandler(reinterpret_cast<daq::IEventHandler*>(eventHandler));
}

daqErrCode daqEvent_trigger(daqEvent* self, daqBaseObject* sender, daqEventArgs* args)
{
    return reinterpret_cast<daq::IEvent*>(self)->trigger(reinterpret_cast<daq::IBaseObject*>(sender), reinterpret_cast<daq::IEventArgs*>(args));
}

daqErrCode daqEvent_clear(daqEvent* self)
{
    return reinterpret_cast<daq::IEvent*>(self)->clear();
}

daqErrCode daqEvent_getSubscriberCount(daqEvent* self, daqSizeT* count)
{
    return reinterpret_cast<daq::IEvent*>(self)->getSubscriberCount(count);
}

daqErrCode daqEvent_getSubscribers(daqEvent* self, daqList** subscribers)
{
    return reinterpret_cast<daq::IEvent*>(self)->getSubscribers(reinterpret_cast<daq::IList**>(subscribers));
}

daqErrCode daqEvent_mute(daqEvent* self)
{
    return reinterpret_cast<daq::IEvent*>(self)->mute();
}

daqErrCode daqEvent_unmute(daqEvent* self)
{
    return reinterpret_cast<daq::IEvent*>(self)->unmute();
}

daqErrCode daqEvent_muteListener(daqEvent* self, daqEventHandler* eventHandler)
{
    return reinterpret_cast<daq::IEvent*>(self)->muteListener(reinterpret_cast<daq::IEventHandler*>(eventHandler));
}

daqErrCode daqEvent_unmuteListener(daqEvent* self, daqEventHandler* eventHandler)
{
    return reinterpret_cast<daq::IEvent*>(self)->unmuteListener(reinterpret_cast<daq::IEventHandler*>(eventHandler));
}

daqErrCode daqEvent_createEvent(daqEvent** obj)
{
    daq::IEvent* ptr = nullptr;
    daqErrCode err = daq::createEvent(&ptr);
    *obj = reinterpret_cast<daqEvent*>(ptr);
    return err;
}
