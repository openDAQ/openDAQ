//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.5.0) on 01.04.2025 17:01:57.
// </auto-generated>
//------------------------------------------------------------------------------

#include "ccoretypes/struct_type.h"

#include <opendaq/opendaq.h>

#include "copendaq_private.h"

const IntfID STRUCT_TYPE_INTF_ID = { daq::IStructType::Id.Data1, daq::IStructType::Id.Data2, daq::IStructType::Id.Data3, daq::IStructType::Id.Data4_UInt64 };

ErrCode StructType_getFieldNames(StructType* self, List** names)
{
    return reinterpret_cast<daq::IStructType*>(self)->getFieldNames(reinterpret_cast<daq::IList**>(names));
}

ErrCode StructType_getFieldDefaultValues(StructType* self, List** defaultValues)
{
    return reinterpret_cast<daq::IStructType*>(self)->getFieldDefaultValues(reinterpret_cast<daq::IList**>(defaultValues));
}

ErrCode StructType_getFieldTypes(StructType* self, List** types)
{
    return reinterpret_cast<daq::IStructType*>(self)->getFieldTypes(reinterpret_cast<daq::IList**>(types));
}

ErrCode StructType_createStructType(StructType** obj, String* name, List* names, List* defaultValues, List* types)
{
    daq::IStructType* ptr = nullptr;
    ErrCode err = daq::createStructType(&ptr, reinterpret_cast<daq::IString*>(name), reinterpret_cast<daq::IList*>(names), reinterpret_cast<daq::IList*>(defaultValues), reinterpret_cast<daq::IList*>(types));
    *obj = reinterpret_cast<StructType*>(ptr);
    return err;
}

ErrCode StructType_createStructTypeNoDefaults(StructType** obj, String* name, List* names, List* types)
{
    daq::IStructType* ptr = nullptr;
    ErrCode err = daq::createStructTypeNoDefaults(&ptr, reinterpret_cast<daq::IString*>(name), reinterpret_cast<daq::IList*>(names), reinterpret_cast<daq::IList*>(types));
    *obj = reinterpret_cast<StructType*>(ptr);
    return err;
}
