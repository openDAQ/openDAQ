//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.6.0) on 27.04.2025 18:33:10.
// </auto-generated>
//------------------------------------------------------------------------------

#include <copendaq/component/component.h>

#include <opendaq/opendaq.h>

#include <copendaq_private.h>

const IntfID COMPONENT_INTF_ID = { daq::IComponent::Id.Data1, daq::IComponent::Id.Data2, daq::IComponent::Id.Data3, daq::IComponent::Id.Data4_UInt64 };

ErrCode Component_getLocalId(Component* self, String** localId)
{
    return reinterpret_cast<daq::IComponent*>(self)->getLocalId(reinterpret_cast<daq::IString**>(localId));
}

ErrCode Component_getGlobalId(Component* self, String** globalId)
{
    return reinterpret_cast<daq::IComponent*>(self)->getGlobalId(reinterpret_cast<daq::IString**>(globalId));
}

ErrCode Component_getActive(Component* self, Bool* active)
{
    return reinterpret_cast<daq::IComponent*>(self)->getActive(active);
}

ErrCode Component_setActive(Component* self, Bool active)
{
    return reinterpret_cast<daq::IComponent*>(self)->setActive(active);
}

ErrCode Component_getContext(Component* self, Context** context)
{
    return reinterpret_cast<daq::IComponent*>(self)->getContext(reinterpret_cast<daq::IContext**>(context));
}

ErrCode Component_getParent(Component* self, Component** parent)
{
    return reinterpret_cast<daq::IComponent*>(self)->getParent(reinterpret_cast<daq::IComponent**>(parent));
}

ErrCode Component_getName(Component* self, String** name)
{
    return reinterpret_cast<daq::IComponent*>(self)->getName(reinterpret_cast<daq::IString**>(name));
}

ErrCode Component_setName(Component* self, String* name)
{
    return reinterpret_cast<daq::IComponent*>(self)->setName(reinterpret_cast<daq::IString*>(name));
}

ErrCode Component_getDescription(Component* self, String** description)
{
    return reinterpret_cast<daq::IComponent*>(self)->getDescription(reinterpret_cast<daq::IString**>(description));
}

ErrCode Component_setDescription(Component* self, String* description)
{
    return reinterpret_cast<daq::IComponent*>(self)->setDescription(reinterpret_cast<daq::IString*>(description));
}

ErrCode Component_getTags(Component* self, Tags** tags)
{
    return reinterpret_cast<daq::IComponent*>(self)->getTags(reinterpret_cast<daq::ITags**>(tags));
}

ErrCode Component_getVisible(Component* self, Bool* visible)
{
    return reinterpret_cast<daq::IComponent*>(self)->getVisible(visible);
}

ErrCode Component_setVisible(Component* self, Bool visible)
{
    return reinterpret_cast<daq::IComponent*>(self)->setVisible(visible);
}

ErrCode Component_getLockedAttributes(Component* self, List** attributes)
{
    return reinterpret_cast<daq::IComponent*>(self)->getLockedAttributes(reinterpret_cast<daq::IList**>(attributes));
}

ErrCode Component_getOnComponentCoreEvent(Component* self, Event** event)
{
    return reinterpret_cast<daq::IComponent*>(self)->getOnComponentCoreEvent(reinterpret_cast<daq::IEvent**>(event));
}

ErrCode Component_getStatusContainer(Component* self, ComponentStatusContainer** statusContainer)
{
    return reinterpret_cast<daq::IComponent*>(self)->getStatusContainer(reinterpret_cast<daq::IComponentStatusContainer**>(statusContainer));
}

ErrCode Component_findComponent(Component* self, String* id, Component** outComponent)
{
    return reinterpret_cast<daq::IComponent*>(self)->findComponent(reinterpret_cast<daq::IString*>(id), reinterpret_cast<daq::IComponent**>(outComponent));
}

ErrCode Component_createComponent(Component** obj, Context* context, Component* parent, String* localId, String* className)
{
    daq::IComponent* ptr = nullptr;
    ErrCode err = daq::createComponent(&ptr, reinterpret_cast<daq::IContext*>(context), reinterpret_cast<daq::IComponent*>(parent), reinterpret_cast<daq::IString*>(localId), reinterpret_cast<daq::IString*>(className));
    *obj = reinterpret_cast<Component*>(ptr);
    return err;
}
