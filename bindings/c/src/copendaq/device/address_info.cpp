//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.5.0) on 14.04.2025 21:37:12.
// </auto-generated>
//------------------------------------------------------------------------------

#include "copendaq/device/address_info.h"

#include <opendaq/opendaq.h>

#include "copendaq_private.h"

const IntfID ADDRESS_INFO_INTF_ID = { daq::IAddressInfo::Id.Data1, daq::IAddressInfo::Id.Data2, daq::IAddressInfo::Id.Data3, daq::IAddressInfo::Id.Data4_UInt64 };

ErrCode AddressInfo_getAddress(AddressInfo* self, String** address)
{
    return reinterpret_cast<daq::IAddressInfo*>(self)->getAddress(reinterpret_cast<daq::IString**>(address));
}

ErrCode AddressInfo_getConnectionString(AddressInfo* self, String** connectionString)
{
    return reinterpret_cast<daq::IAddressInfo*>(self)->getConnectionString(reinterpret_cast<daq::IString**>(connectionString));
}

ErrCode AddressInfo_getType(AddressInfo* self, String** type)
{
    return reinterpret_cast<daq::IAddressInfo*>(self)->getType(reinterpret_cast<daq::IString**>(type));
}

ErrCode AddressInfo_getReachabilityStatus(AddressInfo* self, AddressReachabilityStatus* addressReachability)
{
    return reinterpret_cast<daq::IAddressInfo*>(self)->getReachabilityStatus(reinterpret_cast<daq::AddressReachabilityStatus*>(addressReachability));
}

ErrCode AddressInfo_createAddressInfo(AddressInfo** obj)
{
    daq::IAddressInfo* ptr = nullptr;
    ErrCode err = daq::createAddressInfo(&ptr);
    *obj = reinterpret_cast<AddressInfo*>(ptr);
    return err;
}

ErrCode AddressInfo_createAddressInfoFromBuilder(AddressInfo** obj, AddressInfoBuilder* builder)
{
    daq::IAddressInfo* ptr = nullptr;
    ErrCode err = daq::createAddressInfoFromBuilder(&ptr, reinterpret_cast<daq::IAddressInfoBuilder*>(builder));
    *obj = reinterpret_cast<AddressInfo*>(ptr);
    return err;
}
