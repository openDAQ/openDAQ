//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.7.0) on 15.06.2025 20:20:42.
// </auto-generated>
//------------------------------------------------------------------------------

#include <copendaq/device/device.h>

#include <opendaq/opendaq.h>

#include <copendaq_private.h>

const daqIntfID DAQ_DEVICE_INTF_ID = { daq::IDevice::Id.Data1, daq::IDevice::Id.Data2, daq::IDevice::Id.Data3, daq::IDevice::Id.Data4_UInt64 };

daqErrCode daqDevice_getInfo(daqDevice* self, daqDeviceInfo** info)
{
    return reinterpret_cast<daq::IDevice*>(self)->getInfo(reinterpret_cast<daq::IDeviceInfo**>(info));
}

daqErrCode daqDevice_getDomain(daqDevice* self, daqDeviceDomain** domain)
{
    return reinterpret_cast<daq::IDevice*>(self)->getDomain(reinterpret_cast<daq::IDeviceDomain**>(domain));
}

daqErrCode daqDevice_getInputsOutputsFolder(daqDevice* self, daqFolder** inputsOutputsFolder)
{
    return reinterpret_cast<daq::IDevice*>(self)->getInputsOutputsFolder(reinterpret_cast<daq::IFolder**>(inputsOutputsFolder));
}

daqErrCode daqDevice_getCustomComponents(daqDevice* self, daqList** customComponents)
{
    return reinterpret_cast<daq::IDevice*>(self)->getCustomComponents(reinterpret_cast<daq::IList**>(customComponents));
}

daqErrCode daqDevice_getSignals(daqDevice* self, daqList** signals, daqSearchFilter* searchFilter)
{
    return reinterpret_cast<daq::IDevice*>(self)->getSignals(reinterpret_cast<daq::IList**>(signals), reinterpret_cast<daq::ISearchFilter*>(searchFilter));
}

daqErrCode daqDevice_getSignalsRecursive(daqDevice* self, daqList** signals, daqSearchFilter* searchFilter)
{
    return reinterpret_cast<daq::IDevice*>(self)->getSignalsRecursive(reinterpret_cast<daq::IList**>(signals), reinterpret_cast<daq::ISearchFilter*>(searchFilter));
}

daqErrCode daqDevice_getChannels(daqDevice* self, daqList** channels, daqSearchFilter* searchFilter)
{
    return reinterpret_cast<daq::IDevice*>(self)->getChannels(reinterpret_cast<daq::IList**>(channels), reinterpret_cast<daq::ISearchFilter*>(searchFilter));
}

daqErrCode daqDevice_getChannelsRecursive(daqDevice* self, daqList** channels, daqSearchFilter* searchFilter)
{
    return reinterpret_cast<daq::IDevice*>(self)->getChannelsRecursive(reinterpret_cast<daq::IList**>(channels), reinterpret_cast<daq::ISearchFilter*>(searchFilter));
}

daqErrCode daqDevice_getDevices(daqDevice* self, daqList** devices, daqSearchFilter* searchFilter)
{
    return reinterpret_cast<daq::IDevice*>(self)->getDevices(reinterpret_cast<daq::IList**>(devices), reinterpret_cast<daq::ISearchFilter*>(searchFilter));
}

daqErrCode daqDevice_getAvailableDevices(daqDevice* self, daqList** availableDevices)
{
    return reinterpret_cast<daq::IDevice*>(self)->getAvailableDevices(reinterpret_cast<daq::IList**>(availableDevices));
}

daqErrCode daqDevice_getAvailableDeviceTypes(daqDevice* self, daqDict** deviceTypes)
{
    return reinterpret_cast<daq::IDevice*>(self)->getAvailableDeviceTypes(reinterpret_cast<daq::IDict**>(deviceTypes));
}

daqErrCode daqDevice_addDevice(daqDevice* self, daqDevice** device, daqString* connectionString, daqPropertyObject* config)
{
    return reinterpret_cast<daq::IDevice*>(self)->addDevice(reinterpret_cast<daq::IDevice**>(device), reinterpret_cast<daq::IString*>(connectionString), reinterpret_cast<daq::IPropertyObject*>(config));
}

daqErrCode daqDevice_removeDevice(daqDevice* self, daqDevice* device)
{
    return reinterpret_cast<daq::IDevice*>(self)->removeDevice(reinterpret_cast<daq::IDevice*>(device));
}

daqErrCode daqDevice_getFunctionBlocks(daqDevice* self, daqList** functionBlocks, daqSearchFilter* searchFilter)
{
    return reinterpret_cast<daq::IDevice*>(self)->getFunctionBlocks(reinterpret_cast<daq::IList**>(functionBlocks), reinterpret_cast<daq::ISearchFilter*>(searchFilter));
}

daqErrCode daqDevice_getAvailableFunctionBlockTypes(daqDevice* self, daqDict** functionBlockTypes)
{
    return reinterpret_cast<daq::IDevice*>(self)->getAvailableFunctionBlockTypes(reinterpret_cast<daq::IDict**>(functionBlockTypes));
}

daqErrCode daqDevice_addFunctionBlock(daqDevice* self, daqFunctionBlock** functionBlock, daqString* typeId, daqPropertyObject* config)
{
    return reinterpret_cast<daq::IDevice*>(self)->addFunctionBlock(reinterpret_cast<daq::IFunctionBlock**>(functionBlock), reinterpret_cast<daq::IString*>(typeId), reinterpret_cast<daq::IPropertyObject*>(config));
}

daqErrCode daqDevice_removeFunctionBlock(daqDevice* self, daqFunctionBlock* functionBlock)
{
    return reinterpret_cast<daq::IDevice*>(self)->removeFunctionBlock(reinterpret_cast<daq::IFunctionBlock*>(functionBlock));
}

daqErrCode daqDevice_saveConfiguration(daqDevice* self, daqString** configuration)
{
    return reinterpret_cast<daq::IDevice*>(self)->saveConfiguration(reinterpret_cast<daq::IString**>(configuration));
}

daqErrCode daqDevice_loadConfiguration(daqDevice* self, daqString* configuration, daqUpdateParameters* config)
{
    return reinterpret_cast<daq::IDevice*>(self)->loadConfiguration(reinterpret_cast<daq::IString*>(configuration), reinterpret_cast<daq::IUpdateParameters*>(config));
}

daqErrCode daqDevice_getTicksSinceOrigin(daqDevice* self, daqUInt* ticks)
{
    return reinterpret_cast<daq::IDevice*>(self)->getTicksSinceOrigin(reinterpret_cast<daq::UInt*>(ticks));
}

daqErrCode daqDevice_addStreaming(daqDevice* self, daqStreaming** streaming, daqString* connectionString, daqPropertyObject* config)
{
    return reinterpret_cast<daq::IDevice*>(self)->addStreaming(reinterpret_cast<daq::IStreaming**>(streaming), reinterpret_cast<daq::IString*>(connectionString), reinterpret_cast<daq::IPropertyObject*>(config));
}

daqErrCode daqDevice_createDefaultAddDeviceConfig(daqDevice* self, daqPropertyObject** defaultConfig)
{
    return reinterpret_cast<daq::IDevice*>(self)->createDefaultAddDeviceConfig(reinterpret_cast<daq::IPropertyObject**>(defaultConfig));
}

daqErrCode daqDevice_getSyncComponent(daqDevice* self, daqSyncComponent** sync)
{
    return reinterpret_cast<daq::IDevice*>(self)->getSyncComponent(reinterpret_cast<daq::ISyncComponent**>(sync));
}

daqErrCode daqDevice_addServer(daqDevice* self, daqString* typeId, daqPropertyObject* config, daqServer** server)
{
    return reinterpret_cast<daq::IDevice*>(self)->addServer(reinterpret_cast<daq::IString*>(typeId), reinterpret_cast<daq::IPropertyObject*>(config), reinterpret_cast<daq::IServer**>(server));
}

daqErrCode daqDevice_removeServer(daqDevice* self, daqServer* server)
{
    return reinterpret_cast<daq::IDevice*>(self)->removeServer(reinterpret_cast<daq::IServer*>(server));
}

daqErrCode daqDevice_getServers(daqDevice* self, daqList** servers)
{
    return reinterpret_cast<daq::IDevice*>(self)->getServers(reinterpret_cast<daq::IList**>(servers));
}

daqErrCode daqDevice_lock(daqDevice* self)
{
    return reinterpret_cast<daq::IDevice*>(self)->lock();
}

daqErrCode daqDevice_unlock(daqDevice* self)
{
    return reinterpret_cast<daq::IDevice*>(self)->unlock();
}

daqErrCode daqDevice_isLocked(daqDevice* self, daqBool* locked)
{
    return reinterpret_cast<daq::IDevice*>(self)->isLocked(locked);
}

daqErrCode daqDevice_getLogFileInfos(daqDevice* self, daqList** logFileInfos)
{
    return reinterpret_cast<daq::IDevice*>(self)->getLogFileInfos(reinterpret_cast<daq::IList**>(logFileInfos));
}

daqErrCode daqDevice_getLog(daqDevice* self, daqString** log, daqString* id, daqInt size, daqInt offset)
{
    return reinterpret_cast<daq::IDevice*>(self)->getLog(reinterpret_cast<daq::IString**>(log), reinterpret_cast<daq::IString*>(id), size, offset);
}

daqErrCode daqDevice_getConnectionStatusContainer(daqDevice* self, daqComponentStatusContainer** statusContainer)
{
    return reinterpret_cast<daq::IDevice*>(self)->getConnectionStatusContainer(reinterpret_cast<daq::IComponentStatusContainer**>(statusContainer));
}

daqErrCode daqDevice_getAvailableOperationModes(daqDevice* self, daqList** availableOpModes)
{
    return reinterpret_cast<daq::IDevice*>(self)->getAvailableOperationModes(reinterpret_cast<daq::IList**>(availableOpModes));
}

daqErrCode daqDevice_setOperationMode(daqDevice* self, daqOperationModeType modeType)
{
    return reinterpret_cast<daq::IDevice*>(self)->setOperationMode(static_cast<daq::OperationModeType>(modeType));
}

daqErrCode daqDevice_setOperationModeRecursive(daqDevice* self, daqOperationModeType modeType)
{
    return reinterpret_cast<daq::IDevice*>(self)->setOperationModeRecursive(static_cast<daq::OperationModeType>(modeType));
}

daqErrCode daqDevice_addDevices(daqDevice* self, daqDict** devices, daqDict* connectionArgs, daqDict* errCodes, daqDict* errorInfos)
{
    return reinterpret_cast<daq::IDevice*>(self)->addDevices(reinterpret_cast<daq::IDict**>(devices), reinterpret_cast<daq::IDict*>(connectionArgs), reinterpret_cast<daq::IDict*>(errCodes), reinterpret_cast<daq::IDict*>(errorInfos));
}
