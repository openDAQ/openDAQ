//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.7.0) on 03.06.2025 22:07:05.
// </auto-generated>
//------------------------------------------------------------------------------

#include <copendaq/device/device_info.h>

#include <opendaq/opendaq.h>

#include <copendaq_private.h>

const daqIntfID DAQ_DEVICE_INFO_INTF_ID = { daq::IDeviceInfo::Id.Data1, daq::IDeviceInfo::Id.Data2, daq::IDeviceInfo::Id.Data3, daq::IDeviceInfo::Id.Data4_UInt64 };

daqErrCode daqDeviceInfo_getName(daqDeviceInfo* self, daqString** name)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getName(reinterpret_cast<daq::IString**>(name));
}

daqErrCode daqDeviceInfo_getConnectionString(daqDeviceInfo* self, daqString** connectionString)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getConnectionString(reinterpret_cast<daq::IString**>(connectionString));
}

daqErrCode daqDeviceInfo_getDeviceType(daqDeviceInfo* self, daqDeviceType** deviceType)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getDeviceType(reinterpret_cast<daq::IDeviceType**>(deviceType));
}

daqErrCode daqDeviceInfo_getManufacturer(daqDeviceInfo* self, daqString** manufacturer)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getManufacturer(reinterpret_cast<daq::IString**>(manufacturer));
}

daqErrCode daqDeviceInfo_getManufacturerUri(daqDeviceInfo* self, daqString** manufacturerUri)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getManufacturerUri(reinterpret_cast<daq::IString**>(manufacturerUri));
}

daqErrCode daqDeviceInfo_getModel(daqDeviceInfo* self, daqString** model)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getModel(reinterpret_cast<daq::IString**>(model));
}

daqErrCode daqDeviceInfo_getProductCode(daqDeviceInfo* self, daqString** productCode)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getProductCode(reinterpret_cast<daq::IString**>(productCode));
}

daqErrCode daqDeviceInfo_getDeviceRevision(daqDeviceInfo* self, daqString** deviceRevision)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getDeviceRevision(reinterpret_cast<daq::IString**>(deviceRevision));
}

daqErrCode daqDeviceInfo_getHardwareRevision(daqDeviceInfo* self, daqString** hardwareRevision)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getHardwareRevision(reinterpret_cast<daq::IString**>(hardwareRevision));
}

daqErrCode daqDeviceInfo_getSoftwareRevision(daqDeviceInfo* self, daqString** softwareRevision)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getSoftwareRevision(reinterpret_cast<daq::IString**>(softwareRevision));
}

daqErrCode daqDeviceInfo_getDeviceManual(daqDeviceInfo* self, daqString** deviceManual)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getDeviceManual(reinterpret_cast<daq::IString**>(deviceManual));
}

daqErrCode daqDeviceInfo_getDeviceClass(daqDeviceInfo* self, daqString** deviceClass)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getDeviceClass(reinterpret_cast<daq::IString**>(deviceClass));
}

daqErrCode daqDeviceInfo_getSerialNumber(daqDeviceInfo* self, daqString** serialNumber)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getSerialNumber(reinterpret_cast<daq::IString**>(serialNumber));
}

daqErrCode daqDeviceInfo_getProductInstanceUri(daqDeviceInfo* self, daqString** productInstanceUri)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getProductInstanceUri(reinterpret_cast<daq::IString**>(productInstanceUri));
}

daqErrCode daqDeviceInfo_getRevisionCounter(daqDeviceInfo* self, daqInt* revisionCounter)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getRevisionCounter(revisionCounter);
}

daqErrCode daqDeviceInfo_getAssetId(daqDeviceInfo* self, daqString** id)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getAssetId(reinterpret_cast<daq::IString**>(id));
}

daqErrCode daqDeviceInfo_getMacAddress(daqDeviceInfo* self, daqString** macAddress)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getMacAddress(reinterpret_cast<daq::IString**>(macAddress));
}

daqErrCode daqDeviceInfo_getParentMacAddress(daqDeviceInfo* self, daqString** macAddress)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getParentMacAddress(reinterpret_cast<daq::IString**>(macAddress));
}

daqErrCode daqDeviceInfo_getPlatform(daqDeviceInfo* self, daqString** platform)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getPlatform(reinterpret_cast<daq::IString**>(platform));
}

daqErrCode daqDeviceInfo_getPosition(daqDeviceInfo* self, daqInt* position)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getPosition(position);
}

daqErrCode daqDeviceInfo_getSystemType(daqDeviceInfo* self, daqString** type)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getSystemType(reinterpret_cast<daq::IString**>(type));
}

daqErrCode daqDeviceInfo_getSystemUuid(daqDeviceInfo* self, daqString** uuid)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getSystemUuid(reinterpret_cast<daq::IString**>(uuid));
}

daqErrCode daqDeviceInfo_getCustomInfoPropertyNames(daqDeviceInfo* self, daqList** customInfoNames)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getCustomInfoPropertyNames(reinterpret_cast<daq::IList**>(customInfoNames));
}

daqErrCode daqDeviceInfo_getSdkVersion(daqDeviceInfo* self, daqString** version)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getSdkVersion(reinterpret_cast<daq::IString**>(version));
}

daqErrCode daqDeviceInfo_getServerCapabilities(daqDeviceInfo* self, daqList** serverCapabilities)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getServerCapabilities(reinterpret_cast<daq::IList**>(serverCapabilities));
}

daqErrCode daqDeviceInfo_getLocation(daqDeviceInfo* self, daqString** location)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getLocation(reinterpret_cast<daq::IString**>(location));
}

daqErrCode daqDeviceInfo_getConfigurationConnectionInfo(daqDeviceInfo* self, daqServerCapability** connectionInfo)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getConfigurationConnectionInfo(reinterpret_cast<daq::IServerCapability**>(connectionInfo));
}

daqErrCode daqDeviceInfo_hasServerCapability(daqDeviceInfo* self, daqString* protocolId, daqBool* hasCapability)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->hasServerCapability(reinterpret_cast<daq::IString*>(protocolId), hasCapability);
}

daqErrCode daqDeviceInfo_getServerCapability(daqDeviceInfo* self, daqString* protocolId, daqServerCapability** serverCapability)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getServerCapability(reinterpret_cast<daq::IString*>(protocolId), reinterpret_cast<daq::IServerCapability**>(serverCapability));
}

daqErrCode daqDeviceInfo_getNetworkInterfaces(daqDeviceInfo* self, daqDict** interfaces)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getNetworkInterfaces(reinterpret_cast<daq::IDict**>(interfaces));
}

daqErrCode daqDeviceInfo_getNetworkInterface(daqDeviceInfo* self, daqString* interfaceName, daqNetworkInterface** intf)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getNetworkInterface(reinterpret_cast<daq::IString*>(interfaceName), reinterpret_cast<daq::INetworkInterface**>(intf));
}

daqErrCode daqDeviceInfo_getUserName(daqDeviceInfo* self, daqString** userName)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getUserName(reinterpret_cast<daq::IString**>(userName));
}

daqErrCode daqDeviceInfo_getConnectedClientsInfo(daqDeviceInfo* self, daqList** connectedClientsInfo)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getConnectedClientsInfo(reinterpret_cast<daq::IList**>(connectedClientsInfo));
}
