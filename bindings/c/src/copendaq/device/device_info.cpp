//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.5.0) on 14.04.2025 21:37:16.
// </auto-generated>
//------------------------------------------------------------------------------

#include "copendaq/device/device_info.h"

#include <opendaq/opendaq.h>

#include "copendaq_private.h"

const IntfID DEVICE_INFO_INTF_ID = { daq::IDeviceInfo::Id.Data1, daq::IDeviceInfo::Id.Data2, daq::IDeviceInfo::Id.Data3, daq::IDeviceInfo::Id.Data4_UInt64 };

ErrCode DeviceInfo_getName(DeviceInfo* self, String** name)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getName(reinterpret_cast<daq::IString**>(name));
}

ErrCode DeviceInfo_getConnectionString(DeviceInfo* self, String** connectionString)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getConnectionString(reinterpret_cast<daq::IString**>(connectionString));
}

ErrCode DeviceInfo_getDeviceType(DeviceInfo* self, DeviceType** deviceType)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getDeviceType(reinterpret_cast<daq::IDeviceType**>(deviceType));
}

ErrCode DeviceInfo_getManufacturer(DeviceInfo* self, String** manufacturer)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getManufacturer(reinterpret_cast<daq::IString**>(manufacturer));
}

ErrCode DeviceInfo_getManufacturerUri(DeviceInfo* self, String** manufacturerUri)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getManufacturerUri(reinterpret_cast<daq::IString**>(manufacturerUri));
}

ErrCode DeviceInfo_getModel(DeviceInfo* self, String** model)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getModel(reinterpret_cast<daq::IString**>(model));
}

ErrCode DeviceInfo_getProductCode(DeviceInfo* self, String** productCode)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getProductCode(reinterpret_cast<daq::IString**>(productCode));
}

ErrCode DeviceInfo_getDeviceRevision(DeviceInfo* self, String** deviceRevision)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getDeviceRevision(reinterpret_cast<daq::IString**>(deviceRevision));
}

ErrCode DeviceInfo_getHardwareRevision(DeviceInfo* self, String** hardwareRevision)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getHardwareRevision(reinterpret_cast<daq::IString**>(hardwareRevision));
}

ErrCode DeviceInfo_getSoftwareRevision(DeviceInfo* self, String** softwareRevision)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getSoftwareRevision(reinterpret_cast<daq::IString**>(softwareRevision));
}

ErrCode DeviceInfo_getDeviceManual(DeviceInfo* self, String** deviceManual)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getDeviceManual(reinterpret_cast<daq::IString**>(deviceManual));
}

ErrCode DeviceInfo_getDeviceClass(DeviceInfo* self, String** deviceClass)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getDeviceClass(reinterpret_cast<daq::IString**>(deviceClass));
}

ErrCode DeviceInfo_getSerialNumber(DeviceInfo* self, String** serialNumber)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getSerialNumber(reinterpret_cast<daq::IString**>(serialNumber));
}

ErrCode DeviceInfo_getProductInstanceUri(DeviceInfo* self, String** productInstanceUri)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getProductInstanceUri(reinterpret_cast<daq::IString**>(productInstanceUri));
}

ErrCode DeviceInfo_getRevisionCounter(DeviceInfo* self, Int* revisionCounter)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getRevisionCounter(revisionCounter);
}

ErrCode DeviceInfo_getAssetId(DeviceInfo* self, String** id)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getAssetId(reinterpret_cast<daq::IString**>(id));
}

ErrCode DeviceInfo_getMacAddress(DeviceInfo* self, String** macAddress)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getMacAddress(reinterpret_cast<daq::IString**>(macAddress));
}

ErrCode DeviceInfo_getParentMacAddress(DeviceInfo* self, String** macAddress)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getParentMacAddress(reinterpret_cast<daq::IString**>(macAddress));
}

ErrCode DeviceInfo_getPlatform(DeviceInfo* self, String** platform)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getPlatform(reinterpret_cast<daq::IString**>(platform));
}

ErrCode DeviceInfo_getPosition(DeviceInfo* self, Int* position)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getPosition(position);
}

ErrCode DeviceInfo_getSystemType(DeviceInfo* self, String** type)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getSystemType(reinterpret_cast<daq::IString**>(type));
}

ErrCode DeviceInfo_getSystemUuid(DeviceInfo* self, String** uuid)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getSystemUuid(reinterpret_cast<daq::IString**>(uuid));
}

ErrCode DeviceInfo_getCustomInfoPropertyNames(DeviceInfo* self, List** customInfoNames)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getCustomInfoPropertyNames(reinterpret_cast<daq::IList**>(customInfoNames));
}

ErrCode DeviceInfo_getSdkVersion(DeviceInfo* self, String** version)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getSdkVersion(reinterpret_cast<daq::IString**>(version));
}

ErrCode DeviceInfo_getServerCapabilities(DeviceInfo* self, List** serverCapabilities)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getServerCapabilities(reinterpret_cast<daq::IList**>(serverCapabilities));
}

ErrCode DeviceInfo_getLocation(DeviceInfo* self, String** location)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getLocation(reinterpret_cast<daq::IString**>(location));
}

ErrCode DeviceInfo_getConfigurationConnectionInfo(DeviceInfo* self, ServerCapability** connectionInfo)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getConfigurationConnectionInfo(reinterpret_cast<daq::IServerCapability**>(connectionInfo));
}

ErrCode DeviceInfo_hasServerCapability(DeviceInfo* self, String* protocolId, Bool* hasCapability)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->hasServerCapability(reinterpret_cast<daq::IString*>(protocolId), hasCapability);
}

ErrCode DeviceInfo_getServerCapability(DeviceInfo* self, String* protocolId, ServerCapability** serverCapability)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getServerCapability(reinterpret_cast<daq::IString*>(protocolId), reinterpret_cast<daq::IServerCapability**>(serverCapability));
}

ErrCode DeviceInfo_getNetworkInterfaces(DeviceInfo* self, Dict** interfaces)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getNetworkInterfaces(reinterpret_cast<daq::IDict**>(interfaces));
}

ErrCode DeviceInfo_getNetworkInterface(DeviceInfo* self, String* interfaceName, NetworkInterface** interface)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getNetworkInterface(reinterpret_cast<daq::IString*>(interfaceName), reinterpret_cast<daq::INetworkInterface**>(interface));
}

ErrCode DeviceInfo_getUserName(DeviceInfo* self, String** userName)
{
    return reinterpret_cast<daq::IDeviceInfo*>(self)->getUserName(reinterpret_cast<daq::IString**>(userName));
}
