//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.7.0) on 03.06.2025 22:07:09.
// </auto-generated>
//------------------------------------------------------------------------------

#include <copendaq/device/log_file_info.h>

#include <opendaq/opendaq.h>

#include <copendaq_private.h>

const daqIntfID DAQ_LOG_FILE_INFO_INTF_ID = { daq::ILogFileInfo::Id.Data1, daq::ILogFileInfo::Id.Data2, daq::ILogFileInfo::Id.Data3, daq::ILogFileInfo::Id.Data4_UInt64 };

daqErrCode daqLogFileInfo_getId(daqLogFileInfo* self, daqString** id)
{
    return reinterpret_cast<daq::ILogFileInfo*>(self)->getId(reinterpret_cast<daq::IString**>(id));
}

daqErrCode daqLogFileInfo_getLocalPath(daqLogFileInfo* self, daqString** localPath)
{
    return reinterpret_cast<daq::ILogFileInfo*>(self)->getLocalPath(reinterpret_cast<daq::IString**>(localPath));
}

daqErrCode daqLogFileInfo_getName(daqLogFileInfo* self, daqString** name)
{
    return reinterpret_cast<daq::ILogFileInfo*>(self)->getName(reinterpret_cast<daq::IString**>(name));
}

daqErrCode daqLogFileInfo_getDescription(daqLogFileInfo* self, daqString** description)
{
    return reinterpret_cast<daq::ILogFileInfo*>(self)->getDescription(reinterpret_cast<daq::IString**>(description));
}

daqErrCode daqLogFileInfo_getSize(daqLogFileInfo* self, daqSizeT* size)
{
    return reinterpret_cast<daq::ILogFileInfo*>(self)->getSize(size);
}

daqErrCode daqLogFileInfo_getEncoding(daqLogFileInfo* self, daqString** encoding)
{
    return reinterpret_cast<daq::ILogFileInfo*>(self)->getEncoding(reinterpret_cast<daq::IString**>(encoding));
}

daqErrCode daqLogFileInfo_getLastModified(daqLogFileInfo* self, daqString** lastModified)
{
    return reinterpret_cast<daq::ILogFileInfo*>(self)->getLastModified(reinterpret_cast<daq::IString**>(lastModified));
}

daqErrCode daqLogFileInfo_createLogFileInfoFromBuilder(daqLogFileInfo** obj, daqLogFileInfoBuilder* builder)
{
    daq::ILogFileInfo* ptr = nullptr;
    daqErrCode err = daq::createLogFileInfoFromBuilder(&ptr, reinterpret_cast<daq::ILogFileInfoBuilder*>(builder));
    *obj = reinterpret_cast<daqLogFileInfo*>(ptr);
    return err;
}
