//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.5.0) on 14.04.2025 21:37:20.
// </auto-generated>
//------------------------------------------------------------------------------

#include "copendaq/device/log_file_info.h"

#include <opendaq/opendaq.h>

#include "copendaq_private.h"

const IntfID LOG_FILE_INFO_INTF_ID = { daq::ILogFileInfo::Id.Data1, daq::ILogFileInfo::Id.Data2, daq::ILogFileInfo::Id.Data3, daq::ILogFileInfo::Id.Data4_UInt64 };

ErrCode LogFileInfo_getId(LogFileInfo* self, String** id)
{
    return reinterpret_cast<daq::ILogFileInfo*>(self)->getId(reinterpret_cast<daq::IString**>(id));
}

ErrCode LogFileInfo_getLocalPath(LogFileInfo* self, String** localPath)
{
    return reinterpret_cast<daq::ILogFileInfo*>(self)->getLocalPath(reinterpret_cast<daq::IString**>(localPath));
}

ErrCode LogFileInfo_getName(LogFileInfo* self, String** name)
{
    return reinterpret_cast<daq::ILogFileInfo*>(self)->getName(reinterpret_cast<daq::IString**>(name));
}

ErrCode LogFileInfo_getDescription(LogFileInfo* self, String** description)
{
    return reinterpret_cast<daq::ILogFileInfo*>(self)->getDescription(reinterpret_cast<daq::IString**>(description));
}

ErrCode LogFileInfo_getSize(LogFileInfo* self, SizeT* size)
{
    return reinterpret_cast<daq::ILogFileInfo*>(self)->getSize(size);
}

ErrCode LogFileInfo_getEncoding(LogFileInfo* self, String** encoding)
{
    return reinterpret_cast<daq::ILogFileInfo*>(self)->getEncoding(reinterpret_cast<daq::IString**>(encoding));
}

ErrCode LogFileInfo_getLastModified(LogFileInfo* self, String** lastModified)
{
    return reinterpret_cast<daq::ILogFileInfo*>(self)->getLastModified(reinterpret_cast<daq::IString**>(lastModified));
}

ErrCode LogFileInfo_createLogFileInfoFromBuilder(LogFileInfo** obj, LogFileInfoBuilder* builder)
{
    daq::ILogFileInfo* ptr = nullptr;
    ErrCode err = daq::createLogFileInfoFromBuilder(&ptr, reinterpret_cast<daq::ILogFileInfoBuilder*>(builder));
    *obj = reinterpret_cast<LogFileInfo*>(ptr);
    return err;
}
