//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.7.0) on 03.06.2025 22:07:10.
// </auto-generated>
//------------------------------------------------------------------------------

#include <copendaq/device/network_interface.h>

#include <opendaq/opendaq.h>

#include <copendaq_private.h>

const daqIntfID DAQ_NETWORK_INTERFACE_INTF_ID = { daq::INetworkInterface::Id.Data1, daq::INetworkInterface::Id.Data2, daq::INetworkInterface::Id.Data3, daq::INetworkInterface::Id.Data4_UInt64 };

daqErrCode daqNetworkInterface_requestCurrentConfiguration(daqNetworkInterface* self, daqPropertyObject** config)
{
    return reinterpret_cast<daq::INetworkInterface*>(self)->requestCurrentConfiguration(reinterpret_cast<daq::IPropertyObject**>(config));
}

daqErrCode daqNetworkInterface_submitConfiguration(daqNetworkInterface* self, daqPropertyObject* config)
{
    return reinterpret_cast<daq::INetworkInterface*>(self)->submitConfiguration(reinterpret_cast<daq::IPropertyObject*>(config));
}

daqErrCode daqNetworkInterface_createDefaultConfiguration(daqNetworkInterface* self, daqPropertyObject** defaultConfig)
{
    return reinterpret_cast<daq::INetworkInterface*>(self)->createDefaultConfiguration(reinterpret_cast<daq::IPropertyObject**>(defaultConfig));
}

daqErrCode daqNetworkInterface_createNetworkInterface(daqNetworkInterface** obj, daqString* name, daqString* ownerDeviceManufacturerName, daqString* ownerDeviceSerialNumber, daqBaseObject* moduleManager)
{
    daq::INetworkInterface* ptr = nullptr;
    daqErrCode err = daq::createNetworkInterface(&ptr, reinterpret_cast<daq::IString*>(name), reinterpret_cast<daq::IString*>(ownerDeviceManufacturerName), reinterpret_cast<daq::IString*>(ownerDeviceSerialNumber), reinterpret_cast<daq::IBaseObject*>(moduleManager));
    *obj = reinterpret_cast<daqNetworkInterface*>(ptr);
    return err;
}
