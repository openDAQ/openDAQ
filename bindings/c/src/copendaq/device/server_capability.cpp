//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.7.0) on 03.06.2025 22:07:11.
// </auto-generated>
//------------------------------------------------------------------------------

#include <copendaq/device/server_capability.h>

#include <opendaq/opendaq.h>

#include <copendaq_private.h>

const daqIntfID DAQ_SERVER_CAPABILITY_INTF_ID = { daq::IServerCapability::Id.Data1, daq::IServerCapability::Id.Data2, daq::IServerCapability::Id.Data3, daq::IServerCapability::Id.Data4_UInt64 };

daqErrCode daqServerCapability_getConnectionString(daqServerCapability* self, daqString** connectionString)
{
    return reinterpret_cast<daq::IServerCapability*>(self)->getConnectionString(reinterpret_cast<daq::IString**>(connectionString));
}

daqErrCode daqServerCapability_getConnectionStrings(daqServerCapability* self, daqList** connectionStrings)
{
    return reinterpret_cast<daq::IServerCapability*>(self)->getConnectionStrings(reinterpret_cast<daq::IList**>(connectionStrings));
}

daqErrCode daqServerCapability_getProtocolName(daqServerCapability* self, daqString** protocolName)
{
    return reinterpret_cast<daq::IServerCapability*>(self)->getProtocolName(reinterpret_cast<daq::IString**>(protocolName));
}

daqErrCode daqServerCapability_getProtocolId(daqServerCapability* self, daqString** protocolId)
{
    return reinterpret_cast<daq::IServerCapability*>(self)->getProtocolId(reinterpret_cast<daq::IString**>(protocolId));
}

daqErrCode daqServerCapability_getProtocolType(daqServerCapability* self, daqProtocolType* type)
{
    return reinterpret_cast<daq::IServerCapability*>(self)->getProtocolType(reinterpret_cast<daq::ProtocolType*>(type));
}

daqErrCode daqServerCapability_getPrefix(daqServerCapability* self, daqString** prefix)
{
    return reinterpret_cast<daq::IServerCapability*>(self)->getPrefix(reinterpret_cast<daq::IString**>(prefix));
}

daqErrCode daqServerCapability_getConnectionType(daqServerCapability* self, daqString** type)
{
    return reinterpret_cast<daq::IServerCapability*>(self)->getConnectionType(reinterpret_cast<daq::IString**>(type));
}

daqErrCode daqServerCapability_getCoreEventsEnabled(daqServerCapability* self, daqBool* enabled)
{
    return reinterpret_cast<daq::IServerCapability*>(self)->getCoreEventsEnabled(enabled);
}

daqErrCode daqServerCapability_getAddresses(daqServerCapability* self, daqList** addresses)
{
    return reinterpret_cast<daq::IServerCapability*>(self)->getAddresses(reinterpret_cast<daq::IList**>(addresses));
}

daqErrCode daqServerCapability_getPort(daqServerCapability* self, daqInteger** port)
{
    return reinterpret_cast<daq::IServerCapability*>(self)->getPort(reinterpret_cast<daq::IInteger**>(port));
}

daqErrCode daqServerCapability_getAddressInfo(daqServerCapability* self, daqList** addressInfo)
{
    return reinterpret_cast<daq::IServerCapability*>(self)->getAddressInfo(reinterpret_cast<daq::IList**>(addressInfo));
}

daqErrCode daqServerCapability_getProtocolVersion(daqServerCapability* self, daqString** version)
{
    return reinterpret_cast<daq::IServerCapability*>(self)->getProtocolVersion(reinterpret_cast<daq::IString**>(version));
}
