//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.6.0) on 27.04.2025 18:33:32.
// </auto-generated>
//------------------------------------------------------------------------------

#include <copendaq/device/server_capability_config.h>

#include <opendaq/opendaq.h>

#include <copendaq_private.h>

const IntfID SERVER_CAPABILITY_CONFIG_INTF_ID = { daq::IServerCapabilityConfig::Id.Data1, daq::IServerCapabilityConfig::Id.Data2, daq::IServerCapabilityConfig::Id.Data3, daq::IServerCapabilityConfig::Id.Data4_UInt64 };

ErrCode ServerCapabilityConfig_setConnectionString(ServerCapabilityConfig* self, String* connectionString)
{
    return reinterpret_cast<daq::IServerCapabilityConfig*>(self)->setConnectionString(reinterpret_cast<daq::IString*>(connectionString));
}

ErrCode ServerCapabilityConfig_addConnectionString(ServerCapabilityConfig* self, String* connectionString)
{
    return reinterpret_cast<daq::IServerCapabilityConfig*>(self)->addConnectionString(reinterpret_cast<daq::IString*>(connectionString));
}

ErrCode ServerCapabilityConfig_setProtocolId(ServerCapabilityConfig* self, String* protocolId)
{
    return reinterpret_cast<daq::IServerCapabilityConfig*>(self)->setProtocolId(reinterpret_cast<daq::IString*>(protocolId));
}

ErrCode ServerCapabilityConfig_setProtocolName(ServerCapabilityConfig* self, String* protocolName)
{
    return reinterpret_cast<daq::IServerCapabilityConfig*>(self)->setProtocolName(reinterpret_cast<daq::IString*>(protocolName));
}

ErrCode ServerCapabilityConfig_setProtocolType(ServerCapabilityConfig* self, ProtocolType type)
{
    return reinterpret_cast<daq::IServerCapabilityConfig*>(self)->setProtocolType(static_cast<daq::ProtocolType>(type));
}

ErrCode ServerCapabilityConfig_setPrefix(ServerCapabilityConfig* self, String* prefix)
{
    return reinterpret_cast<daq::IServerCapabilityConfig*>(self)->setPrefix(reinterpret_cast<daq::IString*>(prefix));
}

ErrCode ServerCapabilityConfig_setConnectionType(ServerCapabilityConfig* self, String* type)
{
    return reinterpret_cast<daq::IServerCapabilityConfig*>(self)->setConnectionType(reinterpret_cast<daq::IString*>(type));
}

ErrCode ServerCapabilityConfig_setCoreEventsEnabled(ServerCapabilityConfig* self, Bool enabled)
{
    return reinterpret_cast<daq::IServerCapabilityConfig*>(self)->setCoreEventsEnabled(enabled);
}

ErrCode ServerCapabilityConfig_addAddress(ServerCapabilityConfig* self, String* address)
{
    return reinterpret_cast<daq::IServerCapabilityConfig*>(self)->addAddress(reinterpret_cast<daq::IString*>(address));
}

ErrCode ServerCapabilityConfig_setPort(ServerCapabilityConfig* self, Integer* port)
{
    return reinterpret_cast<daq::IServerCapabilityConfig*>(self)->setPort(reinterpret_cast<daq::IInteger*>(port));
}

ErrCode ServerCapabilityConfig_addAddressInfo(ServerCapabilityConfig* self, AddressInfo* addressInfo)
{
    return reinterpret_cast<daq::IServerCapabilityConfig*>(self)->addAddressInfo(reinterpret_cast<daq::IAddressInfo*>(addressInfo));
}

ErrCode ServerCapabilityConfig_setProtocolVersion(ServerCapabilityConfig* self, String* version)
{
    return reinterpret_cast<daq::IServerCapabilityConfig*>(self)->setProtocolVersion(reinterpret_cast<daq::IString*>(version));
}

ErrCode ServerCapabilityConfig_createServerCapability(ServerCapabilityConfig** obj, String* protocolId, String* protocolName, ProtocolType protocolType)
{
    daq::IServerCapabilityConfig* ptr = nullptr;
    ErrCode err = daq::createServerCapability(&ptr, reinterpret_cast<daq::IString*>(protocolId), reinterpret_cast<daq::IString*>(protocolName), static_cast<daq::ProtocolType>(protocolType));
    *obj = reinterpret_cast<ServerCapabilityConfig*>(ptr);
    return err;
}
