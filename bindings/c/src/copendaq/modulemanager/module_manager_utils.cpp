//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.7.0) on 15.06.2025 20:21:00.
// </auto-generated>
//------------------------------------------------------------------------------

#include <copendaq/modulemanager/module_manager_utils.h>

#include <opendaq/opendaq.h>

#include <copendaq_private.h>

const daqIntfID DAQ_MODULE_MANAGER_UTILS_INTF_ID = { daq::IModuleManagerUtils::Id.Data1, daq::IModuleManagerUtils::Id.Data2, daq::IModuleManagerUtils::Id.Data3, daq::IModuleManagerUtils::Id.Data4_UInt64 };

daqErrCode daqModuleManagerUtils_getAvailableDevices(daqModuleManagerUtils* self, daqList** availableDevices)
{
    return reinterpret_cast<daq::IModuleManagerUtils*>(self)->getAvailableDevices(reinterpret_cast<daq::IList**>(availableDevices));
}

daqErrCode daqModuleManagerUtils_getAvailableDeviceTypes(daqModuleManagerUtils* self, daqDict** deviceTypes)
{
    return reinterpret_cast<daq::IModuleManagerUtils*>(self)->getAvailableDeviceTypes(reinterpret_cast<daq::IDict**>(deviceTypes));
}

daqErrCode daqModuleManagerUtils_createDevice(daqModuleManagerUtils* self, daqDevice** device, daqString* connectionString, daqComponent* parent, daqPropertyObject* config)
{
    return reinterpret_cast<daq::IModuleManagerUtils*>(self)->createDevice(reinterpret_cast<daq::IDevice**>(device), reinterpret_cast<daq::IString*>(connectionString), reinterpret_cast<daq::IComponent*>(parent), reinterpret_cast<daq::IPropertyObject*>(config));
}

daqErrCode daqModuleManagerUtils_getAvailableFunctionBlockTypes(daqModuleManagerUtils* self, daqDict** functionBlockTypes)
{
    return reinterpret_cast<daq::IModuleManagerUtils*>(self)->getAvailableFunctionBlockTypes(reinterpret_cast<daq::IDict**>(functionBlockTypes));
}

daqErrCode daqModuleManagerUtils_createFunctionBlock(daqModuleManagerUtils* self, daqFunctionBlock** functionBlock, daqString* id, daqComponent* parent, daqPropertyObject* config, daqString* localId)
{
    return reinterpret_cast<daq::IModuleManagerUtils*>(self)->createFunctionBlock(reinterpret_cast<daq::IFunctionBlock**>(functionBlock), reinterpret_cast<daq::IString*>(id), reinterpret_cast<daq::IComponent*>(parent), reinterpret_cast<daq::IPropertyObject*>(config), reinterpret_cast<daq::IString*>(localId));
}

daqErrCode daqModuleManagerUtils_createStreaming(daqModuleManagerUtils* self, daqStreaming** streaming, daqString* connectionString, daqPropertyObject* config)
{
    return reinterpret_cast<daq::IModuleManagerUtils*>(self)->createStreaming(reinterpret_cast<daq::IStreaming**>(streaming), reinterpret_cast<daq::IString*>(connectionString), reinterpret_cast<daq::IPropertyObject*>(config));
}

daqErrCode daqModuleManagerUtils_getAvailableStreamingTypes(daqModuleManagerUtils* self, daqDict** streamingTypes)
{
    return reinterpret_cast<daq::IModuleManagerUtils*>(self)->getAvailableStreamingTypes(reinterpret_cast<daq::IDict**>(streamingTypes));
}

daqErrCode daqModuleManagerUtils_createDefaultAddDeviceConfig(daqModuleManagerUtils* self, daqPropertyObject** defaultConfig)
{
    return reinterpret_cast<daq::IModuleManagerUtils*>(self)->createDefaultAddDeviceConfig(reinterpret_cast<daq::IPropertyObject**>(defaultConfig));
}

daqErrCode daqModuleManagerUtils_createServer(daqModuleManagerUtils* self, daqServer** server, daqString* serverTypeId, daqDevice* rootDevice, daqPropertyObject* serverConfig)
{
    return reinterpret_cast<daq::IModuleManagerUtils*>(self)->createServer(reinterpret_cast<daq::IServer**>(server), reinterpret_cast<daq::IString*>(serverTypeId), reinterpret_cast<daq::IDevice*>(rootDevice), reinterpret_cast<daq::IPropertyObject*>(serverConfig));
}

daqErrCode daqModuleManagerUtils_changeIpConfig(daqModuleManagerUtils* self, daqString* iface, daqString* manufacturer, daqString* serialNumber, daqPropertyObject* config)
{
    return reinterpret_cast<daq::IModuleManagerUtils*>(self)->changeIpConfig(reinterpret_cast<daq::IString*>(iface), reinterpret_cast<daq::IString*>(manufacturer), reinterpret_cast<daq::IString*>(serialNumber), reinterpret_cast<daq::IPropertyObject*>(config));
}

daqErrCode daqModuleManagerUtils_requestIpConfig(daqModuleManagerUtils* self, daqString* iface, daqString* manufacturer, daqString* serialNumber, daqPropertyObject** config)
{
    return reinterpret_cast<daq::IModuleManagerUtils*>(self)->requestIpConfig(reinterpret_cast<daq::IString*>(iface), reinterpret_cast<daq::IString*>(manufacturer), reinterpret_cast<daq::IString*>(serialNumber), reinterpret_cast<daq::IPropertyObject**>(config));
}

daqErrCode daqModuleManagerUtils_completeDeviceCapabilities(daqModuleManagerUtils* self, daqDevice* device)
{
    return reinterpret_cast<daq::IModuleManagerUtils*>(self)->completeDeviceCapabilities(reinterpret_cast<daq::IDevice*>(device));
}

daqErrCode daqModuleManagerUtils_createDevices(daqModuleManagerUtils* self, daqDict** devices, daqDict* connectionArgs, daqComponent* parent, daqDict* errCodes, daqDict* errorInfos)
{
    return reinterpret_cast<daq::IModuleManagerUtils*>(self)->createDevices(reinterpret_cast<daq::IDict**>(devices), reinterpret_cast<daq::IDict*>(connectionArgs), reinterpret_cast<daq::IComponent*>(parent), reinterpret_cast<daq::IDict*>(errCodes), reinterpret_cast<daq::IDict*>(errorInfos));
}
