//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.5.0) on 14.04.2025 21:37:34.
// </auto-generated>
//------------------------------------------------------------------------------

#include "copendaq/opendaq/instance_builder.h"

#include <opendaq/opendaq.h>

#include "copendaq_private.h"

const IntfID INSTANCE_BUILDER_INTF_ID = { daq::IInstanceBuilder::Id.Data1, daq::IInstanceBuilder::Id.Data2, daq::IInstanceBuilder::Id.Data3, daq::IInstanceBuilder::Id.Data4_UInt64 };

ErrCode InstanceBuilder_build(InstanceBuilder* self, Instance** instance)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->build(reinterpret_cast<daq::IInstance**>(instance));
}

ErrCode InstanceBuilder_addConfigProvider(InstanceBuilder* self, ConfigProvider* configProvider)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->addConfigProvider(reinterpret_cast<daq::IConfigProvider*>(configProvider));
}

ErrCode InstanceBuilder_setContext(InstanceBuilder* self, Context* context)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->setContext(reinterpret_cast<daq::IContext*>(context));
}

ErrCode InstanceBuilder_getContext(InstanceBuilder* self, Context** context)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->getContext(reinterpret_cast<daq::IContext**>(context));
}

ErrCode InstanceBuilder_setLogger(InstanceBuilder* self, Logger* logger)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->setLogger(reinterpret_cast<daq::ILogger*>(logger));
}

ErrCode InstanceBuilder_getLogger(InstanceBuilder* self, Logger** logger)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->getLogger(reinterpret_cast<daq::ILogger**>(logger));
}

ErrCode InstanceBuilder_setGlobalLogLevel(InstanceBuilder* self, LogLevel logLevel)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->setGlobalLogLevel(static_cast<daq::LogLevel>(logLevel));
}

ErrCode InstanceBuilder_getGlobalLogLevel(InstanceBuilder* self, LogLevel* logLevel)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->getGlobalLogLevel(reinterpret_cast<daq::LogLevel*>(logLevel));
}

ErrCode InstanceBuilder_setComponentLogLevel(InstanceBuilder* self, String* component, LogLevel logLevel)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->setComponentLogLevel(reinterpret_cast<daq::IString*>(component), static_cast<daq::LogLevel>(logLevel));
}

ErrCode InstanceBuilder_getComponentsLogLevel(InstanceBuilder* self, Dict** components)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->getComponentsLogLevel(reinterpret_cast<daq::IDict**>(components));
}

ErrCode InstanceBuilder_addLoggerSink(InstanceBuilder* self, LoggerSink* sink)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->addLoggerSink(reinterpret_cast<daq::ILoggerSink*>(sink));
}

ErrCode InstanceBuilder_setSinkLogLevel(InstanceBuilder* self, LoggerSink* sink, LogLevel logLevel)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->setSinkLogLevel(reinterpret_cast<daq::ILoggerSink*>(sink), static_cast<daq::LogLevel>(logLevel));
}

ErrCode InstanceBuilder_getLoggerSinks(InstanceBuilder* self, List** sinks)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->getLoggerSinks(reinterpret_cast<daq::IList**>(sinks));
}

ErrCode InstanceBuilder_setModulePath(InstanceBuilder* self, String* path)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->setModulePath(reinterpret_cast<daq::IString*>(path));
}

ErrCode InstanceBuilder_getModulePath(InstanceBuilder* self, String** path)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->getModulePath(reinterpret_cast<daq::IString**>(path));
}

ErrCode InstanceBuilder_addModulePath(InstanceBuilder* self, String* path)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->addModulePath(reinterpret_cast<daq::IString*>(path));
}

ErrCode InstanceBuilder_getModulePathsList(InstanceBuilder* self, List** paths)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->getModulePathsList(reinterpret_cast<daq::IList**>(paths));
}

ErrCode InstanceBuilder_setModuleManager(InstanceBuilder* self, ModuleManager* moduleManager)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->setModuleManager(reinterpret_cast<daq::IModuleManager*>(moduleManager));
}

ErrCode InstanceBuilder_getModuleManager(InstanceBuilder* self, ModuleManager** moduleManager)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->getModuleManager(reinterpret_cast<daq::IModuleManager**>(moduleManager));
}

ErrCode InstanceBuilder_setAuthenticationProvider(InstanceBuilder* self, AuthenticationProvider* authenticationProvider)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->setAuthenticationProvider(reinterpret_cast<daq::IAuthenticationProvider*>(authenticationProvider));
}

ErrCode InstanceBuilder_getAuthenticationProvider(InstanceBuilder* self, AuthenticationProvider** authenticationProvider)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->getAuthenticationProvider(reinterpret_cast<daq::IAuthenticationProvider**>(authenticationProvider));
}

ErrCode InstanceBuilder_setSchedulerWorkerNum(InstanceBuilder* self, SizeT numWorkers)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->setSchedulerWorkerNum(numWorkers);
}

ErrCode InstanceBuilder_getSchedulerWorkerNum(InstanceBuilder* self, SizeT* numWorkers)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->getSchedulerWorkerNum(numWorkers);
}

ErrCode InstanceBuilder_setScheduler(InstanceBuilder* self, Scheduler* scheduler)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->setScheduler(reinterpret_cast<daq::IScheduler*>(scheduler));
}

ErrCode InstanceBuilder_getScheduler(InstanceBuilder* self, Scheduler** scheduler)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->getScheduler(reinterpret_cast<daq::IScheduler**>(scheduler));
}

ErrCode InstanceBuilder_setDefaultRootDeviceLocalId(InstanceBuilder* self, String* localId)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->setDefaultRootDeviceLocalId(reinterpret_cast<daq::IString*>(localId));
}

ErrCode InstanceBuilder_getDefaultRootDeviceLocalId(InstanceBuilder* self, String** localId)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->getDefaultRootDeviceLocalId(reinterpret_cast<daq::IString**>(localId));
}

ErrCode InstanceBuilder_setRootDevice(InstanceBuilder* self, String* connectionString, PropertyObject* config)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->setRootDevice(reinterpret_cast<daq::IString*>(connectionString), reinterpret_cast<daq::IPropertyObject*>(config));
}

ErrCode InstanceBuilder_getRootDevice(InstanceBuilder* self, String** connectionString)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->getRootDevice(reinterpret_cast<daq::IString**>(connectionString));
}

ErrCode InstanceBuilder_getRootDeviceConfig(InstanceBuilder* self, PropertyObject** config)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->getRootDeviceConfig(reinterpret_cast<daq::IPropertyObject**>(config));
}

ErrCode InstanceBuilder_setDefaultRootDeviceInfo(InstanceBuilder* self, DeviceInfo* deviceInfo)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->setDefaultRootDeviceInfo(reinterpret_cast<daq::IDeviceInfo*>(deviceInfo));
}

ErrCode InstanceBuilder_getDefaultRootDeviceInfo(InstanceBuilder* self, DeviceInfo** deviceInfo)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->getDefaultRootDeviceInfo(reinterpret_cast<daq::IDeviceInfo**>(deviceInfo));
}

ErrCode InstanceBuilder_getOptions(InstanceBuilder* self, Dict** options)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->getOptions(reinterpret_cast<daq::IDict**>(options));
}

ErrCode InstanceBuilder_enableStandardProviders(InstanceBuilder* self, Bool flag)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->enableStandardProviders(flag);
}

ErrCode InstanceBuilder_getDiscoveryServers(InstanceBuilder* self, List** serverNames)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->getDiscoveryServers(reinterpret_cast<daq::IList**>(serverNames));
}

ErrCode InstanceBuilder_addDiscoveryServer(InstanceBuilder* self, String* serverName)
{
    return reinterpret_cast<daq::IInstanceBuilder*>(self)->addDiscoveryServer(reinterpret_cast<daq::IString*>(serverName));
}

ErrCode InstanceBuilder_createInstanceBuilder(InstanceBuilder** obj)
{
    daq::IInstanceBuilder* ptr = nullptr;
    ErrCode err = daq::createInstanceBuilder(&ptr);
    *obj = reinterpret_cast<InstanceBuilder*>(ptr);
    return err;
}
