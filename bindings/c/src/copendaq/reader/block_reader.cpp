//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.7.0) on 03.06.2025 22:07:22.
// </auto-generated>
//------------------------------------------------------------------------------

#include <copendaq/reader/block_reader.h>

#include <opendaq/opendaq.h>

#include <copendaq_private.h>

const daqIntfID DAQ_BLOCK_READER_INTF_ID = { daq::IBlockReader::Id.Data1, daq::IBlockReader::Id.Data2, daq::IBlockReader::Id.Data3, daq::IBlockReader::Id.Data4_UInt64 };

daqErrCode daqBlockReader_read(daqBlockReader* self, void* blocks, daqSizeT* count, daqSizeT timeoutMs, daqBlockReaderStatus** status)
{
    return reinterpret_cast<daq::IBlockReader*>(self)->read(blocks, count, timeoutMs, reinterpret_cast<daq::IBlockReaderStatus**>(status));
}

daqErrCode daqBlockReader_readWithDomain(daqBlockReader* self, void* dataBlocks, void* domainBlocks, daqSizeT* count, daqSizeT timeoutMs, daqBlockReaderStatus** status)
{
    return reinterpret_cast<daq::IBlockReader*>(self)->readWithDomain(dataBlocks, domainBlocks, count, timeoutMs, reinterpret_cast<daq::IBlockReaderStatus**>(status));
}

daqErrCode daqBlockReader_getBlockSize(daqBlockReader* self, daqSizeT* size)
{
    return reinterpret_cast<daq::IBlockReader*>(self)->getBlockSize(size);
}

daqErrCode daqBlockReader_getOverlap(daqBlockReader* self, daqSizeT* overlap)
{
    return reinterpret_cast<daq::IBlockReader*>(self)->getOverlap(overlap);
}

daqErrCode daqBlockReader_createBlockReader(daqBlockReader** obj, daqSignal* signal, daqSizeT blockSize, daqSampleType valueReadType, daqSampleType domainReadType, daqReadMode mode)
{
    daq::IBlockReader* ptr = nullptr;
    daqErrCode err = daq::createBlockReader(&ptr, reinterpret_cast<daq::ISignal*>(signal), blockSize, static_cast<daq::SampleType>(valueReadType), static_cast<daq::SampleType>(domainReadType), static_cast<daq::ReadMode>(mode));
    *obj = reinterpret_cast<daqBlockReader*>(ptr);
    return err;
}

daqErrCode daqBlockReader_createBlockReaderFromExisting(daqBlockReader** obj, daqBlockReader* invalidatedReader, daqSampleType valueReadType, daqSampleType domainReadType, daqSizeT blockSize)
{
    daq::IBlockReader* ptr = nullptr;
    daqErrCode err = daq::createBlockReaderFromExisting(&ptr, reinterpret_cast<daq::IBlockReader*>(invalidatedReader), static_cast<daq::SampleType>(valueReadType), static_cast<daq::SampleType>(domainReadType), blockSize);
    *obj = reinterpret_cast<daqBlockReader*>(ptr);
    return err;
}

daqErrCode daqBlockReader_createBlockReaderFromPort(daqBlockReader** obj, daqInputPortConfig* port, daqSizeT blockSize, daqSampleType valueReadType, daqSampleType domainReadType, daqReadMode mode)
{
    daq::IBlockReader* ptr = nullptr;
    daqErrCode err = daq::createBlockReaderFromPort(&ptr, reinterpret_cast<daq::IInputPortConfig*>(port), blockSize, static_cast<daq::SampleType>(valueReadType), static_cast<daq::SampleType>(domainReadType), static_cast<daq::ReadMode>(mode));
    *obj = reinterpret_cast<daqBlockReader*>(ptr);
    return err;
}
