//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.7.0) on 03.06.2025 22:07:23.
// </auto-generated>
//------------------------------------------------------------------------------

#include <copendaq/reader/block_reader_builder.h>

#include <opendaq/opendaq.h>

#include <copendaq_private.h>

const daqIntfID DAQ_BLOCK_READER_BUILDER_INTF_ID = { daq::IBlockReaderBuilder::Id.Data1, daq::IBlockReaderBuilder::Id.Data2, daq::IBlockReaderBuilder::Id.Data3, daq::IBlockReaderBuilder::Id.Data4_UInt64 };

daqErrCode daqBlockReaderBuilder_build(daqBlockReaderBuilder* self, daqBlockReader** blockReader)
{
    return reinterpret_cast<daq::IBlockReaderBuilder*>(self)->build(reinterpret_cast<daq::IBlockReader**>(blockReader));
}

daqErrCode daqBlockReaderBuilder_setOldBlockReader(daqBlockReaderBuilder* self, daqBlockReader* blockReader)
{
    return reinterpret_cast<daq::IBlockReaderBuilder*>(self)->setOldBlockReader(reinterpret_cast<daq::IBlockReader*>(blockReader));
}

daqErrCode daqBlockReaderBuilder_getOldBlockReader(daqBlockReaderBuilder* self, daqBlockReader** blockReader)
{
    return reinterpret_cast<daq::IBlockReaderBuilder*>(self)->getOldBlockReader(reinterpret_cast<daq::IBlockReader**>(blockReader));
}

daqErrCode daqBlockReaderBuilder_setSignal(daqBlockReaderBuilder* self, daqSignal* signal)
{
    return reinterpret_cast<daq::IBlockReaderBuilder*>(self)->setSignal(reinterpret_cast<daq::ISignal*>(signal));
}

daqErrCode daqBlockReaderBuilder_getSignal(daqBlockReaderBuilder* self, daqSignal** signal)
{
    return reinterpret_cast<daq::IBlockReaderBuilder*>(self)->getSignal(reinterpret_cast<daq::ISignal**>(signal));
}

daqErrCode daqBlockReaderBuilder_setInputPort(daqBlockReaderBuilder* self, daqInputPort* port)
{
    return reinterpret_cast<daq::IBlockReaderBuilder*>(self)->setInputPort(reinterpret_cast<daq::IInputPort*>(port));
}

daqErrCode daqBlockReaderBuilder_getInputPort(daqBlockReaderBuilder* self, daqInputPort** port)
{
    return reinterpret_cast<daq::IBlockReaderBuilder*>(self)->getInputPort(reinterpret_cast<daq::IInputPort**>(port));
}

daqErrCode daqBlockReaderBuilder_setValueReadType(daqBlockReaderBuilder* self, daqSampleType type)
{
    return reinterpret_cast<daq::IBlockReaderBuilder*>(self)->setValueReadType(static_cast<daq::SampleType>(type));
}

daqErrCode daqBlockReaderBuilder_getValueReadType(daqBlockReaderBuilder* self, daqSampleType* type)
{
    return reinterpret_cast<daq::IBlockReaderBuilder*>(self)->getValueReadType(reinterpret_cast<daq::SampleType*>(type));
}

daqErrCode daqBlockReaderBuilder_setDomainReadType(daqBlockReaderBuilder* self, daqSampleType type)
{
    return reinterpret_cast<daq::IBlockReaderBuilder*>(self)->setDomainReadType(static_cast<daq::SampleType>(type));
}

daqErrCode daqBlockReaderBuilder_getDomainReadType(daqBlockReaderBuilder* self, daqSampleType* type)
{
    return reinterpret_cast<daq::IBlockReaderBuilder*>(self)->getDomainReadType(reinterpret_cast<daq::SampleType*>(type));
}

daqErrCode daqBlockReaderBuilder_setReadMode(daqBlockReaderBuilder* self, daqReadMode mode)
{
    return reinterpret_cast<daq::IBlockReaderBuilder*>(self)->setReadMode(static_cast<daq::ReadMode>(mode));
}

daqErrCode daqBlockReaderBuilder_getReadMode(daqBlockReaderBuilder* self, daqReadMode* mode)
{
    return reinterpret_cast<daq::IBlockReaderBuilder*>(self)->getReadMode(reinterpret_cast<daq::ReadMode*>(mode));
}

daqErrCode daqBlockReaderBuilder_setBlockSize(daqBlockReaderBuilder* self, daqSizeT size)
{
    return reinterpret_cast<daq::IBlockReaderBuilder*>(self)->setBlockSize(size);
}

daqErrCode daqBlockReaderBuilder_getBlockSize(daqBlockReaderBuilder* self, daqSizeT* size)
{
    return reinterpret_cast<daq::IBlockReaderBuilder*>(self)->getBlockSize(size);
}

daqErrCode daqBlockReaderBuilder_setOverlap(daqBlockReaderBuilder* self, daqSizeT overlap)
{
    return reinterpret_cast<daq::IBlockReaderBuilder*>(self)->setOverlap(overlap);
}

daqErrCode daqBlockReaderBuilder_getOverlap(daqBlockReaderBuilder* self, daqSizeT* overlap)
{
    return reinterpret_cast<daq::IBlockReaderBuilder*>(self)->getOverlap(overlap);
}

daqErrCode daqBlockReaderBuilder_setSkipEvents(daqBlockReaderBuilder* self, daqBool skipEvents)
{
    return reinterpret_cast<daq::IBlockReaderBuilder*>(self)->setSkipEvents(skipEvents);
}

daqErrCode daqBlockReaderBuilder_getSkipEvents(daqBlockReaderBuilder* self, daqBool* skipEvents)
{
    return reinterpret_cast<daq::IBlockReaderBuilder*>(self)->getSkipEvents(skipEvents);
}

daqErrCode daqBlockReaderBuilder_createBlockReaderBuilder(daqBlockReaderBuilder** obj)
{
    daq::IBlockReaderBuilder* ptr = nullptr;
    daqErrCode err = daq::createBlockReaderBuilder(&ptr);
    *obj = reinterpret_cast<daqBlockReaderBuilder*>(ptr);
    return err;
}
