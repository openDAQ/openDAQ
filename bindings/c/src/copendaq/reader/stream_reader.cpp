//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.7.0) on 03.06.2025 22:07:29.
// </auto-generated>
//------------------------------------------------------------------------------

#include <copendaq/reader/stream_reader.h>

#include <opendaq/opendaq.h>

#include <copendaq_private.h>

const daqIntfID DAQ_STREAM_READER_INTF_ID = { daq::IStreamReader::Id.Data1, daq::IStreamReader::Id.Data2, daq::IStreamReader::Id.Data3, daq::IStreamReader::Id.Data4_UInt64 };

daqErrCode daqStreamReader_read(daqStreamReader* self, void* samples, daqSizeT* count, daqSizeT timeoutMs, daqReaderStatus** status)
{
    return reinterpret_cast<daq::IStreamReader*>(self)->read(samples, count, timeoutMs, reinterpret_cast<daq::IReaderStatus**>(status));
}

daqErrCode daqStreamReader_readWithDomain(daqStreamReader* self, void* samples, void* domain, daqSizeT* count, daqSizeT timeoutMs, daqReaderStatus** status)
{
    return reinterpret_cast<daq::IStreamReader*>(self)->readWithDomain(samples, domain, count, timeoutMs, reinterpret_cast<daq::IReaderStatus**>(status));
}

daqErrCode daqStreamReader_skipSamples(daqStreamReader* self, daqSizeT* count, daqReaderStatus** status)
{
    return reinterpret_cast<daq::IStreamReader*>(self)->skipSamples(count, reinterpret_cast<daq::IReaderStatus**>(status));
}

daqErrCode daqStreamReader_createStreamReader(daqStreamReader** obj, daqSignal* signal, daqSampleType valueReadType, daqSampleType domainReadType, daqReadMode mode, daqReadTimeoutType timeoutType)
{
    daq::IStreamReader* ptr = nullptr;
    daqErrCode err = daq::createStreamReader(&ptr, reinterpret_cast<daq::ISignal*>(signal), static_cast<daq::SampleType>(valueReadType), static_cast<daq::SampleType>(domainReadType), static_cast<daq::ReadMode>(mode), static_cast<daq::ReadTimeoutType>(timeoutType));
    *obj = reinterpret_cast<daqStreamReader*>(ptr);
    return err;
}

daqErrCode daqStreamReader_createStreamReaderFromPort(daqStreamReader** obj, daqInputPortConfig* port, daqSampleType valueReadType, daqSampleType domainReadType, daqReadMode readMode, daqReadTimeoutType timeoutType)
{
    daq::IStreamReader* ptr = nullptr;
    daqErrCode err = daq::createStreamReaderFromPort(&ptr, reinterpret_cast<daq::IInputPortConfig*>(port), static_cast<daq::SampleType>(valueReadType), static_cast<daq::SampleType>(domainReadType), static_cast<daq::ReadMode>(readMode), static_cast<daq::ReadTimeoutType>(timeoutType));
    *obj = reinterpret_cast<daqStreamReader*>(ptr);
    return err;
}

daqErrCode daqStreamReader_createStreamReaderFromExisting(daqStreamReader** obj, daqStreamReader* invalidatedReader, daqSampleType valueReadType, daqSampleType domainReadType)
{
    daq::IStreamReader* ptr = nullptr;
    daqErrCode err = daq::createStreamReaderFromExisting(&ptr, reinterpret_cast<daq::IStreamReader*>(invalidatedReader), static_cast<daq::SampleType>(valueReadType), static_cast<daq::SampleType>(domainReadType));
    *obj = reinterpret_cast<daqStreamReader*>(ptr);
    return err;
}
