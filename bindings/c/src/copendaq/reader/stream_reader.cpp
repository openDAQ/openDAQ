//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.5.0) on 14.04.2025 21:37:41.
// </auto-generated>
//------------------------------------------------------------------------------

#include "copendaq/reader/stream_reader.h"

#include <opendaq/opendaq.h>

#include "copendaq_private.h"

const IntfID STREAM_READER_INTF_ID = { daq::IStreamReader::Id.Data1, daq::IStreamReader::Id.Data2, daq::IStreamReader::Id.Data3, daq::IStreamReader::Id.Data4_UInt64 };

ErrCode StreamReader_read(StreamReader* self, void* samples, SizeT* count, SizeT timeoutMs, ReaderStatus** status)
{
    return reinterpret_cast<daq::IStreamReader*>(self)->read(samples, count, timeoutMs, reinterpret_cast<daq::IReaderStatus**>(status));
}

ErrCode StreamReader_readWithDomain(StreamReader* self, void* samples, void* domain, SizeT* count, SizeT timeoutMs, ReaderStatus** status)
{
    return reinterpret_cast<daq::IStreamReader*>(self)->readWithDomain(samples, domain, count, timeoutMs, reinterpret_cast<daq::IReaderStatus**>(status));
}

ErrCode StreamReader_skipSamples(StreamReader* self, SizeT* count, ReaderStatus** status)
{
    return reinterpret_cast<daq::IStreamReader*>(self)->skipSamples(count, reinterpret_cast<daq::IReaderStatus**>(status));
}

ErrCode StreamReader_createStreamReader(StreamReader** obj, Signal* signal, SampleType valueReadType, SampleType domainReadType, ReadMode mode, ReadTimeoutType timeoutType)
{
    daq::IStreamReader* ptr = nullptr;
    ErrCode err = daq::createStreamReader(&ptr, reinterpret_cast<daq::ISignal*>(signal), static_cast<daq::SampleType>(valueReadType), static_cast<daq::SampleType>(domainReadType), static_cast<daq::ReadMode>(mode), static_cast<daq::ReadTimeoutType>(timeoutType));
    *obj = reinterpret_cast<StreamReader*>(ptr);
    return err;
}

ErrCode StreamReader_createStreamReaderFromPort(StreamReader** obj, InputPortConfig* port, SampleType valueReadType, SampleType domainReadType, ReadMode readMode, ReadTimeoutType timeoutType)
{
    daq::IStreamReader* ptr = nullptr;
    ErrCode err = daq::createStreamReaderFromPort(&ptr, reinterpret_cast<daq::IInputPortConfig*>(port), static_cast<daq::SampleType>(valueReadType), static_cast<daq::SampleType>(domainReadType), static_cast<daq::ReadMode>(readMode), static_cast<daq::ReadTimeoutType>(timeoutType));
    *obj = reinterpret_cast<StreamReader*>(ptr);
    return err;
}

ErrCode StreamReader_createStreamReaderFromExisting(StreamReader** obj, StreamReader* invalidatedReader, SampleType valueReadType, SampleType domainReadType)
{
    daq::IStreamReader* ptr = nullptr;
    ErrCode err = daq::createStreamReaderFromExisting(&ptr, reinterpret_cast<daq::IStreamReader*>(invalidatedReader), static_cast<daq::SampleType>(valueReadType), static_cast<daq::SampleType>(domainReadType));
    *obj = reinterpret_cast<StreamReader*>(ptr);
    return err;
}
