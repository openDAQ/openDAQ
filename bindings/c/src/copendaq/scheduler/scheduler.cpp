//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.7.0) on 03.06.2025 22:07:33.
// </auto-generated>
//------------------------------------------------------------------------------

#include <copendaq/scheduler/scheduler.h>

#include <opendaq/opendaq.h>

#include <copendaq_private.h>

const daqIntfID DAQ_SCHEDULER_INTF_ID = { daq::IScheduler::Id.Data1, daq::IScheduler::Id.Data2, daq::IScheduler::Id.Data3, daq::IScheduler::Id.Data4_UInt64 };

daqErrCode daqScheduler_scheduleFunction(daqScheduler* self, daqFunction* function, daqAwaitable** awaitable)
{
    return reinterpret_cast<daq::IScheduler*>(self)->scheduleFunction(reinterpret_cast<daq::IFunction*>(function), reinterpret_cast<daq::IAwaitable**>(awaitable));
}

daqErrCode daqScheduler_scheduleWork(daqScheduler* self, daqWork* work)
{
    return reinterpret_cast<daq::IScheduler*>(self)->scheduleWork(reinterpret_cast<daq::IWork*>(work));
}

daqErrCode daqScheduler_scheduleGraph(daqScheduler* self, daqTaskGraph* graph, daqAwaitable** awaitable)
{
    return reinterpret_cast<daq::IScheduler*>(self)->scheduleGraph(reinterpret_cast<daq::ITaskGraph*>(graph), reinterpret_cast<daq::IAwaitable**>(awaitable));
}

daqErrCode daqScheduler_stop(daqScheduler* self)
{
    return reinterpret_cast<daq::IScheduler*>(self)->stop();
}

daqErrCode daqScheduler_waitAll(daqScheduler* self)
{
    return reinterpret_cast<daq::IScheduler*>(self)->waitAll();
}

daqErrCode daqScheduler_isMultiThreaded(daqScheduler* self, daqBool* multiThreaded)
{
    return reinterpret_cast<daq::IScheduler*>(self)->isMultiThreaded(multiThreaded);
}

daqErrCode daqScheduler_createScheduler(daqScheduler** obj, daqLogger* logger, daqSizeT numWorkers)
{
    daq::IScheduler* ptr = nullptr;
    daqErrCode err = daq::createScheduler(&ptr, reinterpret_cast<daq::ILogger*>(logger), numWorkers);
    *obj = reinterpret_cast<daqScheduler*>(ptr);
    return err;
}
