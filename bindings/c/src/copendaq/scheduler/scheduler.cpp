//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.5.0) on 14.04.2025 21:37:45.
// </auto-generated>
//------------------------------------------------------------------------------

#include "copendaq/scheduler/scheduler.h"

#include <opendaq/opendaq.h>

#include "copendaq_private.h"

const IntfID SCHEDULER_INTF_ID = { daq::IScheduler::Id.Data1, daq::IScheduler::Id.Data2, daq::IScheduler::Id.Data3, daq::IScheduler::Id.Data4_UInt64 };

ErrCode Scheduler_scheduleFunction(Scheduler* self, Function* function, Awaitable** awaitable)
{
    return reinterpret_cast<daq::IScheduler*>(self)->scheduleFunction(reinterpret_cast<daq::IFunction*>(function), reinterpret_cast<daq::IAwaitable**>(awaitable));
}

ErrCode Scheduler_scheduleWork(Scheduler* self, Work* work)
{
    return reinterpret_cast<daq::IScheduler*>(self)->scheduleWork(reinterpret_cast<daq::IWork*>(work));
}

ErrCode Scheduler_scheduleGraph(Scheduler* self, TaskGraph* graph, Awaitable** awaitable)
{
    return reinterpret_cast<daq::IScheduler*>(self)->scheduleGraph(reinterpret_cast<daq::ITaskGraph*>(graph), reinterpret_cast<daq::IAwaitable**>(awaitable));
}

ErrCode Scheduler_stop(Scheduler* self)
{
    return reinterpret_cast<daq::IScheduler*>(self)->stop();
}

ErrCode Scheduler_waitAll(Scheduler* self)
{
    return reinterpret_cast<daq::IScheduler*>(self)->waitAll();
}

ErrCode Scheduler_isMultiThreaded(Scheduler* self, Bool* multiThreaded)
{
    return reinterpret_cast<daq::IScheduler*>(self)->isMultiThreaded(multiThreaded);
}

ErrCode Scheduler_createScheduler(Scheduler** obj, Logger* logger, SizeT numWorkers)
{
    daq::IScheduler* ptr = nullptr;
    ErrCode err = daq::createScheduler(&ptr, reinterpret_cast<daq::ILogger*>(logger), numWorkers);
    *obj = reinterpret_cast<Scheduler*>(ptr);
    return err;
}
