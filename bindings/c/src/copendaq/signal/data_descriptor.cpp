//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.7.0) on 03.06.2025 22:07:39.
// </auto-generated>
//------------------------------------------------------------------------------

#include <copendaq/signal/data_descriptor.h>

#include <opendaq/opendaq.h>

#include <copendaq_private.h>

const daqIntfID DAQ_DATA_DESCRIPTOR_INTF_ID = { daq::IDataDescriptor::Id.Data1, daq::IDataDescriptor::Id.Data2, daq::IDataDescriptor::Id.Data3, daq::IDataDescriptor::Id.Data4_UInt64 };

daqErrCode daqDataDescriptor_getName(daqDataDescriptor* self, daqString** name)
{
    return reinterpret_cast<daq::IDataDescriptor*>(self)->getName(reinterpret_cast<daq::IString**>(name));
}

daqErrCode daqDataDescriptor_getDimensions(daqDataDescriptor* self, daqList** dimensions)
{
    return reinterpret_cast<daq::IDataDescriptor*>(self)->getDimensions(reinterpret_cast<daq::IList**>(dimensions));
}

daqErrCode daqDataDescriptor_getSampleType(daqDataDescriptor* self, daqSampleType* sampleType)
{
    return reinterpret_cast<daq::IDataDescriptor*>(self)->getSampleType(reinterpret_cast<daq::SampleType*>(sampleType));
}

daqErrCode daqDataDescriptor_getUnit(daqDataDescriptor* self, daqUnit** unit)
{
    return reinterpret_cast<daq::IDataDescriptor*>(self)->getUnit(reinterpret_cast<daq::IUnit**>(unit));
}

daqErrCode daqDataDescriptor_getValueRange(daqDataDescriptor* self, daqRange** range)
{
    return reinterpret_cast<daq::IDataDescriptor*>(self)->getValueRange(reinterpret_cast<daq::IRange**>(range));
}

daqErrCode daqDataDescriptor_getRule(daqDataDescriptor* self, daqDataRule** rule)
{
    return reinterpret_cast<daq::IDataDescriptor*>(self)->getRule(reinterpret_cast<daq::IDataRule**>(rule));
}

daqErrCode daqDataDescriptor_getOrigin(daqDataDescriptor* self, daqString** origin)
{
    return reinterpret_cast<daq::IDataDescriptor*>(self)->getOrigin(reinterpret_cast<daq::IString**>(origin));
}

daqErrCode daqDataDescriptor_getTickResolution(daqDataDescriptor* self, daqRatio** tickResolution)
{
    return reinterpret_cast<daq::IDataDescriptor*>(self)->getTickResolution(reinterpret_cast<daq::IRatio**>(tickResolution));
}

daqErrCode daqDataDescriptor_getPostScaling(daqDataDescriptor* self, daqScaling** scaling)
{
    return reinterpret_cast<daq::IDataDescriptor*>(self)->getPostScaling(reinterpret_cast<daq::IScaling**>(scaling));
}

daqErrCode daqDataDescriptor_getStructFields(daqDataDescriptor* self, daqList** structFields)
{
    return reinterpret_cast<daq::IDataDescriptor*>(self)->getStructFields(reinterpret_cast<daq::IList**>(structFields));
}

daqErrCode daqDataDescriptor_getMetadata(daqDataDescriptor* self, daqDict** metadata)
{
    return reinterpret_cast<daq::IDataDescriptor*>(self)->getMetadata(reinterpret_cast<daq::IDict**>(metadata));
}

daqErrCode daqDataDescriptor_getSampleSize(daqDataDescriptor* self, daqSizeT* sampleSize)
{
    return reinterpret_cast<daq::IDataDescriptor*>(self)->getSampleSize(sampleSize);
}

daqErrCode daqDataDescriptor_getRawSampleSize(daqDataDescriptor* self, daqSizeT* rawSampleSize)
{
    return reinterpret_cast<daq::IDataDescriptor*>(self)->getRawSampleSize(rawSampleSize);
}

daqErrCode daqDataDescriptor_getReferenceDomainInfo(daqDataDescriptor* self, daqReferenceDomainInfo** referenceDomainInfo)
{
    return reinterpret_cast<daq::IDataDescriptor*>(self)->getReferenceDomainInfo(reinterpret_cast<daq::IReferenceDomainInfo**>(referenceDomainInfo));
}

daqErrCode daqDataDescriptor_createDataDescriptorFromBuilder(daqDataDescriptor** obj, daqDataDescriptorBuilder* builder)
{
    daq::IDataDescriptor* ptr = nullptr;
    daqErrCode err = daq::createDataDescriptorFromBuilder(&ptr, reinterpret_cast<daq::IDataDescriptorBuilder*>(builder));
    *obj = reinterpret_cast<daqDataDescriptor*>(ptr);
    return err;
}
