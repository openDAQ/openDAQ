//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.7.0) on 03.06.2025 22:07:39.
// </auto-generated>
//------------------------------------------------------------------------------

#include <copendaq/signal/data_descriptor_builder.h>

#include <opendaq/opendaq.h>

#include <copendaq_private.h>

const daqIntfID DAQ_DATA_DESCRIPTOR_BUILDER_INTF_ID = { daq::IDataDescriptorBuilder::Id.Data1, daq::IDataDescriptorBuilder::Id.Data2, daq::IDataDescriptorBuilder::Id.Data3, daq::IDataDescriptorBuilder::Id.Data4_UInt64 };

daqErrCode daqDataDescriptorBuilder_build(daqDataDescriptorBuilder* self, daqDataDescriptor** dataDescriptor)
{
    return reinterpret_cast<daq::IDataDescriptorBuilder*>(self)->build(reinterpret_cast<daq::IDataDescriptor**>(dataDescriptor));
}

daqErrCode daqDataDescriptorBuilder_setName(daqDataDescriptorBuilder* self, daqString* name)
{
    return reinterpret_cast<daq::IDataDescriptorBuilder*>(self)->setName(reinterpret_cast<daq::IString*>(name));
}

daqErrCode daqDataDescriptorBuilder_getName(daqDataDescriptorBuilder* self, daqString** name)
{
    return reinterpret_cast<daq::IDataDescriptorBuilder*>(self)->getName(reinterpret_cast<daq::IString**>(name));
}

daqErrCode daqDataDescriptorBuilder_setDimensions(daqDataDescriptorBuilder* self, daqList* dimensions)
{
    return reinterpret_cast<daq::IDataDescriptorBuilder*>(self)->setDimensions(reinterpret_cast<daq::IList*>(dimensions));
}

daqErrCode daqDataDescriptorBuilder_getDimensions(daqDataDescriptorBuilder* self, daqList** dimensions)
{
    return reinterpret_cast<daq::IDataDescriptorBuilder*>(self)->getDimensions(reinterpret_cast<daq::IList**>(dimensions));
}

daqErrCode daqDataDescriptorBuilder_setSampleType(daqDataDescriptorBuilder* self, daqSampleType sampleType)
{
    return reinterpret_cast<daq::IDataDescriptorBuilder*>(self)->setSampleType(static_cast<daq::SampleType>(sampleType));
}

daqErrCode daqDataDescriptorBuilder_getSampleType(daqDataDescriptorBuilder* self, daqSampleType* sampleType)
{
    return reinterpret_cast<daq::IDataDescriptorBuilder*>(self)->getSampleType(reinterpret_cast<daq::SampleType*>(sampleType));
}

daqErrCode daqDataDescriptorBuilder_setUnit(daqDataDescriptorBuilder* self, daqUnit* unit)
{
    return reinterpret_cast<daq::IDataDescriptorBuilder*>(self)->setUnit(reinterpret_cast<daq::IUnit*>(unit));
}

daqErrCode daqDataDescriptorBuilder_getUnit(daqDataDescriptorBuilder* self, daqUnit** unit)
{
    return reinterpret_cast<daq::IDataDescriptorBuilder*>(self)->getUnit(reinterpret_cast<daq::IUnit**>(unit));
}

daqErrCode daqDataDescriptorBuilder_setValueRange(daqDataDescriptorBuilder* self, daqRange* range)
{
    return reinterpret_cast<daq::IDataDescriptorBuilder*>(self)->setValueRange(reinterpret_cast<daq::IRange*>(range));
}

daqErrCode daqDataDescriptorBuilder_getValueRange(daqDataDescriptorBuilder* self, daqRange** range)
{
    return reinterpret_cast<daq::IDataDescriptorBuilder*>(self)->getValueRange(reinterpret_cast<daq::IRange**>(range));
}

daqErrCode daqDataDescriptorBuilder_setRule(daqDataDescriptorBuilder* self, daqDataRule* rule)
{
    return reinterpret_cast<daq::IDataDescriptorBuilder*>(self)->setRule(reinterpret_cast<daq::IDataRule*>(rule));
}

daqErrCode daqDataDescriptorBuilder_getRule(daqDataDescriptorBuilder* self, daqDataRule** rule)
{
    return reinterpret_cast<daq::IDataDescriptorBuilder*>(self)->getRule(reinterpret_cast<daq::IDataRule**>(rule));
}

daqErrCode daqDataDescriptorBuilder_setOrigin(daqDataDescriptorBuilder* self, daqString* origin)
{
    return reinterpret_cast<daq::IDataDescriptorBuilder*>(self)->setOrigin(reinterpret_cast<daq::IString*>(origin));
}

daqErrCode daqDataDescriptorBuilder_getOrigin(daqDataDescriptorBuilder* self, daqString** origin)
{
    return reinterpret_cast<daq::IDataDescriptorBuilder*>(self)->getOrigin(reinterpret_cast<daq::IString**>(origin));
}

daqErrCode daqDataDescriptorBuilder_setTickResolution(daqDataDescriptorBuilder* self, daqRatio* tickResolution)
{
    return reinterpret_cast<daq::IDataDescriptorBuilder*>(self)->setTickResolution(reinterpret_cast<daq::IRatio*>(tickResolution));
}

daqErrCode daqDataDescriptorBuilder_getTickResolution(daqDataDescriptorBuilder* self, daqRatio** tickResolution)
{
    return reinterpret_cast<daq::IDataDescriptorBuilder*>(self)->getTickResolution(reinterpret_cast<daq::IRatio**>(tickResolution));
}

daqErrCode daqDataDescriptorBuilder_setPostScaling(daqDataDescriptorBuilder* self, daqScaling* scaling)
{
    return reinterpret_cast<daq::IDataDescriptorBuilder*>(self)->setPostScaling(reinterpret_cast<daq::IScaling*>(scaling));
}

daqErrCode daqDataDescriptorBuilder_getPostScaling(daqDataDescriptorBuilder* self, daqScaling** scaling)
{
    return reinterpret_cast<daq::IDataDescriptorBuilder*>(self)->getPostScaling(reinterpret_cast<daq::IScaling**>(scaling));
}

daqErrCode daqDataDescriptorBuilder_setStructFields(daqDataDescriptorBuilder* self, daqList* structFields)
{
    return reinterpret_cast<daq::IDataDescriptorBuilder*>(self)->setStructFields(reinterpret_cast<daq::IList*>(structFields));
}

daqErrCode daqDataDescriptorBuilder_getStructFields(daqDataDescriptorBuilder* self, daqList** structFields)
{
    return reinterpret_cast<daq::IDataDescriptorBuilder*>(self)->getStructFields(reinterpret_cast<daq::IList**>(structFields));
}

daqErrCode daqDataDescriptorBuilder_setMetadata(daqDataDescriptorBuilder* self, daqDict* metadata)
{
    return reinterpret_cast<daq::IDataDescriptorBuilder*>(self)->setMetadata(reinterpret_cast<daq::IDict*>(metadata));
}

daqErrCode daqDataDescriptorBuilder_getMetadata(daqDataDescriptorBuilder* self, daqDict** metadata)
{
    return reinterpret_cast<daq::IDataDescriptorBuilder*>(self)->getMetadata(reinterpret_cast<daq::IDict**>(metadata));
}

daqErrCode daqDataDescriptorBuilder_setReferenceDomainInfo(daqDataDescriptorBuilder* self, daqReferenceDomainInfo* referenceDomainInfo)
{
    return reinterpret_cast<daq::IDataDescriptorBuilder*>(self)->setReferenceDomainInfo(reinterpret_cast<daq::IReferenceDomainInfo*>(referenceDomainInfo));
}

daqErrCode daqDataDescriptorBuilder_getReferenceDomainInfo(daqDataDescriptorBuilder* self, daqReferenceDomainInfo** referenceDomainInfo)
{
    return reinterpret_cast<daq::IDataDescriptorBuilder*>(self)->getReferenceDomainInfo(reinterpret_cast<daq::IReferenceDomainInfo**>(referenceDomainInfo));
}

daqErrCode daqDataDescriptorBuilder_createDataDescriptorBuilder(daqDataDescriptorBuilder** obj)
{
    daq::IDataDescriptorBuilder* ptr = nullptr;
    daqErrCode err = daq::createDataDescriptorBuilder(&ptr);
    *obj = reinterpret_cast<daqDataDescriptorBuilder*>(ptr);
    return err;
}

daqErrCode daqDataDescriptorBuilder_createDataDescriptorBuilderFromExisting(daqDataDescriptorBuilder** obj, daqDataDescriptor* descriptorToCopy)
{
    daq::IDataDescriptorBuilder* ptr = nullptr;
    daqErrCode err = daq::createDataDescriptorBuilderFromExisting(&ptr, reinterpret_cast<daq::IDataDescriptor*>(descriptorToCopy));
    *obj = reinterpret_cast<daqDataDescriptorBuilder*>(ptr);
    return err;
}
