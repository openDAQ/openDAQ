//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.5.0) on 14.04.2025 21:38:00.
// </auto-generated>
//------------------------------------------------------------------------------

#include "copendaq/signal/input_port_config.h"

#include <opendaq/opendaq.h>

#include "copendaq_private.h"

const IntfID INPUT_PORT_CONFIG_INTF_ID = { daq::IInputPortConfig::Id.Data1, daq::IInputPortConfig::Id.Data2, daq::IInputPortConfig::Id.Data3, daq::IInputPortConfig::Id.Data4_UInt64 };

ErrCode InputPortConfig_setNotificationMethod(InputPortConfig* self, PacketReadyNotification method)
{
    return reinterpret_cast<daq::IInputPortConfig*>(self)->setNotificationMethod(static_cast<daq::PacketReadyNotification>(method));
}

ErrCode InputPortConfig_notifyPacketEnqueued(InputPortConfig* self, Bool queueWasEmpty)
{
    return reinterpret_cast<daq::IInputPortConfig*>(self)->notifyPacketEnqueued(queueWasEmpty);
}

ErrCode InputPortConfig_notifyPacketEnqueuedOnThisThread(InputPortConfig* self)
{
    return reinterpret_cast<daq::IInputPortConfig*>(self)->notifyPacketEnqueuedOnThisThread();
}

ErrCode InputPortConfig_setListener(InputPortConfig* self, InputPortNotifications* port)
{
    return reinterpret_cast<daq::IInputPortConfig*>(self)->setListener(reinterpret_cast<daq::IInputPortNotifications*>(port));
}

ErrCode InputPortConfig_getCustomData(InputPortConfig* self, BaseObject** customData)
{
    return reinterpret_cast<daq::IInputPortConfig*>(self)->getCustomData(reinterpret_cast<daq::IBaseObject**>(customData));
}

ErrCode InputPortConfig_setCustomData(InputPortConfig* self, BaseObject* customData)
{
    return reinterpret_cast<daq::IInputPortConfig*>(self)->setCustomData(reinterpret_cast<daq::IBaseObject*>(customData));
}

ErrCode InputPortConfig_setRequiresSignal(InputPortConfig* self, Bool requiresSignal)
{
    return reinterpret_cast<daq::IInputPortConfig*>(self)->setRequiresSignal(requiresSignal);
}

ErrCode InputPortConfig_getGapCheckingEnabled(InputPortConfig* self, Bool* gapCheckingEnabled)
{
    return reinterpret_cast<daq::IInputPortConfig*>(self)->getGapCheckingEnabled(gapCheckingEnabled);
}

ErrCode InputPortConfig_createInputPort(InputPortConfig** obj, Context* context, Component* parent, String* localId, Bool gapChecking)
{
    daq::IInputPortConfig* ptr = nullptr;
    ErrCode err = daq::createInputPort(&ptr, reinterpret_cast<daq::IContext*>(context), reinterpret_cast<daq::IComponent*>(parent), reinterpret_cast<daq::IString*>(localId), gapChecking);
    *obj = reinterpret_cast<InputPortConfig*>(ptr);
    return err;
}
