//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.7.0) on 03.06.2025 22:07:46.
// </auto-generated>
//------------------------------------------------------------------------------

#include <copendaq/signal/input_port_config.h>

#include <opendaq/opendaq.h>

#include <copendaq_private.h>

const daqIntfID DAQ_INPUT_PORT_CONFIG_INTF_ID = { daq::IInputPortConfig::Id.Data1, daq::IInputPortConfig::Id.Data2, daq::IInputPortConfig::Id.Data3, daq::IInputPortConfig::Id.Data4_UInt64 };

daqErrCode daqInputPortConfig_setNotificationMethod(daqInputPortConfig* self, daqPacketReadyNotification method)
{
    return reinterpret_cast<daq::IInputPortConfig*>(self)->setNotificationMethod(static_cast<daq::PacketReadyNotification>(method));
}

daqErrCode daqInputPortConfig_notifyPacketEnqueued(daqInputPortConfig* self, daqBool queueWasEmpty)
{
    return reinterpret_cast<daq::IInputPortConfig*>(self)->notifyPacketEnqueued(queueWasEmpty);
}

daqErrCode daqInputPortConfig_notifyPacketEnqueuedOnThisThread(daqInputPortConfig* self)
{
    return reinterpret_cast<daq::IInputPortConfig*>(self)->notifyPacketEnqueuedOnThisThread();
}

daqErrCode daqInputPortConfig_setListener(daqInputPortConfig* self, daqInputPortNotifications* port)
{
    return reinterpret_cast<daq::IInputPortConfig*>(self)->setListener(reinterpret_cast<daq::IInputPortNotifications*>(port));
}

daqErrCode daqInputPortConfig_getCustomData(daqInputPortConfig* self, daqBaseObject** customData)
{
    return reinterpret_cast<daq::IInputPortConfig*>(self)->getCustomData(reinterpret_cast<daq::IBaseObject**>(customData));
}

daqErrCode daqInputPortConfig_setCustomData(daqInputPortConfig* self, daqBaseObject* customData)
{
    return reinterpret_cast<daq::IInputPortConfig*>(self)->setCustomData(reinterpret_cast<daq::IBaseObject*>(customData));
}

daqErrCode daqInputPortConfig_setRequiresSignal(daqInputPortConfig* self, daqBool requiresSignal)
{
    return reinterpret_cast<daq::IInputPortConfig*>(self)->setRequiresSignal(requiresSignal);
}

daqErrCode daqInputPortConfig_getGapCheckingEnabled(daqInputPortConfig* self, daqBool* gapCheckingEnabled)
{
    return reinterpret_cast<daq::IInputPortConfig*>(self)->getGapCheckingEnabled(gapCheckingEnabled);
}

daqErrCode daqInputPortConfig_createInputPort(daqInputPortConfig** obj, daqContext* context, daqComponent* parent, daqString* localId, daqBool gapChecking)
{
    daq::IInputPortConfig* ptr = nullptr;
    daqErrCode err = daq::createInputPort(&ptr, reinterpret_cast<daq::IContext*>(context), reinterpret_cast<daq::IComponent*>(parent), reinterpret_cast<daq::IString*>(localId), gapChecking);
    *obj = reinterpret_cast<daqInputPortConfig*>(ptr);
    return err;
}
