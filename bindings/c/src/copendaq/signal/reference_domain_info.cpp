//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.6.0) on 27.04.2025 18:34:10.
// </auto-generated>
//------------------------------------------------------------------------------

#include <copendaq/signal/reference_domain_info.h>

#include <opendaq/opendaq.h>

#include <copendaq_private.h>

const IntfID REFERENCE_DOMAIN_INFO_INTF_ID = { daq::IReferenceDomainInfo::Id.Data1, daq::IReferenceDomainInfo::Id.Data2, daq::IReferenceDomainInfo::Id.Data3, daq::IReferenceDomainInfo::Id.Data4_UInt64 };

ErrCode ReferenceDomainInfo_getReferenceDomainId(ReferenceDomainInfo* self, String** referenceDomainId)
{
    return reinterpret_cast<daq::IReferenceDomainInfo*>(self)->getReferenceDomainId(reinterpret_cast<daq::IString**>(referenceDomainId));
}

ErrCode ReferenceDomainInfo_getReferenceDomainOffset(ReferenceDomainInfo* self, Integer** referenceDomainOffset)
{
    return reinterpret_cast<daq::IReferenceDomainInfo*>(self)->getReferenceDomainOffset(reinterpret_cast<daq::IInteger**>(referenceDomainOffset));
}

ErrCode ReferenceDomainInfo_getReferenceTimeSource(ReferenceDomainInfo* self, TimeSource* referenceTimeSource)
{
    return reinterpret_cast<daq::IReferenceDomainInfo*>(self)->getReferenceTimeSource(reinterpret_cast<daq::TimeSource*>(referenceTimeSource));
}

ErrCode ReferenceDomainInfo_getUsesOffset(ReferenceDomainInfo* self, UsesOffset* usesOffset)
{
    return reinterpret_cast<daq::IReferenceDomainInfo*>(self)->getUsesOffset(reinterpret_cast<daq::UsesOffset*>(usesOffset));
}

ErrCode ReferenceDomainInfo_createReferenceDomainInfoFromBuilder(ReferenceDomainInfo** obj, ReferenceDomainInfoBuilder* builder)
{
    daq::IReferenceDomainInfo* ptr = nullptr;
    ErrCode err = daq::createReferenceDomainInfoFromBuilder(&ptr, reinterpret_cast<daq::IReferenceDomainInfoBuilder*>(builder));
    *obj = reinterpret_cast<ReferenceDomainInfo*>(ptr);
    return err;
}
