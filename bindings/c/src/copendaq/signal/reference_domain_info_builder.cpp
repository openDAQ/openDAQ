//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.7.0) on 03.06.2025 22:07:50.
// </auto-generated>
//------------------------------------------------------------------------------

#include <copendaq/signal/reference_domain_info_builder.h>

#include <opendaq/opendaq.h>

#include <copendaq_private.h>

const daqIntfID DAQ_REFERENCE_DOMAIN_INFO_BUILDER_INTF_ID = { daq::IReferenceDomainInfoBuilder::Id.Data1, daq::IReferenceDomainInfoBuilder::Id.Data2, daq::IReferenceDomainInfoBuilder::Id.Data3, daq::IReferenceDomainInfoBuilder::Id.Data4_UInt64 };

daqErrCode daqReferenceDomainInfoBuilder_build(daqReferenceDomainInfoBuilder* self, daqReferenceDomainInfo** referenceDomainInfo)
{
    return reinterpret_cast<daq::IReferenceDomainInfoBuilder*>(self)->build(reinterpret_cast<daq::IReferenceDomainInfo**>(referenceDomainInfo));
}

daqErrCode daqReferenceDomainInfoBuilder_setReferenceDomainId(daqReferenceDomainInfoBuilder* self, daqString* referenceDomainId)
{
    return reinterpret_cast<daq::IReferenceDomainInfoBuilder*>(self)->setReferenceDomainId(reinterpret_cast<daq::IString*>(referenceDomainId));
}

daqErrCode daqReferenceDomainInfoBuilder_getReferenceDomainId(daqReferenceDomainInfoBuilder* self, daqString** referenceDomainId)
{
    return reinterpret_cast<daq::IReferenceDomainInfoBuilder*>(self)->getReferenceDomainId(reinterpret_cast<daq::IString**>(referenceDomainId));
}

daqErrCode daqReferenceDomainInfoBuilder_setReferenceDomainOffset(daqReferenceDomainInfoBuilder* self, daqInteger* referenceDomainOffset)
{
    return reinterpret_cast<daq::IReferenceDomainInfoBuilder*>(self)->setReferenceDomainOffset(reinterpret_cast<daq::IInteger*>(referenceDomainOffset));
}

daqErrCode daqReferenceDomainInfoBuilder_getReferenceDomainOffset(daqReferenceDomainInfoBuilder* self, daqInteger** referenceDomainOffset)
{
    return reinterpret_cast<daq::IReferenceDomainInfoBuilder*>(self)->getReferenceDomainOffset(reinterpret_cast<daq::IInteger**>(referenceDomainOffset));
}

daqErrCode daqReferenceDomainInfoBuilder_setReferenceTimeSource(daqReferenceDomainInfoBuilder* self, daqTimeSource referenceTimeSource)
{
    return reinterpret_cast<daq::IReferenceDomainInfoBuilder*>(self)->setReferenceTimeSource(static_cast<daq::TimeSource>(referenceTimeSource));
}

daqErrCode daqReferenceDomainInfoBuilder_getReferenceTimeSource(daqReferenceDomainInfoBuilder* self, daqTimeSource* referenceTimeSource)
{
    return reinterpret_cast<daq::IReferenceDomainInfoBuilder*>(self)->getReferenceTimeSource(reinterpret_cast<daq::TimeSource*>(referenceTimeSource));
}

daqErrCode daqReferenceDomainInfoBuilder_setUsesOffset(daqReferenceDomainInfoBuilder* self, daqUsesOffset usesOffset)
{
    return reinterpret_cast<daq::IReferenceDomainInfoBuilder*>(self)->setUsesOffset(static_cast<daq::UsesOffset>(usesOffset));
}

daqErrCode daqReferenceDomainInfoBuilder_getUsesOffset(daqReferenceDomainInfoBuilder* self, daqUsesOffset* usesOffset)
{
    return reinterpret_cast<daq::IReferenceDomainInfoBuilder*>(self)->getUsesOffset(reinterpret_cast<daq::UsesOffset*>(usesOffset));
}

daqErrCode daqReferenceDomainInfoBuilder_createReferenceDomainInfoBuilder(daqReferenceDomainInfoBuilder** obj)
{
    daq::IReferenceDomainInfoBuilder* ptr = nullptr;
    daqErrCode err = daq::createReferenceDomainInfoBuilder(&ptr);
    *obj = reinterpret_cast<daqReferenceDomainInfoBuilder*>(ptr);
    return err;
}

daqErrCode daqReferenceDomainInfoBuilder_createReferenceDomainInfoBuilderFromExisting(daqReferenceDomainInfoBuilder** obj, daqReferenceDomainInfo* referenceDomainInfoToCopy)
{
    daq::IReferenceDomainInfoBuilder* ptr = nullptr;
    daqErrCode err = daq::createReferenceDomainInfoBuilderFromExisting(&ptr, reinterpret_cast<daq::IReferenceDomainInfo*>(referenceDomainInfoToCopy));
    *obj = reinterpret_cast<daqReferenceDomainInfoBuilder*>(ptr);
    return err;
}
