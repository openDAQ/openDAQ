//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.5.0) on 14.04.2025 21:38:04.
// </auto-generated>
//------------------------------------------------------------------------------

#include "copendaq/signal/reference_domain_info_builder.h"

#include <opendaq/opendaq.h>

#include "copendaq_private.h"

const IntfID REFERENCE_DOMAIN_INFO_BUILDER_INTF_ID = { daq::IReferenceDomainInfoBuilder::Id.Data1, daq::IReferenceDomainInfoBuilder::Id.Data2, daq::IReferenceDomainInfoBuilder::Id.Data3, daq::IReferenceDomainInfoBuilder::Id.Data4_UInt64 };

ErrCode ReferenceDomainInfoBuilder_build(ReferenceDomainInfoBuilder* self, ReferenceDomainInfo** referenceDomainInfo)
{
    return reinterpret_cast<daq::IReferenceDomainInfoBuilder*>(self)->build(reinterpret_cast<daq::IReferenceDomainInfo**>(referenceDomainInfo));
}

ErrCode ReferenceDomainInfoBuilder_setReferenceDomainId(ReferenceDomainInfoBuilder* self, String* referenceDomainId)
{
    return reinterpret_cast<daq::IReferenceDomainInfoBuilder*>(self)->setReferenceDomainId(reinterpret_cast<daq::IString*>(referenceDomainId));
}

ErrCode ReferenceDomainInfoBuilder_getReferenceDomainId(ReferenceDomainInfoBuilder* self, String** referenceDomainId)
{
    return reinterpret_cast<daq::IReferenceDomainInfoBuilder*>(self)->getReferenceDomainId(reinterpret_cast<daq::IString**>(referenceDomainId));
}

ErrCode ReferenceDomainInfoBuilder_setReferenceDomainOffset(ReferenceDomainInfoBuilder* self, Integer* referenceDomainOffset)
{
    return reinterpret_cast<daq::IReferenceDomainInfoBuilder*>(self)->setReferenceDomainOffset(reinterpret_cast<daq::IInteger*>(referenceDomainOffset));
}

ErrCode ReferenceDomainInfoBuilder_getReferenceDomainOffset(ReferenceDomainInfoBuilder* self, Integer** referenceDomainOffset)
{
    return reinterpret_cast<daq::IReferenceDomainInfoBuilder*>(self)->getReferenceDomainOffset(reinterpret_cast<daq::IInteger**>(referenceDomainOffset));
}

ErrCode ReferenceDomainInfoBuilder_setReferenceTimeSource(ReferenceDomainInfoBuilder* self, TimeSource referenceTimeSource)
{
    return reinterpret_cast<daq::IReferenceDomainInfoBuilder*>(self)->setReferenceTimeSource(static_cast<daq::TimeSource>(referenceTimeSource));
}

ErrCode ReferenceDomainInfoBuilder_getReferenceTimeSource(ReferenceDomainInfoBuilder* self, TimeSource* referenceTimeSource)
{
    return reinterpret_cast<daq::IReferenceDomainInfoBuilder*>(self)->getReferenceTimeSource(reinterpret_cast<daq::TimeSource*>(referenceTimeSource));
}

ErrCode ReferenceDomainInfoBuilder_setUsesOffset(ReferenceDomainInfoBuilder* self, UsesOffset usesOffset)
{
    return reinterpret_cast<daq::IReferenceDomainInfoBuilder*>(self)->setUsesOffset(static_cast<daq::UsesOffset>(usesOffset));
}

ErrCode ReferenceDomainInfoBuilder_getUsesOffset(ReferenceDomainInfoBuilder* self, UsesOffset* usesOffset)
{
    return reinterpret_cast<daq::IReferenceDomainInfoBuilder*>(self)->getUsesOffset(reinterpret_cast<daq::UsesOffset*>(usesOffset));
}

ErrCode ReferenceDomainInfoBuilder_createReferenceDomainInfoBuilder(ReferenceDomainInfoBuilder** obj)
{
    daq::IReferenceDomainInfoBuilder* ptr = nullptr;
    ErrCode err = daq::createReferenceDomainInfoBuilder(&ptr);
    *obj = reinterpret_cast<ReferenceDomainInfoBuilder*>(ptr);
    return err;
}

ErrCode ReferenceDomainInfoBuilder_createReferenceDomainInfoBuilderFromExisting(ReferenceDomainInfoBuilder** obj, ReferenceDomainInfo* referenceDomainInfoToCopy)
{
    daq::IReferenceDomainInfoBuilder* ptr = nullptr;
    ErrCode err = daq::createReferenceDomainInfoBuilderFromExisting(&ptr, reinterpret_cast<daq::IReferenceDomainInfo*>(referenceDomainInfoToCopy));
    *obj = reinterpret_cast<ReferenceDomainInfoBuilder*>(ptr);
    return err;
}
