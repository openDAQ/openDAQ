//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CGenerator v0.6.0) on 27.04.2025 18:34:13.
// </auto-generated>
//------------------------------------------------------------------------------

#include <copendaq/signal/scaling_builder.h>

#include <opendaq/opendaq.h>

#include <copendaq_private.h>

const IntfID SCALING_BUILDER_INTF_ID = { daq::IScalingBuilder::Id.Data1, daq::IScalingBuilder::Id.Data2, daq::IScalingBuilder::Id.Data3, daq::IScalingBuilder::Id.Data4_UInt64 };

ErrCode ScalingBuilder_build(ScalingBuilder* self, Scaling** scaling)
{
    return reinterpret_cast<daq::IScalingBuilder*>(self)->build(reinterpret_cast<daq::IScaling**>(scaling));
}

ErrCode ScalingBuilder_setInputDataType(ScalingBuilder* self, SampleType type)
{
    return reinterpret_cast<daq::IScalingBuilder*>(self)->setInputDataType(static_cast<daq::SampleType>(type));
}

ErrCode ScalingBuilder_getInputDataType(ScalingBuilder* self, SampleType* type)
{
    return reinterpret_cast<daq::IScalingBuilder*>(self)->getInputDataType(reinterpret_cast<daq::SampleType*>(type));
}

ErrCode ScalingBuilder_setOutputDataType(ScalingBuilder* self, ScaledSampleType type)
{
    return reinterpret_cast<daq::IScalingBuilder*>(self)->setOutputDataType(static_cast<daq::ScaledSampleType>(type));
}

ErrCode ScalingBuilder_getOutputDataType(ScalingBuilder* self, ScaledSampleType* type)
{
    return reinterpret_cast<daq::IScalingBuilder*>(self)->getOutputDataType(reinterpret_cast<daq::ScaledSampleType*>(type));
}

ErrCode ScalingBuilder_setScalingType(ScalingBuilder* self, ScalingType type)
{
    return reinterpret_cast<daq::IScalingBuilder*>(self)->setScalingType(static_cast<daq::ScalingType>(type));
}

ErrCode ScalingBuilder_getScalingType(ScalingBuilder* self, ScalingType* type)
{
    return reinterpret_cast<daq::IScalingBuilder*>(self)->getScalingType(reinterpret_cast<daq::ScalingType*>(type));
}

ErrCode ScalingBuilder_setParameters(ScalingBuilder* self, Dict* parameters)
{
    return reinterpret_cast<daq::IScalingBuilder*>(self)->setParameters(reinterpret_cast<daq::IDict*>(parameters));
}

ErrCode ScalingBuilder_getParameters(ScalingBuilder* self, Dict** parameters)
{
    return reinterpret_cast<daq::IScalingBuilder*>(self)->getParameters(reinterpret_cast<daq::IDict**>(parameters));
}

ErrCode ScalingBuilder_addParameter(ScalingBuilder* self, String* name, BaseObject* parameter)
{
    return reinterpret_cast<daq::IScalingBuilder*>(self)->addParameter(reinterpret_cast<daq::IString*>(name), reinterpret_cast<daq::IBaseObject*>(parameter));
}

ErrCode ScalingBuilder_removeParameter(ScalingBuilder* self, String* name)
{
    return reinterpret_cast<daq::IScalingBuilder*>(self)->removeParameter(reinterpret_cast<daq::IString*>(name));
}

ErrCode ScalingBuilder_createScalingBuilder(ScalingBuilder** obj)
{
    daq::IScalingBuilder* ptr = nullptr;
    ErrCode err = daq::createScalingBuilder(&ptr);
    *obj = reinterpret_cast<ScalingBuilder*>(ptr);
    return err;
}

ErrCode ScalingBuilder_createScalingBuilderFromExisting(ScalingBuilder** obj, Scaling* scalingToCopy)
{
    daq::IScalingBuilder* ptr = nullptr;
    ErrCode err = daq::createScalingBuilderFromExisting(&ptr, reinterpret_cast<daq::IScaling*>(scalingToCopy));
    *obj = reinterpret_cast<ScalingBuilder*>(ptr);
    return err;
}
