//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (PythonGenerator).
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2024 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "py_opendaq/py_opendaq.h"
#include "py_core_types/py_converter.h"

PyDaqIntf<daq::IAddressInfo, daq::IPropertyObject> declareIAddressInfo(pybind11::module_ m)
{
    py::enum_<daq::AddressReachabilityStatus>(m, "AddressReachabilityStatus")
        .value("Unknown", daq::AddressReachabilityStatus::Unknown)
        .value("Reachable", daq::AddressReachabilityStatus::Reachable)
        .value("Unreachable", daq::AddressReachabilityStatus::Unreachable);

    return wrapInterface<daq::IAddressInfo, daq::IPropertyObject>(m, "IAddressInfo");
}

void defineIAddressInfo(pybind11::module_ m, PyDaqIntf<daq::IAddressInfo, daq::IPropertyObject> cls)
{
    cls.doc() = "";

    m.def("AddressInfo", &daq::AddressInfo_Create);
    m.def("AddressInfoFromBuilder", &daq::AddressInfoFromBuilder_Create);

    cls.def_property_readonly("address",
        [](daq::IAddressInfo *object)
        {
            const auto objectPtr = daq::AddressInfoPtr::Borrow(object);
            return objectPtr.getAddress().toStdString();
        },
        "Gets the server address as a string.");
    cls.def_property_readonly("connection_string",
        [](daq::IAddressInfo *object)
        {
            const auto objectPtr = daq::AddressInfoPtr::Borrow(object);
            return objectPtr.getConnectionString().toStdString();
        },
        "Gets the connection string corresponding to the address.");
    cls.def_property_readonly("type",
        [](daq::IAddressInfo *object)
        {
            const auto objectPtr = daq::AddressInfoPtr::Borrow(object);
            return objectPtr.getType().toStdString();
        },
        "Gets the type of the address.");
    cls.def_property_readonly("reachability_status",
        [](daq::IAddressInfo *object)
        {
            const auto objectPtr = daq::AddressInfoPtr::Borrow(object);
            return objectPtr.getReachabilityStatus();
        },
        "Gets the reachability status of the address.");
}
