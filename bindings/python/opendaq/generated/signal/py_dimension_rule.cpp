//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (PythonGenerator).
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2024 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "py_opendaq/py_opendaq.h"
#include "py_core_types/py_converter.h"

PyDaqIntf<daq::IDimensionRule, daq::IBaseObject> declareIDimensionRule(pybind11::module_ m)
{
    py::enum_<daq::DimensionRuleType>(m, "DimensionRuleType")
        .value("Other", daq::DimensionRuleType::Other)
        .value("Linear", daq::DimensionRuleType::Linear)
        .value("Logarithmic", daq::DimensionRuleType::Logarithmic)
        .value("List", daq::DimensionRuleType::List);

    return wrapInterface<daq::IDimensionRule, daq::IBaseObject>(m, "IDimensionRule");
}

void defineIDimensionRule(pybind11::module_ m, PyDaqIntf<daq::IDimensionRule, daq::IBaseObject> cls)
{
    cls.doc() = "Rule that defines the labels (alternatively called bins, ticks) of a dimension.";

    m.def("LinearDimensionRule", &daq::LinearDimensionRule_Create);
    m.def("ListDimensionRule", &daq::ListDimensionRule_Create);
    m.def("LogarithmicDimensionRule", &daq::LogarithmicDimensionRule_Create);
    m.def("DimensionRule", &daq::DimensionRule_Create);
    m.def("DimensionRuleFromBuilder", &daq::DimensionRuleFromBuilder_Create);

    cls.def_property_readonly("type",
        [](daq::IDimensionRule *object)
        {
            const auto objectPtr = daq::DimensionRulePtr::Borrow(object);
            return objectPtr.getType();
        },
        "Gets the type of the dimension rule.");
    cls.def_property_readonly("parameters",
        [](daq::IDimensionRule *object)
        {
            const auto objectPtr = daq::DimensionRulePtr::Borrow(object);
            return objectPtr.getParameters().detach();
        },
        py::return_value_policy::take_ownership,
        "Gets a dictionary of string-object key-value pairs representing the parameters used to evaluate the rule.");
}
