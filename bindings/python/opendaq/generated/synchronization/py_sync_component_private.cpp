//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (PythonGenerator).
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2024 openDAQ d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include <pybind11/gil.h>

#include "py_opendaq/py_opendaq.h"
#include "py_core_types/py_converter.h"
#include "py_core_objects/py_variant_extractor.h"

PyDaqIntf<daq::ISyncComponentPrivate, daq::IBaseObject> declareISyncComponentPrivate(pybind11::module_ m)
{
    return wrapInterface<daq::ISyncComponentPrivate, daq::IBaseObject>(m, "ISyncComponentPrivate");
}

void defineISyncComponentPrivate(pybind11::module_ m, PyDaqIntf<daq::ISyncComponentPrivate, daq::IBaseObject> cls)
{
    cls.doc() = "Interface representing a Synchronization Component in a Test & Measurement system. A SynchronizationComponent ensures synchronization among measurement devices in the system. It can act as a sync source and/or as a sync output, with each component having one sync input and 0 to n sync outputs.";

    cls.def_property("sync_locked",
        nullptr,
        [](daq::ISyncComponentPrivate *object, const bool synchronizationLocked)
        {
            py::gil_scoped_release release;
            const auto objectPtr = daq::SyncComponentPrivatePtr::Borrow(object);
            objectPtr.setSyncLocked(synchronizationLocked);
        },
        "Sets the synchronization lock status.");
    cls.def("add_interface",
        [](daq::ISyncComponentPrivate *object, daq::IPropertyObject* syncInterface)
        {
            py::gil_scoped_release release;
            const auto objectPtr = daq::SyncComponentPrivatePtr::Borrow(object);
            objectPtr.addInterface(syncInterface);
        },
        py::arg("sync_interface"),
        "Adds an interface to the synchronization component.");
    cls.def("remove_interface",
        [](daq::ISyncComponentPrivate *object, std::variant<daq::IString*, py::str, daq::IEvalValue*>& syncInterfaceName)
        {
            py::gil_scoped_release release;
            const auto objectPtr = daq::SyncComponentPrivatePtr::Borrow(object);
            objectPtr.removeInterface(getVariantValue<daq::IString*>(syncInterfaceName));
        },
        py::arg("sync_interface_name"),
        "Removes an interface from the synchronization component.");
}
