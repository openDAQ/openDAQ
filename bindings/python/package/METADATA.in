Metadata-Version: 2.1
Name: opendaq
Version: @VERSION@
Summary: Open Data Acquisition Platform
Home-page: https://opendaq.com
Author: Blueberry d.o.o.
Author-email: opendaq@blueberry.com
Keywords: DAQ
Project-URL: Homepage, https://opendaq.com/
Project-URL: Documentation, https://docs.opendaq.com/manual/
Project-URL: Download, https://docs.opendaq.com/
Project-URL: Source code, https://github.com/openDAQ/openDAQ
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.8
Requires-Dist: numpy>=1.7.0
Description-Content-Type: text/markdown

openDAQ
=======

*SDK that bridges the gap between data acquisition devices, in an era where incompatibility is the norm.*

openDAQ is a software development kit that allows for easy integration of data acquisition devices into its ecosystem.
It provides a simple generic API that allows users to connect to Data Acquisition (DAQ) devices that are compliant with
openDAQ and any of its supported open standards. With the SDK, users can configure properties of devices and read their
measurement data. It also contains a framework for developing custom signal processing blocks that process and analyse
signal data. In a world where DAQ devices do not readily communicate, openDAQ provides a common language for all to speak
while also embracing existing standards such as MQTT and XCP via Ethernet.

Installation
------------

The package is available as binary wheels for Python 3.8-3.12. It has been built and tested for:
* 64-bit Windows
* x86_64 Linux (built on manylinux 2014, requires GLIBC >= 2.17)

On supported systems you can install it with:

```bash
$ pip install opendaq
```

Quick-start
-----------

You can start the application by creating a new instance:

```python
import opendaq

# Create a fresh openDAQ(TM) instance that we will use
# for all the interactions with the openDAQ(TM) SDK
instance = opendaq.Instance()
```

In order to list all the available devices, run:

```python
for device_info in instance.available_devices:
    print("Name:", device_info.name, "Connection string:", device_info.connection_string)
```

When using just a reference module without being connected to a physical device, the expected output will be
```
Name: Device 0 Connection string: daqref://device0
Name: Device 1 Connection string: daqref://device1
```

More examples can be found under https://docs.opendaq.com/manual/.

GUI
---

Python openDAQ(TM) package comes with a reference Tk GUI implementation, allowing you to quickly connect to any
openDAQ(TM) device and inspect or configure it.

To run the GUI, invoke the package from the command line using `-m` flag:
```bash
$ python -m opendaq
```
