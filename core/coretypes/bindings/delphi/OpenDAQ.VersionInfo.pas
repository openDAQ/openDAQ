//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (DelphiGenerator v1.10.2) on 20.08.2019 10:20:54.
// </auto-generated>
//------------------------------------------------------------------------------
unit OpenDAQ.VersionInfo;

interface
uses
  OpenDAQ.CoreTypes,
  OpenDAQ.ObjectPtr,
  OpenDAQ.ProxyValue;

type
  {$MINENUMSIZE 4}

  IVersionInfo = interface(IBaseObject)
  ['{5951D4D2-35EB-513C-B67D-89DABC6BE3BF}']
    function GetMajor(out Major: SizeT): ErrCode; stdcall;
    function GetMinor(out Minor: SizeT): ErrCode; stdcall;
    function GetPatch(out Patch: SizeT): ErrCode; stdcall;
  end;

  IVersionInfoPtr<T : IVersionInfo> = interface;
  IVersionInfoPtr = IVersionInfoPtr<IVersionInfo>;

  IVersionInfoPtr<T : IVersionInfo> = interface(IObjectPtr<T>)
  ['{f67fc17a-b0a1-5c9b-9c52-ef7fbce93cca}']
    function GetMajor(): SizeT;
    function GetMinor(): SizeT;
    function GetPatch(): SizeT;
  end;

  TVersionInfoPtr<T : IVersionInfo> = class(TObjectPtr<T>, IVersionInfoPtr<T>, IVersionInfo)
  public
    constructor Create(Obj: IBaseObject); overload; override;
    constructor Create(Obj: T); overload;

    // Factory constructors
    constructor Create(Major: SizeT; Minor: SizeT; Patch: SizeT) overload;

    function GetMajor(): SizeT;
    function GetMinor(): SizeT;
    function GetPatch(): SizeT;
  private
    function IVersionInfo.GetMajor = Interface_GetMajor;
    function IVersionInfo.GetMinor = Interface_GetMinor;
    function IVersionInfo.GetPatch = Interface_GetPatch;

    function Interface_GetMajor(out Major: SizeT): ErrCode; stdcall;
    function Interface_GetMinor(out Minor: SizeT): ErrCode; stdcall;
    function Interface_GetPatch(out Patch: SizeT): ErrCode; stdcall;
  end;

  TVersionInfo = TVersionInfoPtr<IVersionInfo>;
  TVersionInfoPtr = TVersionInfoPtr<IVersionInfo>;

  function CreateVersionInfo(out Obj: IVersionInfo; Major: SizeT; Minor: SizeT; Patch: SizeT): ErrCode; cdecl;

implementation
uses
  OpenDAQ.CoreTypesConfig,
  OpenDAQ.CoreTypes.Errors,
  OpenDAQ.Exceptions,
  OpenDAQ.SmartPtrRegistry;

  function CreateVersionInfo(out Obj: IVersionInfo; Major: SizeT; Minor: SizeT; Patch: SizeT): ErrCode; external DSCoreTypesDLL name 'createVersionInfo';

constructor TVersionInfoPtr<T>.Create(Obj: T);
begin
  inherited Create(Obj);
end;

constructor TVersionInfoPtr<T>.Create(Obj: IBaseObject);
begin
  inherited Create(Obj);
end;

constructor TVersionInfoPtr<T>.Create(Major: SizeT; Minor: SizeT; Patch: SizeT);
var
  RawInterface: IVersionInfo;
  Err: ErrCode;
begin
  Err := CreateVersionInfo(RawInterface, Major, Minor, Patch);
  CheckRtErrorInfo(Err);

  inherited Create(RawInterface);
end;

function TVersionInfoPtr<T>.GetMajor(): SizeT;
var
  Err: ErrCode;
  Major: SizeT;
begin
  if not Assigned(FObject) then
    raise ERTInvalidParameterException.Create('Interface object is nil.');

  Err := FObject.GetMajor(Major);
  CheckRtErrorInfo(Err);

  Result := Major;
end;

function TVersionInfoPtr<T>.GetMinor(): SizeT;
var
  Err: ErrCode;
  Minor: SizeT;
begin
  if not Assigned(FObject) then
    raise ERTInvalidParameterException.Create('Interface object is nil.');

  Err := FObject.GetMinor(Minor);
  CheckRtErrorInfo(Err);

  Result := Minor;
end;

function TVersionInfoPtr<T>.GetPatch(): SizeT;
var
  Err: ErrCode;
  Patch: SizeT;
begin
  if not Assigned(FObject) then
    raise ERTInvalidParameterException.Create('Interface object is nil.');

  Err := FObject.GetPatch(Patch);
  CheckRtErrorInfo(Err);

  Result := Patch;
end;

function TVersionInfoPtr<T>.Interface_GetMajor(out Major: SizeT): ErrCode; stdcall;
begin
  Result := FObject.GetMajor(Major);
end;

function TVersionInfoPtr<T>.Interface_GetMinor(out Minor: SizeT): ErrCode; stdcall;
begin
  Result := FObject.GetMinor(Minor);
end;

function TVersionInfoPtr<T>.Interface_GetPatch(out Patch: SizeT): ErrCode; stdcall;
begin
  Result := FObject.GetPatch(Patch);
end;


initialization
  TSmartPtrRegistry.RegisterPtr(IVersionInfo, IVersionInfoPtr, TVersionInfoPtr);

finalization
  TSmartPtrRegistry.UnregisterPtr(IVersionInfo);

end.
