diff --git forkSrcPrefix/mdns.h forkDstPrefix/mdns.h
index e27e041048d5cf3111674079b198b327d5f7d023..97b634d93532e5c767ed430dd9fe46493690e967 100644
--- forkSrcPrefix/mdns.h
+++ forkDstPrefix/mdns.h
@@ -198,7 +198,7 @@ mdns_socket_setup_ipv4(int sock, const struct sockaddr_in* saddr);
 //! random user level ephemeral port. To run discovery service listening for incoming discoveries
 //! and queries, you must set MDNS_PORT as port.
 static inline int
-mdns_socket_open_ipv6(const struct sockaddr_in6* saddr);
+mdns_socket_open_ipv6(const struct sockaddr_in6* saddr, unsigned int if_index = 0);
 
 //! Setup an already opened IPv6 socket for mDNS/DNS-SD. To bind the socket to a specific interface,
 //! pass in the appropriate socket address in saddr, otherwise pass a null pointer for in6addr_any.
@@ -206,7 +206,7 @@ mdns_socket_open_ipv6(const struct sockaddr_in6* saddr);
 //! random user level ephemeral port. To run discovery service listening for incoming discoveries
 //! and queries, you must set MDNS_PORT as port.
 static inline int
-mdns_socket_setup_ipv6(int sock, const struct sockaddr_in6* saddr);
+mdns_socket_setup_ipv6(int sock, const struct sockaddr_in6* saddr, unsigned int if_index = 0);
 
 //! Close a socket opened with mdns_socket_open_ipv4 and mdns_socket_open_ipv6.
 static inline void
@@ -456,11 +456,11 @@ mdns_socket_setup_ipv4(int sock, const struct sockaddr_in* saddr) {
 }
 
 static inline int
-mdns_socket_open_ipv6(const struct sockaddr_in6* saddr) {
+mdns_socket_open_ipv6(const struct sockaddr_in6* saddr, unsigned int if_index) {
 	int sock = (int)socket(AF_INET6, SOCK_DGRAM, IPPROTO_UDP);
 	if (sock < 0)
 		return -1;
-	if (mdns_socket_setup_ipv6(sock, saddr)) {
+	if (mdns_socket_setup_ipv6(sock, saddr, if_index)) {
 		mdns_socket_close(sock);
 		return -1;
 	}
@@ -468,7 +468,7 @@ mdns_socket_open_ipv6(const struct sockaddr_in6* saddr) {
 }
 
 static inline int
-mdns_socket_setup_ipv6(int sock, const struct sockaddr_in6* saddr) {
+mdns_socket_setup_ipv6(int sock, const struct sockaddr_in6* saddr, unsigned int if_index) {
 	int hops = 1;
 	unsigned int loopback = 1;
 	unsigned int reuseaddr = 1;
@@ -485,6 +485,9 @@ mdns_socket_setup_ipv6(int sock, const struct sockaddr_in6* saddr) {
 	req.ipv6mr_multiaddr.s6_addr[0] = 0xFF;
 	req.ipv6mr_multiaddr.s6_addr[1] = 0x02;
 	req.ipv6mr_multiaddr.s6_addr[15] = 0xFB;
+	if (if_index != 0)
+		req.ipv6mr_interface = if_index;
+
 	if (setsockopt(sock, IPPROTO_IPV6, IPV6_JOIN_GROUP, (char*)&req, sizeof(req)))
 		return -1;
 
