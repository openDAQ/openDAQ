#include "gtest/gtest.h"
#include "opcuashared/opcua.h"

BEGIN_NAMESPACE_OPENDAQ_OPCUA

using StatusCodeTest = testing::Test;

TEST_F(StatusCodeTest, Succeeded)
{
    ASSERT_TRUE(OPCUA_STATUSCODE_SUCCEEDED(UA_STATUSCODE_GOOD));
    ASSERT_TRUE(OPCUA_STATUSCODE_SUCCEEDED(UA_STATUSCODE_GOODNODATA));
    ASSERT_FALSE(OPCUA_STATUSCODE_SUCCEEDED(UA_STATUSCODE_BADALREADYEXISTS));
}

TEST_F(StatusCodeTest, Failed)
{
    ASSERT_FALSE(OPCUA_STATUSCODE_FAILED(UA_STATUSCODE_GOOD));
    ASSERT_FALSE(OPCUA_STATUSCODE_FAILED(UA_STATUSCODE_GOODNODATA));
    ASSERT_TRUE(OPCUA_STATUSCODE_FAILED(UA_STATUSCODE_BADALREADYEXISTS));
}

TEST_F(StatusCodeTest, IsGood)
{
    ASSERT_TRUE(OPCUA_STATUSCODE_IS_GOOD(UA_STATUSCODE_GOOD));
    ASSERT_FALSE(OPCUA_STATUSCODE_IS_GOOD(UA_STATUSCODE_GOODNODATA));
    ASSERT_FALSE(OPCUA_STATUSCODE_IS_GOOD(UA_STATUSCODE_BADALREADYEXISTS));
}

TEST_F(StatusCodeTest, NotConnected)
{
    ASSERT_FALSE(OPCUA_STATUSCODE_NOT_CONNECTED(UA_STATUSCODE_GOOD));
    ASSERT_FALSE(OPCUA_STATUSCODE_NOT_CONNECTED(UA_STATUSCODE_GOODNODATA));
    ASSERT_FALSE(OPCUA_STATUSCODE_NOT_CONNECTED(UA_STATUSCODE_BADALREADYEXISTS));
    ASSERT_TRUE(OPCUA_STATUSCODE_NOT_CONNECTED(UA_STATUSCODE_BADDISCONNECT));
    ASSERT_TRUE(OPCUA_STATUSCODE_NOT_CONNECTED(UA_STATUSCODE_BADCONNECTIONCLOSED));
}

END_NAMESPACE_OPENDAQ_OPCUA
