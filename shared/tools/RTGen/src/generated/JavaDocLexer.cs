//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.11.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from F:\Dewesoft\C++\git\Blueberry3\shared\tools\RTGen\src\JavaDocLexer.g4 by ANTLR 4.11.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.11.1")]
[System.CLSCompliant(false)]
public partial class JavaDocLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		AtSign=1, LBrace=2, RBrace=3, LBracket=4, RBracket=5, DocStartSection=6, 
		DocEndSection=7, DocCode=8, DocEndCode=9, DocStartCode=10, DocPrivate=11, 
		DocRetVal=12, DocParam=13, DocBrief=14, DocThrows=15, DocParamRef=16, 
		DocCodeRef=17, DocAttribute=18, DocWord=19, WS=20, NL=21, Star=22, DocStart=23, 
		DocEnd=24;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"IdentifierNondigit", "Nondigit", "NondigitUpper", "Digit", "UniversalCharacterName", 
		"HexadecimalDigitSequence", "BinaryDigit", "BinaryPrefix", "HexadecimalDigit", 
		"HexadecimalPrefix", "HexQuad", "UnicodeIdentifier", "UnicodeStartChar", 
		"Emoji", "OtherPunctuation", "UnicodePunctuation", "DocChar", "AtSign", 
		"LBrace", "RBrace", "LBracket", "RBracket", "DocStartSection", "DocEndSection", 
		"DocCode", "DocEndCode", "DocStartCode", "DocPrivate", "DocRetVal", "DocParam", 
		"DocBrief", "DocThrows", "DocParamRef", "DocCodeRef", "DocAttribute", 
		"DocWord", "WS", "NL", "Star", "DocStart", "DocEnd"
	};


	public JavaDocLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public JavaDocLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'@'", "'{'", "'}'", "'['", "']'", "'@{'", "'@}'", null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, "'*'", 
		"'/*!'", "'*/'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "AtSign", "LBrace", "RBrace", "LBracket", "RBracket", "DocStartSection", 
		"DocEndSection", "DocCode", "DocEndCode", "DocStartCode", "DocPrivate", 
		"DocRetVal", "DocParam", "DocBrief", "DocThrows", "DocParamRef", "DocCodeRef", 
		"DocAttribute", "DocWord", "WS", "NL", "Star", "DocStart", "DocEnd"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "JavaDocLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static JavaDocLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,24,276,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,1,0,1,0,3,0,86,
		8,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3,
		4,104,8,4,1,5,4,5,107,8,5,11,5,12,5,108,1,6,1,6,1,7,1,7,1,7,1,8,1,8,1,
		9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,3,10,126,8,10,1,11,1,11,3,11,130,8,
		11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,3,15,140,8,15,1,16,1,16,1,16,
		1,16,4,16,146,8,16,11,16,12,16,147,1,17,1,17,1,18,1,18,1,19,1,19,1,20,
		1,20,1,21,1,21,1,22,1,22,1,22,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,
		1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,5,26,183,8,
		26,10,26,12,26,186,9,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,
		27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,
		29,1,29,1,29,1,29,1,29,1,29,1,29,3,29,218,8,29,1,30,1,30,1,30,1,30,1,30,
		1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,3,31,235,8,31,1,32,1,
		32,1,32,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,3,34,249,8,34,1,35,
		4,35,252,8,35,11,35,12,35,253,1,36,4,36,257,8,36,11,36,12,36,258,1,36,
		1,36,1,37,1,37,1,37,3,37,266,8,37,1,38,1,38,1,39,1,39,1,39,1,39,1,40,1,
		40,1,40,1,184,0,41,1,0,3,0,5,0,7,0,9,0,11,0,13,0,15,0,17,0,19,0,21,0,23,
		0,25,0,27,0,29,0,31,0,33,0,35,1,37,2,39,3,41,4,43,5,45,6,47,7,49,8,51,
		9,53,10,55,11,57,12,59,13,61,14,63,15,65,16,67,17,69,18,71,19,73,20,75,
		21,77,22,79,23,81,24,1,0,14,3,0,65,90,95,95,97,122,2,0,65,90,95,95,1,0,
		48,57,1,0,48,49,2,0,66,66,98,98,3,0,48,57,65,70,97,102,2,0,88,88,120,120,
		5,0,48,57,95,95,183,183,768,879,8255,8256,13,0,65,90,97,122,192,214,216,
		246,248,767,880,893,895,8191,8204,8205,8304,8591,11264,12271,12289,55295,
		63744,64975,65008,65533,2,0,128169,128169,129318,129318,6,0,33,35,37,39,
		44,44,46,47,63,63,92,92,64,0,40,41,45,45,58,59,91,91,93,93,95,95,123,123,
		125,125,171,171,187,187,1418,1418,1470,1470,3898,3901,5120,5120,5787,5788,
		6150,6150,8208,8213,8216,8223,8249,8250,8255,8256,8261,8262,8276,8276,
		8317,8318,8333,8334,8968,8971,9001,9002,10088,10101,10181,10182,10214,
		10223,10627,10648,10712,10715,10748,10749,11778,11781,11785,11786,11788,
		11789,11799,11799,11802,11802,11804,11805,11808,11817,11834,11835,11840,
		11840,11842,11842,11861,11869,12296,12305,12308,12319,12336,12336,12448,
		12448,64830,64831,65047,65048,65073,65092,65095,65096,65101,65103,65112,
		65118,65123,65123,65288,65289,65293,65293,65339,65339,65341,65341,65343,
		65343,65371,65371,65373,65373,65375,65376,65378,65379,69293,69293,234,
		0,36,36,43,43,60,62,94,94,96,96,124,124,126,126,162,166,168,169,172,172,
		174,177,180,180,184,184,215,215,247,247,706,709,722,735,741,747,749,749,
		751,767,885,885,900,901,1014,1014,1154,1154,1421,1423,1542,1544,1547,1547,
		1550,1551,1758,1758,1769,1769,1789,1790,2038,2038,2046,2047,2184,2184,
		2546,2547,2554,2555,2801,2801,2928,2928,3059,3066,3199,3199,3407,3407,
		3449,3449,3647,3647,3841,3843,3859,3859,3861,3863,3866,3871,3892,3892,
		3894,3894,3896,3896,4030,4037,4039,4044,4046,4047,4053,4056,4254,4255,
		5008,5017,5741,5741,6107,6107,6464,6464,6622,6655,7009,7018,7028,7036,
		8125,8125,8127,8129,8141,8143,8157,8159,8173,8175,8189,8190,8260,8260,
		8274,8274,8314,8316,8330,8332,8352,8384,8448,8449,8451,8454,8456,8457,
		8468,8468,8470,8472,8478,8483,8485,8485,8487,8487,8489,8489,8494,8494,
		8506,8507,8512,8516,8522,8525,8527,8527,8586,8587,8592,8967,8972,9000,
		9003,9254,9280,9290,9372,9449,9472,10087,10132,10180,10183,10213,10224,
		10626,10649,10711,10716,10747,10750,11123,11126,11157,11159,11263,11493,
		11498,11856,11857,11904,11929,11931,12019,12032,12245,12272,12283,12292,
		12292,12306,12307,12320,12320,12342,12343,12350,12351,12443,12444,12688,
		12689,12694,12703,12736,12771,12800,12830,12842,12871,12880,12880,12896,
		12927,12938,12976,12992,13311,19904,19967,42128,42182,42752,42774,42784,
		42785,42889,42890,43048,43051,43062,43065,43639,43641,43867,43867,43882,
		43883,64297,64297,64434,64450,64832,64847,64975,64975,65020,65023,65122,
		65122,65124,65126,65129,65129,65284,65284,65291,65291,65308,65310,65342,
		65342,65344,65344,65372,65372,65374,65374,65504,65510,65512,65518,65532,
		65533,65847,65855,65913,65929,65932,65934,65936,65948,65952,65952,66000,
		66044,67703,67704,68296,68296,71487,71487,73685,73713,92988,92991,92997,
		92997,113820,113820,118608,118723,118784,119029,119040,119078,119081,119140,
		119146,119148,119171,119172,119180,119209,119214,119274,119296,119361,
		119365,119365,119552,119638,120513,120513,120539,120539,120571,120571,
		120597,120597,120629,120629,120655,120655,120687,120687,120713,120713,
		120745,120745,120771,120771,120832,121343,121399,121402,121453,121460,
		121462,121475,121477,121478,123215,123215,123647,123647,126124,126124,
		126128,126128,126254,126254,126704,126705,126976,127019,127024,127123,
		127136,127150,127153,127167,127169,127183,127185,127221,127245,127405,
		127462,127490,127504,127547,127552,127560,127568,127569,127584,127589,
		127744,128727,128733,128748,128752,128764,128768,128883,128896,128984,
		128992,129003,129008,129008,129024,129035,129040,129095,129104,129113,
		129120,129159,129168,129197,129200,129201,129280,129619,129632,129645,
		129648,129652,129656,129660,129664,129670,129680,129708,129712,129722,
		129728,129733,129744,129753,129760,129767,129776,129782,129792,129938,
		129940,129994,2,0,9,9,32,32,275,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,
		0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,
		1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,
		0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,
		1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,1,85,1,0,0,
		0,3,87,1,0,0,0,5,89,1,0,0,0,7,91,1,0,0,0,9,103,1,0,0,0,11,106,1,0,0,0,
		13,110,1,0,0,0,15,112,1,0,0,0,17,115,1,0,0,0,19,117,1,0,0,0,21,120,1,0,
		0,0,23,129,1,0,0,0,25,131,1,0,0,0,27,133,1,0,0,0,29,135,1,0,0,0,31,139,
		1,0,0,0,33,145,1,0,0,0,35,149,1,0,0,0,37,151,1,0,0,0,39,153,1,0,0,0,41,
		155,1,0,0,0,43,157,1,0,0,0,45,159,1,0,0,0,47,162,1,0,0,0,49,165,1,0,0,
		0,51,171,1,0,0,0,53,180,1,0,0,0,55,189,1,0,0,0,57,198,1,0,0,0,59,206,1,
		0,0,0,61,219,1,0,0,0,63,226,1,0,0,0,65,236,1,0,0,0,67,239,1,0,0,0,69,242,
		1,0,0,0,71,251,1,0,0,0,73,256,1,0,0,0,75,265,1,0,0,0,77,267,1,0,0,0,79,
		269,1,0,0,0,81,273,1,0,0,0,83,86,3,3,1,0,84,86,3,9,4,0,85,83,1,0,0,0,85,
		84,1,0,0,0,86,2,1,0,0,0,87,88,7,0,0,0,88,4,1,0,0,0,89,90,7,1,0,0,90,6,
		1,0,0,0,91,92,7,2,0,0,92,8,1,0,0,0,93,94,5,92,0,0,94,95,5,117,0,0,95,96,
		1,0,0,0,96,104,3,21,10,0,97,98,5,92,0,0,98,99,5,85,0,0,99,100,1,0,0,0,
		100,101,3,21,10,0,101,102,3,21,10,0,102,104,1,0,0,0,103,93,1,0,0,0,103,
		97,1,0,0,0,104,10,1,0,0,0,105,107,3,17,8,0,106,105,1,0,0,0,107,108,1,0,
		0,0,108,106,1,0,0,0,108,109,1,0,0,0,109,12,1,0,0,0,110,111,7,3,0,0,111,
		14,1,0,0,0,112,113,5,48,0,0,113,114,7,4,0,0,114,16,1,0,0,0,115,116,7,5,
		0,0,116,18,1,0,0,0,117,118,5,48,0,0,118,119,7,6,0,0,119,20,1,0,0,0,120,
		121,3,17,8,0,121,125,3,17,8,0,122,123,3,17,8,0,123,124,3,17,8,0,124,126,
		1,0,0,0,125,122,1,0,0,0,125,126,1,0,0,0,126,22,1,0,0,0,127,130,3,25,12,
		0,128,130,7,7,0,0,129,127,1,0,0,0,129,128,1,0,0,0,130,24,1,0,0,0,131,132,
		7,8,0,0,132,26,1,0,0,0,133,134,7,9,0,0,134,28,1,0,0,0,135,136,7,10,0,0,
		136,30,1,0,0,0,137,140,7,11,0,0,138,140,3,29,14,0,139,137,1,0,0,0,139,
		138,1,0,0,0,140,32,1,0,0,0,141,146,3,23,11,0,142,146,3,31,15,0,143,146,
		7,12,0,0,144,146,3,27,13,0,145,141,1,0,0,0,145,142,1,0,0,0,145,143,1,0,
		0,0,145,144,1,0,0,0,146,147,1,0,0,0,147,145,1,0,0,0,147,148,1,0,0,0,148,
		34,1,0,0,0,149,150,5,64,0,0,150,36,1,0,0,0,151,152,5,123,0,0,152,38,1,
		0,0,0,153,154,5,125,0,0,154,40,1,0,0,0,155,156,5,91,0,0,156,42,1,0,0,0,
		157,158,5,93,0,0,158,44,1,0,0,0,159,160,5,64,0,0,160,161,5,123,0,0,161,
		46,1,0,0,0,162,163,5,64,0,0,163,164,5,125,0,0,164,48,1,0,0,0,165,166,3,
		35,17,0,166,167,5,99,0,0,167,168,5,111,0,0,168,169,5,100,0,0,169,170,5,
		101,0,0,170,50,1,0,0,0,171,172,3,35,17,0,172,173,5,101,0,0,173,174,5,110,
		0,0,174,175,5,100,0,0,175,176,5,99,0,0,176,177,5,111,0,0,177,178,5,100,
		0,0,178,179,5,101,0,0,179,52,1,0,0,0,180,184,3,49,24,0,181,183,9,0,0,0,
		182,181,1,0,0,0,183,186,1,0,0,0,184,185,1,0,0,0,184,182,1,0,0,0,185,187,
		1,0,0,0,186,184,1,0,0,0,187,188,3,51,25,0,188,54,1,0,0,0,189,190,3,35,
		17,0,190,191,5,112,0,0,191,192,5,114,0,0,192,193,5,105,0,0,193,194,5,118,
		0,0,194,195,5,97,0,0,195,196,5,116,0,0,196,197,5,101,0,0,197,56,1,0,0,
		0,198,199,3,35,17,0,199,200,5,114,0,0,200,201,5,101,0,0,201,202,5,116,
		0,0,202,203,5,118,0,0,203,204,5,97,0,0,204,205,5,108,0,0,205,58,1,0,0,
		0,206,207,3,35,17,0,207,208,5,112,0,0,208,209,5,97,0,0,209,210,5,114,0,
		0,210,211,5,97,0,0,211,212,5,109,0,0,212,217,1,0,0,0,213,214,3,41,20,0,
		214,215,3,71,35,0,215,216,3,43,21,0,216,218,1,0,0,0,217,213,1,0,0,0,217,
		218,1,0,0,0,218,60,1,0,0,0,219,220,3,35,17,0,220,221,5,98,0,0,221,222,
		5,114,0,0,222,223,5,105,0,0,223,224,5,101,0,0,224,225,5,102,0,0,225,62,
		1,0,0,0,226,227,3,35,17,0,227,228,5,116,0,0,228,229,5,104,0,0,229,230,
		5,114,0,0,230,231,5,111,0,0,231,232,5,119,0,0,232,234,1,0,0,0,233,235,
		5,115,0,0,234,233,1,0,0,0,234,235,1,0,0,0,235,64,1,0,0,0,236,237,3,35,
		17,0,237,238,5,112,0,0,238,66,1,0,0,0,239,240,3,35,17,0,240,241,5,99,0,
		0,241,68,1,0,0,0,242,243,3,35,17,0,243,248,3,71,35,0,244,245,3,41,20,0,
		245,246,3,71,35,0,246,247,3,43,21,0,247,249,1,0,0,0,248,244,1,0,0,0,248,
		249,1,0,0,0,249,70,1,0,0,0,250,252,3,33,16,0,251,250,1,0,0,0,252,253,1,
		0,0,0,253,251,1,0,0,0,253,254,1,0,0,0,254,72,1,0,0,0,255,257,7,13,0,0,
		256,255,1,0,0,0,257,258,1,0,0,0,258,256,1,0,0,0,258,259,1,0,0,0,259,260,
		1,0,0,0,260,261,6,36,0,0,261,74,1,0,0,0,262,263,5,13,0,0,263,266,5,10,
		0,0,264,266,5,10,0,0,265,262,1,0,0,0,265,264,1,0,0,0,266,76,1,0,0,0,267,
		268,5,42,0,0,268,78,1,0,0,0,269,270,5,47,0,0,270,271,5,42,0,0,271,272,
		5,33,0,0,272,80,1,0,0,0,273,274,5,42,0,0,274,275,5,47,0,0,275,82,1,0,0,
		0,16,0,85,103,108,125,129,139,145,147,184,217,234,248,253,258,265,1,0,
		1,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
